Ò».Ç¶ÈëÊœlinuxÉè±žÇý¶¯¿ª·¢Ïà¹ØÄÚÈÝ
<<LinuxÉè±žÇý¶¯³ÌÐò>>µÚÈý°æ
<<LinuxÄÚºËÉèŒÆÓëÊµÏÖ>>µÚÈý°æ
<<žúÎÒÒ»ÆðÐŽMakefile>>µç×Óµµ

¹ØÓÚSecureCRTÔ¶³ÌµÇÂŒlinuxÏµÍ³µÄÅäÖÃ¹ý³Ì£º
Žò¿ª¿ìËÙÁ¬œÓ->Ð­Òé£ºssh2          
              Ö÷»úÃû£º192.168.1.8
              ÓÃ»§Ãû£ºtarena
->±£Žæ->ÊäÈëÃÜÂë->ÅäÖÃSecureCRT->»á»°Ñ¡Ïî->·ÂÕæ->ÖÕ¶Ë£ºANSI
                                                       Ê¹ÓÃÑÕÉ«·œ°žÑ¡ÖÐ
->Íâ¹Û£ºÉèÖÃ×ÔŒºÏ²»¶µÄ×ÖÌåCourier New
	×Ö·û±àÂë£ºUTF-8
	±£Žæ
->ÖØÐÂSecureCRTŒŽ¿É                                    

ÃæÊÔÌâ£ºÈçºÎ¿ª·¢Ò»žölinuxÓ²ŒþÉè±žÇý¶¯£¿
ÓÑÇéÌáÊŸ£ºÇ¶ÈëÊœlinuxÏµÍ³Ò»µ©ÔËÐÐÆðÀŽÒÔºó,Òª»šžü¶àµÄÊ±Œä   
          ºÍŸ«ÁŠ·ÅÔÚ¿ª·¢°åÉÏµÄÍâÉèÓ²ŒþµÄÉè±žÇý¶¯³ÌÐòÉÏ,
          Èç¹ûÕâžöÍâÉèÓÐÁËÇý¶¯,ÐèÒªœøÐÐ²âÊÔ,²âÊÔµÄÇ°ÌáÊÇ
          ÄãÒª¿ŽµÃ¶®£»
          Èç¹ûÕâžöÍâÉèÃ»ÓÐÇý¶¯,ÒªœøÐÐÕâžöÍâÉèÓ²ŒþµÄÉè±žÇý¶¯¿ª·¢

1. Éè±žÇý¶¯žÅÄî
   Ò»žöÇý¶¯µÄ¹ØŒüÁœžöÄÚÈÝ£º
   1.œ«Ó²ŒþµÄÕûžö²Ù×÷¹ý³ÌœøÐÐ·â×°
   2.±ØÐëÄÜ¹»žøÓÃ»§Ìá¹©·ÃÎÊ²Ù×÷Ó²ŒþµÄœÓ¿Ú(º¯Êý)
     œ«ÀŽÓÃ»§µ÷ÓÃº¯ÊýÄÜ¹»Ëæ±ã·ÃÎÊÓ²Œþ

2.linuxÏµÍ³µÄÁœžö¿ÕŒä(ÁœÖÖ×ŽÌ¬)£ºÓÃ»§¿ÕŒäºÍÄÚºË¿ÕŒä(ÁËœâŒŽ¿É)
  ÓÃ»§¿ÕŒä£º
  	ÓÖ³ÆÓÃ»§Ì¬
  	°üº¬µÄÈíŒþŸÍÊÇž÷ÖÖÃüÁî,ž÷ÖÖÓŠÓÃ³ÌÐò,ž÷ÖÖ¿â,ž÷ÖÖÅäÖÃ·þÎñµÈ
  	ÓÃ»§¿ÕŒäµÄÈíŒþÔÚÔËÐÐµÄÊ±ºò,CPUµÄ¹€×÷Ä£ÊœÎªUSERÄ£Êœ
  	ÓÃ»§¿ÕŒäµÄÈíŒþ²»ÄÜ·ÃÎÊÓ²ŒþÉè±žµÄÎïÀíµØÖ·,Èç¹ûÒª·ÃÎÊÓ²ŒþÎïÀíµØÖ·
  	±ØÐëœ«Ó²ŒþÍâÉèµÄÎïÀíµØÖ·Ó³ÉäµœÓÃ»§¿ÕŒäµÄÐéÄâµØÖ·ÉÏ
  	ÓÃ»§¿ÕŒäµÄÈíŒþ²»ÄÜÖ±œÓ·ÃÎÊÄÚºË¿ÕŒäµÄŽúÂë,µØÖ·ºÍÊýŸÝ
  	ÓÃ»§¿ÕŒäµÄÈíŒþÈç¹ûœøÐÐ·Ç·šµÄÄÚŽæ·ÃÎÊ,²»»áµŒÖÂ²Ù×÷ÏµÍ³±ÀÀ£
  	µ«ÊÇÓŠÓÃÈíŒþ»á±»²Ù×÷ÏµÍ³žÉµô(ÀýÈç£º*(int *)0=0)
  	ÓÃ»§¿ÕŒäµÄÈíŒþÀàËÆÂÛÌ³µÄÆÕÍšÓÃ»§
  	ÓÃ»§¿ÕŒäµÄÐéÄâµØÖ·¿ÕŒäŽóÐ¡Îª3G(0x00000000~0xBFFFFFFF)
  ÄÚºË¿ÕŒä£º
  	ÓÖ³ÆÄÚºËÌ¬
  	ÄÚºË¿ÕŒäµÄÈíŒþŸÍÊÇÄÚºËÔŽÂë(zImage)
  	ÄÚºËŽúÂëÔËÐÐÊ±,CPUµÄ¹€×÷Ä£ÊœÎªSVCÄ£Êœ
  	ÄÚºË¿ÕŒäŽúÂëÍ¬Ñù²»ÄÜ·ÃÎÊÓ²ŒþÍâÉèµÄÎïÀíµØÖ·,±ØÐëœ«ÎïÀíµØÖ·
  	Ó³ÉäµœÄÚºË¿ÕŒäµÄÐéÄâµØÖ·ÉÏ
  	ÄÚºËŽúÂëÈç¹ûœøÐÐ·Ç·šµÄÄÚŽæ·ÃÎÊ,²Ù×÷ÏµÍ³»áÖ±œÓ±ÀÀ£(ÍÂºË)
  	(ÀýÈç£º*(int *)0=0)
  	ÄÚºË¿ÕŒäµÄÈíŒþÀàËÆÂÛÌ³µÄ¹ÜÀíÔ±
  	ÄÚºË¿ÕŒäµÄÐéÄâµØÖ·¿ÕŒäŽóÐ¡Îª1G(0xC0000000~0xFFFFFFFF)

3.linuxÏµÍ³Éè±žÇý¶¯·ÖÀà
  ×Ö·ûÉè±žÇý¶¯
  	×Ö·ûÉè±ž·ÃÎÊÊ±°ŽÕÕ×ÖœÚÁ÷ÐÎÊœ·ÃÎÊ
  	ÀýÈç£ºLED,°ŽŒü,UARTœÓ¿ÚÉè±ž(BT,GPS,GPRS),Ž¥ÃþÆÁ
  	      LCD,Éù¿š,ÉãÏñÍ·,ž÷ÖÖŽ«žÐÆ÷
  ¿éÉè±žÇý¶¯
  	¿éÉè±ž·ÃÎÊÊ±°ŽÕÕÒ»¶šµÄÊýŸÝ¿éœøÐÐ·ÃÎÊ,ÊýŸÝ¿é±ÈÈçÎª
  	512×ÖœÚ,1KB×ÖœÚ
  	ÀýÈç£ºÓ²ÅÌ,UÅÌ,SD¿š,TF¿š,Nor,NandµÈ
  	
  ÍøÂçÉè±žÇý¶¯  
  	ÍøÂçÉè±žÇý¶¯·ÃÎÊÊ±ÐèÒªÅäºÏTCP/IPÐ­ÒéÕ»œøÐÐ·ÃÎÊ
  	Çý¶¯Ò»°ãÓÉÐŸÆ¬³§ŒÒÌá¹©,Çý¶¯¿ª·¢ÕßÐèÒªœøÐÐÒÆÖ²
  	ÀýÈç£ºDM9000Íø¿š»ùµØÖ·
  	   
4.linux×Ö·ûÉè±žÇý¶¯¿ª·¢Ïà¹ØÄÚÈÝ
  4.0.Ã÷È·²»¹ÜÊ²ÃŽÇý¶¯,ËüÃÇ¶ŒÊÇÄÚºË³ÌÐò
  4.1.Ã÷È·linuxÄÚºË³ÌÐò±à³Ì»ù±Ÿ¿òŒÜ
  »ØÒä£ºÓŠÓÃ³ÌÐò±à³Ì¿òŒÜ
  vim helloworld.c
  #include <stdio.h> //±ê×ŒCÍ·ÎÄŒþ
  
  //main£º³ÌÐòµÄÈë¿Úº¯Êý
  int main(int argc, char *argv[])
  {
  	//±ê×ŒC¿âº¯Êý
  	printf("hello,world\n");
  	
  	//³ÌÐòµÄ³ö¿Ú
  	return 0;
  }
  
  ÄÚºË³ÌÐò²Î¿ŒŽúÂë£º
  mkdir /opt/drivers/day01/1.0 -p
  cd /opt/drivers/day01/1.0 
  vim helloworld.c ÌíŒÓµÚÒ»žöÄÚºË³ÌÐò
  #include <linux/init.h>
  #include <linux/module.h>
  static int helloworld_init(void)
  {
  	printk("hello,world\n");
  	return 0;
  }
  static void helloworld_exit(void)
  {
  	printk("good bye world!\n");
  }
  module_init(helloworld_init);
  module_exit(helloworld_exit);
  MODULE_LICENSE("GPL");
  ËµÃ÷£º
  1.ÄÚºË³ÌÐòÊ¹ÓÃµÄÍ·ÎÄŒþÎ»ÓÚlinuxÄÚºËÔŽÂëÖÐ(/opt/kernel)
  2.ÄÚºË³ÌÐòµÄÈë¿Úº¯ÊýÐèÒªÊ¹ÓÃmodule_initºêœøÐÐÐÞÊÎ,ÀýÈç
    helloworld_initº¯ÊýŸÍÊÇŽËÄÚºË³ÌÐòµÄÈë¿Úº¯Êý,œ«ÀŽŒÓÔØ
    °²×°Çý¶¯Ê±(insmod),ÄÚºË»áµ÷ÓÃŽËº¯Êý£»
    ŽËº¯ÊýµÄ·µ»ØÖµ±ØÐëÎªintÐÍ,ÖŽÐÐ³É¹Š·µ»Ø0,ÖŽÐÐÊ§°Ü·µ»ØžºÖµ
  3.ÄÚºË³ÌÐòµÄ³ö¿Úº¯ÊýÐèÒªÊ¹ÓÃmodule_exitºêœøÐÐÐÞÊÎ,ÀýÈç
    helloworld_exitº¯ÊýŸÍÊÇŽËÄÚºË³ÌÐòµÄ³ö¿Úº¯Êý,œ«ÀŽÐ¶ÔØ
    Çý¶¯(rmmod)Ê±,ÄÚºË»áµ÷ÓÃŽËº¯Êý
  4.ÈÎºÎÒ»žöÄÚºË³ÌÐòÔŽÂë(.cœáÎ²)±ØÐëÌíŒÓMODULE_LICENSE("GPL")
    ÕâŸä»°,ŸÍÊÇžæËßÄÚºË,ŽËÄÚºË³ÌÐòÍ¬Ñù×ñÑ­GPLÐ­Òé,·ñÔòºó¹û
    ºÜÑÏÖØ
  5.ÄÚºËŽòÓ¡º¯ÊýÊ¹ÓÃprintk,ŽËº¯Êý¶šÒå²»ÔÙC¿âÖÐ,¶øÊÇÔÚÄÚºË
    ÔŽÂëÖÐ
  6.œáÂÛ£º±àÒëÄÚºË³ÌÐò¿Ï¶šÐèÒª¹ØÁªÄÚºËÔŽÂë
  
  4.2.ÄÚºË³ÌÐòµÄ±àÒë
  »Ø¹Ë£ºÓŠÓÃ³ÌÐòµÄ±àÒë
        gcc -o helloworld helloworld.c
        ±àÐŽMakefile,make±àÒëŒŽ¿É
  ÄÚºË³ÌÐò±àÒë£º
  »Ø¹Ëled_drv.c±àÒë²œÖè£º
  1.Ÿ²Ì¬±àÒë
    ¿œ±ŽÄÚºË³ÌÐòµœÄÚºËÔŽÂëÖÐ
    ÐÞžÄKconfig
    ÐÞžÄMakfile
    make menuconfig //Ñ¡ÔñÎª*
    make zImage (led_drv.c°üº¬ÔÚzImageÀïÃæ)
  2.Ä£¿é»¯±àÒë
    ¿œ±ŽÄÚºË³ÌÐòµœÄÚºËÔŽÂëÖÐ
    ÐÞžÄKconfig
    ÐÞžÄMakfile
    make menuconfig //Ñ¡ÔñÎªM
    make zImage 
    make modules //œ«led_drv.c->led_drv.ko
    insmod
    rmmod
  3.Ä£¿é»¯±àÒë·œ·š2£º
    ËŒÏëŸÍÊÇÎÞÐè°ÑÄÚºË³ÌÐò¿œ±ŽµœÄÚºËÔŽÂëÖÐ
    ÎÞÐèÐÞžÄKconfigºÍMakefile
    ÎÞÐèmake menuconfig 
    ÎÞÐèmake zImage
    Ö»ÐèÒ»žöÐ¡Ð¡µÄMakeifleŒŽ¿Éžã¶š£º
    ËÀŒÇÒ»ÏÂ²Î¿ŒŽúÂë£º
    cd /opt/drivers/day01/1.0
    vim Makefile ÌíŒÓÈçÏÂÄÚÈÝ£º
    obj-m += helloworld.o  #²ÉÓÃÄ£¿é»¯±àÒë,helloworld.c->helloworld.ko
    #ÖŽÐÐÃüÁîmake all»òÕßmake,ÖŽÐÐ¶ÔÓŠµÄÃüÁîmake -C ...
    all:
    	make -C /opt/kernel SUBDIRS=$(PWD) modules  
        #make -C /opt/kernel=cd /opt/kernel && make
        #SUBDIRS=/opt/drivers/day01/1.0,žæËßÄÚºËÔŽÂë,ÔÚÄÚºËÔŽÂëÖ®Íâ»¹ÓÐÒ»žöÄ¿ÂŒ×÷Îª×ÓÄ¿ÂŒ
        #modules£º¶Ô1.0Õâžö×ÓÄ¿ÂŒÏÂµÄÄÚºË³ÌÐò²ÉÓÃÄ£¿é»¯±àÒë
    clean£º
    	make -C /opt/kernel SUBDIRS=$(PWD) clean
    	#œ«×ÓÄ¿ÂŒ1.0µÄ³ÌÐòœøÐÐmake clean²Ù×÷
    ±£ŽæÍË³ö
    make //±àÒë
    ls
      helloworld.ko //±àÒë³É¹û
    cp helloworld.ko /opt/rootfs/
    
    ¿ª·¢°å²âÊÔ£º
    ÖØÆô¿ª·¢°å,œøÈëuboot,ÈÃÄÚºËŒÓÔØ²ÉÓÃtftp,ÈÃÄÚºËÆô¶¯²ÉÓÃnfs
    setenv bootcmd tftp 20008000 zImage \; bootm 20008000
    setenv bootargs root=/dev/nfs nfsroot=192.168.1.8:/opt/rootfs ...  
    savenv
    boot //Æô¶¯
    Æô¶¯ÒÔºó£º
    insmod helloworld.ko //°²×°ÄÚºË³ÌÐò,ÄÚºËÖŽÐÐÈë¿Úº¯Êýhelloworld_init  
    lsmod //²é¿ŽÄÚºË³ÌÐòµÄ°²×°ÐÅÏ¢
    rmmod helloworld //Ð¶ÔØÄÚºË³ÌÐò,ÄÚºËÖŽÐÐ³ö¿Úº¯Êýhelloworld_exit

4.2.linuxÄÚºË³ÌÐò±à³ÌÖ®ÃüÁîÐÐŽ«²Î  
1.»ØÒäÓŠÓÃ³ÌÐòµÄÃüÁîÐÐŽ«²Î
  vim helloworld.c
  #include <stdio.h>   
  int main(int argc, char *argv[])
  {
  	int a;
  	int b;
  	
  	if (argc != 3) {
  	   printf("ÓÃ·š: %s num1 num2\n", argv[0]);
  	   return -1;
  	}
  	
  	//"100"->100
  	a = strtoul(argv[1], NULL, 0);
	b = strtoul(argv[2], NULL, 0);
	
	printf("a = %d, b = %d\n", a, b);
  	return 0;
  } 
  gcc -o helloworld helloworld.c 
  ./helloworld 100 200
  ·ÖÎö£º
  argc = 3
  argv[0] = "./helloworld"
  argv[1] = "100"
  argv[2] = "200" 	 
  È±µã£ºÒ»µ©³ÌÐòÆô¶¯,ºóÐòŸÍÃ»·šÔÙŽÎŽ«µÝÐÂµÄ²ÎÊý
  
  ÄÚºË³ÌÐòµÄÃüÁîÐÐŽ«²ÎÊµÏÖ¹ý³Ì£º
  1.ÄÚºË³ÌÐòµÄÃüÁîÐÐŽ«²ÎÊ±,œÓÊÕ²ÎÊýµÄÄÚºË³ÌÐò±äÁ¿±ØÐëÊÇ
    È«ŸÖ±äÁ¿
  2.±äÁ¿µÄÊýŸÝÀàÐÍ±ØÐëÊÇ»ù±ŸµÄÊýŸÝÀàÐÍ,œá¹¹Ìå²»ÐÐ
  3.Èç¹ûÒªžøÄÚºË³ÌÐòµÄÄ³žöÈ«ŸÖ±äÁ¿Ž«µÝ²ÎÊý,ÐèÒªÄÚºË³ÌÐò
    ÏÔÊœµÄœøÐÐŽ«²ÎÉùÃ÷,Ž«²ÎÉùÃ÷µÄºê£º
    module_param(name, type, perm)
    name£ºœÓÊÕ²ÎÊýµÄÄÚºËÈ«ŸÖ±äÁ¿Ãû
    type: ±äÁ¿µÄÊýŸÝÀàÐÍ£º
          bool invbool
          short ushort
          int uint
          long ulong
          charp(=char *)
          ÇÐŒÇ£ºÄÚºË²»ÔÊÐíŽŠÀíž¡µãÊý(float,double)
          ÀýÈç£º2.3*3.2 
                23*32/100
                ž¡µãÊýµÄÔËËã·ÅÔÚÓÃ»§¿ÕŒäµÄÓŠÓÃ³ÌÐòÀŽœøÐÐ
    perm£º±äÁ¿µÄ·ÃÎÊÈšÏÞ(rwx)
          ÀýÈç£º0664
          ×¢Òâ£º²»ÔÊÐíÓÐ¿ÉÖŽÐÐÈšÏÞ(x=1)
   
   °žÀý£º±àÐŽÄÚºË³ÌÐò,ÊµÏÖÄÚºË³ÌÐòµÄÃüÁîÐÐŽ«²Î
   ÊµÊ©²œÖè£º
   ÐéÄâ»úÖŽÐÐ£º
   1.mkdir /opt/drivers/day01/2.0 -p
     cd /opt/drivers/day01/2.0
   3.vim helloworld.c ÌíŒÓÈçÏÂÄÚÈÝ
   4.vim Makefile ÌíŒÓÈçÏÂÄÚÈÝ
   5.make
     helloworld.ko
   6.cp helloworld.ko /opt/rootfs/
   
   linuxÏµÍ³µ÷ÊÔºê£º
   __FILE__
   __LINE__
   __FUNCITION__/__func__
   __DATE__
   __TIME__
   
   ARM°åÖŽÐÐ£º
   1.²»Ž«µÝ²ÎÊý
     insmod helloworld.ko
     lsmod
     rmmod helloworld
   
   2.ŒÓÔØ°²×°ÄÚºË³ÌÐòÊ±Ž«µÝ²ÎÊý
     insmod helloworld.ko irq=100 pstring=china
     lsmod
     rmmod helloworld 
     
   3.ŒÓÔØ°²×°ÄÚºË³ÌÐòÒÔºóŽ«µÝ²ÎÊý
     insmod helloworld.ko irq=100 pstring=china	                 
     //¶ÁÈ¡ÎÄŒþirqµÄÄÚÈÝ
     cat /sys/module/helloworld/parameters/irq 
     ls /sys/module/helloworld/parameters/pstring  //Ã»ÓÐŽËÎÄŒþ
     //ÏòÎÄŒþirqÖØÐÂÐŽÈëÒ»žöÐÂÄÚÈÝ
     echo 20000 > /sys/module/helloworld/parameters/irq 
     rmmod helloworld
     
     œáÂÛ£º
     1.Èç¹ûŽ«²ÎÉùÃ÷Ê±,ÈšÏÞÎª·Ç0,ÄÇÃŽÔÚ/sys/...../parameters
       »áÉú³ÉÒ»žöžú±äÁ¿ÃûÍ¬ÃûµÄÎÄŒþ,ÎÄŒþÄÚÈÝŸÍÊÇ±äÁ¿µÄÖµ
     2.Íš¹ýÐÞžÄÎÄŒþµÄÄÚÈÝŸÍ¿ÉÒÔŒäœÓÐÞžÄ±äÁ¿µÄÖµ
     3.Èç¹ûÈšÏÞÎª0,ÄÇÃŽÔÚ/sys/.../parametersÏÂŸÍ²»»á
       Éú³ÉÍ¬ÃûµÄÎÄŒþ,Õâžö±äÁ¿µÄŽ«²ÎÖ»ÄÜÔÚ³ÌÐòŒÓÔØÊ±œøÐÐ
     4.×¢Òâ£º/sys/Ä¿ÂŒÏÂËùÓÐµÄÄÚÈÝ¶ŒÊÇÄÚºËŽŽœš,ŽæÔÚÓÚ
       ÄÚŽæÖÐ,œ«ÀŽÈç¹ûÃ»ÓÐÄÚºË³ÌÐòŒÓÔØÒÔºóŽ«µÝ²ÎÊýµÄÐèÇó
       ÈšÏÞ±ØÐëÒ»ÂÉžø0,Ä¿µÄÎªÁËœÚÊ¡ÄÚŽæ×ÊÔŽ£¡

4.3.linuxÄÚºË³ÌÐò±à³ÌÖ®ÄÚºË·ûºÅµŒ³ö  
»ØÒä£ºÓŠÓÃ³ÌÐò¶àÎÄŒþÖ®ŒäµÄµ÷ÓÃ
²Î¿ŒŽúÂë£º
mkdir /opt/drivers/day01/3.0
cd /opt/drivers/day01/3.0
vim test.h //ÉùÃ÷
#ifndef __TEST_H
#define __TEST_H

extern void test(void);

#endif     

vim test.c //¶šÒå
#include <stdio.h>
void test(void)
{
	printf("%s\n", __func__);
}

vim main.c //µ÷ÓÃ
#include <stdio.h>
#include "test.h"

int main(void)
{
	test();//µ÷ÓÃ
	return 0;
}

±àÒë£º
arm-linux-gcc -fpic -shared -o libtest.so test.c
arm-linux-gcc -o main main.c -L. -ltest
mkdir /opt/rootfs/home/applib
cp libtest.so /opt/rootfs/home/applib
cp main /opt/rootfs/home/applib

¿ª·¢°å²âÊÔ£º
export LD_LIBRARY_PATH=/home/applib:$LD_LIBRARY_PATH
/home/applib/main

ÄÚºË³ÌÐò¶àÎÄŒþµÄµ÷ÓÃÊµÏÖ¹ý³Ì£º
1.ÄÚºË³ÌÐò¶àÎÄŒþµÄµ÷ÓÃÊµÏÖ¹ý³ÌºÍÓŠÓÃ³ÌÐò¶àÎÄŒþµÄµ÷ÓÃÊµÏÖ
  ¹ý³ÌÒ»Ä£Ò»Ñù:žÃÉùÃ÷µÄÉùÃ÷,žÃ¶šÒåµÄ¶šÒå,žÃµ÷ÓÃµÄµ÷ÓÃ
2.»¹ÐèÒªÏÔÊœµÄœøÐÐ·ûºÅ(º¯ÊýÃû»òÕß±äÁ¿Ãû)µÄµŒ³ö
  µŒ³ö·ûºÅµÄºê£º
  EXPORT_SYMBOL(º¯ÊýÃû»òÕß±äÁ¿Ãû);
  »òÕß
  EXPORT_SYMBOL_GPL(º¯ÊýÃû»òÕß±äÁ¿Ãû);
  Ç°ÕßµŒ³öµÄ±äÁ¿ºÍº¯Êý,²»¹ÜÆäËûÄÚºË³ÌÐòÊÇ·ñÌíŒÓ£ºMODULE_LICENSE("GPL")
  ¶ŒÄÜ·ÃÎÊµ÷ÓÃ£»
  ºóÕßµŒ³öµÄ±äÁ¿ºÍº¯Êý,Ö»ÄÜžøÄÇÐ©ÌíŒÓÁËMODULE_LICENSE("GPL")µÄÄÚºË³ÌÐò·ÃÎÊ

°žÀý£º±àÐŽÄÚºË³ÌÐò,ÕÆÎÕÄÚºËµÄ·ûºÅµŒ³öÖªÊ¶µã
ÊµÊ©²œÖè£º
ÐéÄâ»úÖŽÐÐ£º
mkdir /opt/drivers/day01/4.0 
cd /opt/drivers/day01/4.0
vim test.h ÌíŒÓÈçÏÂÄÚÈÝ
#ifndef __TEST_H
#define __TEST_H

//º¯ÊýÉùÃ÷
extern void test(void);

#endif  
±£ŽæÍË³ö

vim test.c ÌíŒÓÈçÏÂÄÚÈÝ
#include <linux/init.h>
#include <linux/module.h>

//º¯Êý¶šÒå 
void test(void)
{
	printk("%s\n");
}

//ÏÔÊœµÄœøÐÐµŒ³ö
EXPORT_SYMBOL(test);

EXPORT_SYMBOL_GPL(test);

//ÌíŒÓ×ñÑ­GPLÐ­ÒéµÄÐÅÏ¢
MODULE_LICENSE("GPL");

±£ŽæÍË³ö

vim helloworld.c ÌíŒÓÈçÏÂÄÚÈÝ
#include <linux/init>
#include <linux/module.h>

static int helloworld_init(void)
{
	test(); //µ÷ÓÃ
	printk("%s\n", __func__);
	return 0;
}

static void helloworld_exit(void)
{
	test(); //µ÷ÓÃ
	printk("%s\n", __func__);
}

module_init(helloworld_init);
module_exit(helloworld_exit);

MODULE_LICENSE("GPL");

±£ŽæÍË³ö

ÐÞžÄMakefile,ÌíŒÓ¶Ôtest.cµÄ±àÒëÖ§³Ö
obj-m += helloworld.o test.o
»òÕß
obj-m += helloworld.o
obj-m += test.o

make //¿ªÊŒ±àÒë
test.ko helloworld.ko

mkdir /opt/rootfs/home/drivers/ //ŽŽœšÇý¶¯Ä¿±êÎÄŒþµÄŽæ·ÅÄ¿ÂŒ
cp *.ko /opt/rootfs/home/drivers/


¿ª·¢°å²âÊÔ£º
1.insmod /home/drivers/?
2.insmod /home/drivers/?
3.rmmod ?
4.rmmod ?


°žÀý£ºÀûÓÃEXPORT_SYMBOL_GPLœøÐÐ·ûºÅµŒ³ö,×ö¶Ô±È²âÊÔ

-----------------------------------------------------------------------
»Ø¹Ë£º
1.linuxÄÚºËÉè±žÇý¶¯¿ª·¢Ïà¹Ø»ùŽ¡
  1.1.Éè±žÇý¶¯ÁœŽóºËÐÄËŒÏë
  1.2.linuxÄÚºËÉè±žÇý¶¯µÄ·ÖÀà
  1.3.linuxÏµÍ³°üº¬µÄÁœžö¿ÕŒä£ºÓÃ»§¿ÕŒäºÍÄÚºË¿ÕŒä
  1.4.linuxÄÚºË³ÌÐòµÄ±à³Ì¿òŒÜ
  1.5.linuxÄÚºË³ÌÐòµÄÃüÁîÐÐŽ«²Î
  1.6.linuxÄÚºË³ÌÐòµÄ·ûºÅµŒ³ö

2.linuxÄÚºË³ÌÐòµÄŽòÓ¡º¯Êýprintk
  2.1.printk VS printf
  ÏàÍ¬µã£º
  	¶ŒÊÇÓÃÓÚŽòÓ¡ÐÅÏ¢
  	ÓÃ·šÍêÈ«Ò»ÖÂ
  ²»Í¬µã£º
  	Ç°ÕßÖ»ÄÜÓÃÓÚÄÚºË¿ÕŒä
  	ºóÕßÖ»ÄÜÓÃÓÚÓÃ»§¿ÕŒä
  	Ç°ÕßÄÜ¹»Öž¶šŽòÓ¡Êä³öŒ¶±ð
  	
  2.2.printkµÄŽòÓ¡Êä³öŒ¶±ð
  Œ¶±ð¹²8Œ¶:0~7,Êý×ÖÔœŽó,Êä³öŒ¶±ðÔœÐ¡
  #define  KERN_EMERG	"<0>" //ÏµÍ³±ÀÀ£Ê±ÐèÒªŽòÓ¡
  #define  KERN_ALERT	"<1>" //Á¢ŒŽÐèÒªŽŠÀí
  #define  KERN_CRIT	"<2>" //ÑÏÖØÎÊÌâ
  #define  KERN_ERR	"<3>" //ŽíÎóÐÅÏ¢
  #define  KERN_WARNING	"<4>" //Ÿ¯žæ
  #define  KERN_NOTICE	"<5>" //Õý³£µ«»¹ÐèÒªÒýÆð×¢Òâ
  #define  KERN_INFO	"<6>" //ÐÅÏ¢
  #define  KERN_DEBUG	"<7>" //¶îÍâµÄµ÷ÊÔÐÅÏ¢
  ÓÃ·š£º
  printk(KERN_ERR "this is a error msg!\n");
  »òÕß
  printk("<3>" "this is a error msg!\n");
  
  2.3.ÎÊ£ºÊµŒÊ²úÆ·ÔÚ·¢²ŒµÄÊ±ºò,ÓÐÐ©ÐÅÏ¢ÊÇÃ»ÓÐ±ØÒªÊä³öµÄ,
      ÓÐÐ©ÐÅÏ¢¿ÉÄÜÐèÒªœøÐÐŽòÓ¡Êä³ö,Ö»ÐèÉèÖÃÒ»žöÄ¬ÈÏµÄ
      ŽòÓ¡Êä³öŒ¶±ð(ÀàËÆË®Î»µÄŸ¯œäÏß)œøÐÐ¿ØÖÆÐÅÏ¢ÊÇ·ñÊä³ö
      Èç¹ûprintkÖž¶šµÄÊä³öŒ¶±ðŽóÓÚÄ¬ÈÏµÄŽòÓ¡Êä³öŒ¶±ð,ŽËÐÅÏ¢
      Êä³ö,·ñÔò²»Êä³ö,ÈçºÎÉèÖÃÄ¬ÈÏµÄŽòÓ¡Êä³öŒ¶±ðÄØ£¿
      Žð£ºÍš¹ýÁœÖÖ·œ·šœøÐÐÅäÖÃ
      
  ·œ·š1£ºÍš¹ýÐÞžÄprintkŽòÓ¡Êä³öŒ¶±ðµÄÅäÖÃÎÄŒþ
         /proc/sys/kernel/printk
  °žÀý£ºÁ·Ï°·œ·š1
  ÊµÊ©²œÖè£º
  ÐéÄâ»úÖŽÐÐ£º
  1.mkdir /opt/drivers/day02/1.0 -p
  2.cd /opt/drivers/day02/1.0
  3.vim printk_all.c
  4.vim Makefile
  5.make
    cp printk_all.ko /opt/rootfs/home/drivers
  
  ARM°åÖŽÐÐ£º
  0.cd /home/drivers
  1.insmod printk_all.ko //²é¿ŽŽòÓ¡ÐÅÏ¢
  2.rmmod printk_all.ko //²é¿ŽŽòÓ¡ÐÅÏ¢
  3.²é¿Žµ±Ç°ÄÚºËprintkµÄÄ¬ÈÏŽòÓ¡Êä³öŒ¶±ð
    cat /proc/sys/kernel/printk
    7(Ž®¿ÚÖÕ¶ËÉè±ž¶ÔÓŠµÄÊä³öŒ¶±ð)       4       1       7
  4.ÐÞžÄÅäÖÃÎÄŒþÀŽÐÞžÄÄ¬ÈÏŽòÓ¡Êä³öŒ¶±ð
    echo 8 > /proc/sys/kernel/printk
    cat /proc/sys/kernel/printk
  5.insmod printk_all.ko
    rmmod printk_all
    
  6.œáÂÛ£º·œ·š1²»ÄÜœâŸöÄÚºËÆô¶¯Ê±ºòµÄŽòÓ¡ÐÅÏ¢,ÀýÈç£º²»ÄÜ
          ÍêÈ«œ«ÄÚºËÐÅÏ¢œøÐÐÆÁ±Î
  
  ·œ·š2£ºÍš¹ýÐÞžÄÄÚºËµÄÆô¶¯²ÎÊý,ÀŽÉèÖÃÄ¬ÈÏµÄŽòÓ¡Êä³öŒ¶±ð
  °žÀý£ºÁ·Ï°·œ·š2
  ÊµÊ©²œÖè£º
  1.ÖØÆô¿ª·¢°å,œøÈëubootÃüÁîÐÐÄ£Êœ,ÖŽÐÐ£º
    setenv bootargs root=/dev/nfs nfsroot=192.168.1.8:/opt/rootfs ip=192.168.1.110:192.168.1.8:192.168.1.1:255.255.255.0::eth0:on init=/linuxrc console=ttySAC0,115200 debug
    boot
  2.ÏµÍ³Æô¶¯
    cd /home/drivers/
    insmod printk_all.ko
    rmmod printk_all
    cat /proc/sys/kernel/printk
    œáÂÛ£ºdebug¶ÔÓŠµÄŒ¶±ðÎª10
  
  3.ÖØÆô¿ª·¢°å,œøÈëubootÃüÁîÐÐÄ£Êœ,ÖŽÐÐ£º
    setenv bootargs root=/dev/nfs nfsroot=192.168.1.8:/opt/rootfs ip=192.168.1.110:192.168.1.8:192.168.1.1:255.255.255.0::eth0:on init=/linuxrc console=ttySAC0,115200 quiet
    boot
  4.ÏµÍ³Æô¶¯
    cd /home/drivers/
    insmod printk_all.ko
    rmmod printk_all
    cat /proc/sys/kernel/printk
    œáÂÛ£ºquiet¶ÔÓŠµÄŒ¶±ðÎª4  
  
  5.ÖØÆô¿ª·¢°å,œøÈëubootÃüÁîÐÐÄ£Êœ,ÖŽÐÐ£º
    setenv bootargs root=/dev/nfs nfsroot=192.168.1.8:/opt/rootfs ip=192.168.1.110:192.168.1.8:192.168.1.1:255.255.255.0::eth0:on init=/linuxrc console=ttySAC0,115200 loglevel=0
    boot
  6.ÏµÍ³Æô¶¯
    cd /home/drivers/
    insmod printk_all.ko
    rmmod printk_all
    cat /proc/sys/kernel/printk
    œáÂÛ£ºloglevel=Êý×Ö    

3.linuxÄÚºËGPIO²Ù×÷¿âº¯Êý
  3.1.Ã÷È·¡±GPIO²Ù×÷¡°£ºÅäÖÃGPIOÎªÊä³ö»òÕßÊäÈë
      Èç¹ûÊÇÊä³ö¿Ú,Êä³ö1»òÕß0
      Èç¹ûÊÇÊäÈë¿Ú,»ñÈ¡GPIOµÄ×ŽÌ¬1»òÕß0
      
  3.2.ARMÂã°åGPIO²Ù×÷ÈíŒþ±à³Ì
  ÀýÈç£ºÅäÖÃÎªÊä³ö¿Ú,Êä³ö1
  *gpiocon &= ~(0xf << xxx);
  *gpiocon |= (1 < xxx);
  *gpiodata|= (1 << xxx);
  
  3.3.linuxÄÚºË±ãÓÚÇý¶¯¿ª·¢ÕßœøÐÐGPIO²Ù×÷,Ìá¹©ÁËÏà¹ØµÄ
      GPIO²Ù×÷¿âº¯Êý
  1.int gpio_request(int gpio, char *label)
    ¹ŠÄÜ£ºÃ÷È·CPUµÄÈÎºÎÓ²ŒþÐÅÏ¢,±ÈÈçGPIO¹ÜœÅÓ²ŒþÐÅÏ¢¶ÔÓÚ
          ÄÚºËÀŽËµ¶ŒÊÇÒ»ÖÖ±Š¹óµÄ×ÊÔŽ(ÏñÄÚŽæ),³ÌÐòÒªÏë·ÃÎÊ
          ±ØÐëÏÈÏòÄÚºËÈ¥ÉêÇëÓ²Œþ×ÊÔŽ,ÀàËÆmalloc
    ²ÎÊý£º
    gpio:±íÊŸÓ²ŒþGPIO¹ÜœÅ¶ÔÓŠµÄÄÚºËÈíŒþ±àºÅ(ÀàËÆÉí·ÝÖ€ºÅ)
         ŸßÓÐÎšÒ»ÐÔ
         ÄÚºËÈíŒþ±àºÅÓÉÄÚºËÒÑŸ­¶šÒåºÃ,ÀýÈç£º
         Ó²ŒþGPIOÃû       ÄÚºËÈíŒþ±àºÅ
         GPC0_3		  S5PV210_GPC0(3) //ºê
         GPC0_4		  S5PV210_GPC0(4)
         GPF1_3		  S5PV210_GPF1(3)
         ...              ...
    label£ºËæÒâÖž¶šÒ»žöÃû³ÆŒŽ¿É
    
    ÄÚºËº¯ÊýµÄ·µ»ØÖµÒ»ÂÉ²»ÔÊÐíŒÇÒä,Ö»ÐèÒªÀûÓÃSIŽò¿ªÄÚºË
    ÔŽÂë,¿ŽŽóÉñÈçºÎÐŽ,ÕÕÃš»­»¢;
    ÖÃÓÚÍ·ÎÄŒþµÄÌíŒÓ,œ«ŽóÉñµÄŽúÂëµÄÍ·ÎÄŒþÒ»¹ÉÄÔÈ«²¿¿œ±ŽŒŽ¿É
         
  2.void gpio_free(int gpio)
    ¹ŠÄÜ£ºÓ²ŒþGPIO×ÊÔŽ²»ÔÙÊ¹ÓÃÁË,ŒÇµÃÒªÊÍ·Å×ÊÔŽ,ÀàËÆfree
    
  3.int gpio_direction_output(int gpio, int value)
    ¹ŠÄÜ£ºÅäÖÃGPIOÎªÊä³ö¿Ú,Í¬Ê±Êä³öÒ»žövalueÖµ(1/0)
    
  4.int gpio_direction_input(int gpio)
    ¹ŠÄÜ£ºÅäÖÃGPIOÎªÊäÈë¿Ú
    
  5.int gpio_set_value(int gpio, int value)
    ¹ŠÄÜ£ºœöœöÉèÖÃGPIOµÄÊä³ö×ŽÌ¬ÎªvalueÖµ(1/0)
          Ç°ÌáÊÇGPIO±ØÐëÅäÖÃÎªÊä³ö¿Ú
          
  6.int gpio_get_value(int gpio)  
    ¹ŠÄÜ£º»ñÈ¡GPIOµÄ×ŽÌ¬,·µ»ØÖµ±£Žæ×ŽÌ¬(1/0)
          ²»¹ÜÊÇÊäÈë»¹ÊÇÊä³ö¿Ú¶Œ¿ÉÒÔÊ¹ÓÃ
  
  ÉæŒ°Í·ÎÄŒþ£º
  #include <asm/gpio.h>
  #include <plat/gpio-cfg.h>
  
  °žÀý£ºŒÓÔØÇý¶¯¿ªµÆ;Ð¶ÔØÇý¶¯¹ØµÆ
  ÊµÊ©²œÖè£º
  ÐéÄâ»úÖŽÐÐ£º
  mkdir /opt/drivers/day02/2.0
  cd /opt/drivers/day02/2.0
  vim led_drv.c 
  vim Makefile
  make
  cp led_drv.ko /opt/rootfs/home/drivers/
  
  ¿ª·¢°åÖŽÐÐ£º
  cd /home/drivers
  insmod led_drv.ko //¿ªµÆ
  rmmod led_drv //¹ØµÆ           
  
  œá¹¹ÌåµÄ±êŒÇ³õÊŒ»¯·œÊœ£º
  struct std {
  	int a;
  	int b;
  	int c;
  	int d;
  	int e;
  };    
  
  //Ò»°ã¶šÒå³õÊŒ»¯
  struct std info = {100, 200, 300, 400, 500};
  
  //±êŒÇ³õÊŒ»¯
  struct std info = {
  	.e = 100,
  	.a = 200,
  	.c = 300
  }; //²»ÓÃÈ«²¿³õÊŒ»¯,»¹¿ÉÒÔ²»ÓÃ°ŽÕÕË³Ðò

4.linuxÏµÍ³µÄÏµÍ³µ÷ÓÃÊµÏÖÔ­Àí
  ÃæÊÔÌâ£ºÌžÌžlinuxÏµÍ³µ÷ÓÃ
  »ØÒä£ºÑ§¹ýÏµÍ³µ÷ÓÃº¯Êý£ºopen/read/write/close/mmap/lseek/fork/exit/sbrkµÈ
  ÏµÍ³µ÷ÓÃº¯Êý×÷ÓÃ£ºËüÊÇÓÃ»§¿ÕŒäºÍÄÚºË¿ÕŒäÊýŸÝœ»»¥µÄÎšÒ»µÄÍšµÀ
                    ÓŠÓÃ³ÌÐòÀûÓÃÏµÍ³µ÷ÓÃº¯ÊýÄÜ¹»ÏòÄÚºË·¢ÆðÒ»žöÒµÎñŽŠÀíµÄÇëÇó
                    ÄÚºË×îÖÕ°ïÄãÍê³ÉÒµÎñ,²¢ÇÒœ«ŽŠÀíµÄœá¹ûžøÓŠÓÃ³ÌÐò
  ÏµÍ³µ÷ÓÃÊµÏÖµÄ»ù±Ÿ¹ý³Ì£º
  ÕâÀïÒÔwriteÏµÍ³µ÷ÓÃº¯ÊýÎªÀý£º
  1.Ê×ÏÈÓŠÓÃ³ÌÐòµ÷ÓÃwriteÏµÍ³µ÷ÓÃº¯Êý
  2.»áµ÷ÓÃµœC¿âµÄwriteº¯ÊýµÄ¶šÒå
  3.C¿âµÄwriteº¯Êýœ«×öÁœŒþÊÂ£º
    3.1.±£Žæwriteº¯Êý¶ÔÓŠµÄÏµÍ³µ÷ÓÃºÅµœR7ŒÄŽæÆ÷
    ÏµÍ³µ÷ÓÃºÅ£ºlinuxÏµÍ³µ÷ÓÃº¯Êý¶ŒÓÐÎšÒ»µÄÒ»žöÈíŒþ±àºÅ(ÀàËÆÉí·ÝÖ€ºÅ)
    ÏµÍ³µ÷ÓÃºÅ¶šÒåÔÚÄÚºËÔŽÂëµÄarch/arm/include/asm/unistd.h  
    #define __NR_restart_syscal (0+  0)
    #define __NR_exit			(0+  1)
    #define __NR_fork			(0+  2)
    #define __NR_read			(0+  3)
    #define __NR_write			(0+  4) 
    ...				         ...
    #define __NR_º¯ÊýÃû                  Êý×Ö
    
    3.2.µ÷ÓÃsvcÈíÖÐ¶ÏÖžÁî,Ž¥·¢ÈíÖÐ¶ÏÒì³£
    
    3.3.Ò»µ©Ž¥·¢ÈíÖÐ¶ÏÒì³£,CPU¿ªÆôÁËÈíÖÐ¶ÏÒì³£µÄŽŠÀí
        ×îÖÕCPUÌø×ªµœÈíÖÐ¶ÏŽŠÀíµÄÈë¿ÚµØÖ·,ÖÁŽËÓŠÓÃ³ÌÐò
        ÓÉÓÃ»§¿ÕŒä¡°ÏÝÈë¡±ÄÚºË¿ÕŒä,CPUµÄ¹€×÷Ä£ÊœÓÐUSERÇÐ»»µœ
        SVC¹ÜÀíÄ£Êœ
    
    3.4.œøÈëÈíÖÐ¶ÏµÄŽŠÀíÈë¿ÚµØÖ·ÒÔºó,Í¬Ñù×öÁœŒþÊÂ£º
        1.ŽÓR7ŒÄŽæÆ÷ÖÐÈ¡³öÖ®Ç°±£ŽæµÄÏµÍ³µ÷ÓÃºÅ
        2.È»ºóÒÔÈ¡³öµÄÏµÍ³µ÷ÓÃºÅÎªÏÂ±êÔÚÄÚºËÊÂÏÈÒÑŸ­
          ¶šÒåºÃµÄÏµÍ³µ÷ÓÃ±í(±í=ŽóÊý×é)ÖÐÕÒµœÒ»žöº¯Êý
          ŽËº¯ÊýÎªsys_write,ÕÒµœÒÔºóÖŽÐÐŽËº¯Êý
        ÏµÍ³µ÷ÓÃ±í£º±ŸÖÊŸÍÊÇÒ»žöŽóÊý×é,Êý×éÖÐÃ¿Ò»žöÔªËØ
                    ±£ŽæµÄÊÇÒ»žöº¯ÊýµØÖ·
        ¶šÒåÔÚÄÚºËÔŽÂëµÄ£ºarch/arm/kernel/calls.S
        
    3.5.ÖŽÐÐÍê±Ï,×îÖÕÔ­Â··µ»ØµœÓÃ»§¿ÕŒä

    ÌáÊŸ£º±ØÐë»á»­ÍŒ

**********************************************************
4.linuxÄÚºË×Ö·ûÉè±žÇý¶¯¿ª·¢Ïà¹ØÄÚÈÝ
  ÃæÊÔÌâ£ºÈçºÎ±àÐŽÒ»žö×Ö·ûÉè±žÇý¶¯³ÌÐò
  4.1.linuxµÄÀíÄî£ºÒ»ÇÐœÔÎÄŒþ
  ¡°Ò»ÇÐ¡±£ºŸÍÊÇÖžÓ²Œþ×ÊÔŽ
          œ«ÀŽÖ»Òª·ÃÎÊÄ³žöÎÄŒþ,±ŸÖÊÉÏŸÍÊÇÔÚ·ÃÎÊÓ²Œþ±ŸÉí£¡
  
  4.2.Éè±žÎÄŒþÌØÐÔ
     ×Ö·ûÉè±ž¶ÔÓŠµÄÎÄŒþÓÖ³Æ×Ö·ûÉè±žÎÄŒþ
     ¿éÉè±ž¶ÔÓŠµÄÎÄŒþÓÖ³Æ¿éÉè±žÎÄŒþ
     ÍøÂçÉè±žÃ»ÓÐ¶ÔÓŠµÄÎÄŒþ,Íš¹ýsocketÌ×œÓ×ÖœøÐÐ·ÃÎÊ
     œáÂÛ£ºÉè±žÎÄŒþ°üÀš×Ö·ûÉè±žÎÄŒþºÍ¿éÉè±žÎÄŒþ
     
     Éè±žÎÄŒþŽæÔÚÓÚžùÎÄŒþÏµÍ³rootfsµÄdevÄ¿ÂŒÖÐ,ÒÔTPADµÄ4žöUART
     ÎªÀý,4žöUART¶ÔÓŠµÄÉè±žÎÄŒþ£º
     ls /dev/s3c2410_serial* -lh
     crw-rw----  204,  64  /dev/s3c2410_serial0
     crw-rw----  204,  65  /dev/s3c2410_serial1
     crw-rw----  204,  66  /dev/s3c2410_serial2
     crw-rw----  204,  67  /dev/s3c2410_serial3 
     
     ËµÃ÷£º
     "c":±íÊŸŽËÉè±žÎÄŒþ¶ÔÓŠµÄÓ²ŒþÊÇ×Ö·ûÉè±žÓ²Œþ
         ¿éÉè±žÓÃ"b"
     "204":±íÊŸÉè±žÎÄŒþµÄÖ÷Éè±žºÅ
     "64~67":±íÊŸÉè±žÎÄŒþµÄŽÎÉè±žºÅ
     s3c2410_serial0:µÚÒ»žöUARTµÄÉè±žÎÄŒþÃû
     s3c2410_serial1:µÚ¶þžöUARTµÄÉè±žÎÄŒþÃû
     s3c2410_serial2:µÚÈýžöUARTµÄÉè±žÎÄŒþÃû
     s3c2410_serial3:µÚËÄžöUARTµÄÉè±žÎÄŒþÃû
     
     Éè±žÎÄŒþµÄ·ÃÎÊ£ºÒ»¶šÒªÀûÓÃÏµÍ³µ÷ÓÃº¯ÊýœøÐÐ£º
     //Žò¿ªµÚÒ»žöŽ®¿Ú
     int fd = open("/dev/s3c2410_serial0", O_RDWR);
     
     //ŽÓŽ®¿Ú¶ÁÈ¡ÊýŸÝ
     read(fd, buf, size); 
     
     //ÏòŽ®¿ÚÐŽÈëÊýŸÝ
     write(fd, "hello,world", 12);
     
     //¹Ø±ÕŽ®¿Ú
     close(fd);
     
     Éè±žÎÄŒþµÄŽŽœš·œ·š£º2ÖÖ
     1.ÊÖ¶¯ŽŽœš,ÀûÓÃÃüÁîmknod
       mknod /dev/Éè±žÎÄŒþÃû c  Ö÷Éè±žºÅ  ŽÎÉè±žºÅ
       ÀýÈç£º
       mknod /dev/zhangsan c 250 0
       
     2.×Ô¶¯ŽŽœš   
  
  4.3.Éè±žºÅ
  Éè±žºÅ°üÀšÖ÷Éè±žºÅºÍŽÎÉè±žºÅ
  Éè±žºÅµÄÊýŸÝÀàÐÍ£ºdev_t,±ŸÖÊunsigned int
  Éè±žºÅµÄžß12Î»±£ŽæµÄÖ÷Éè±žºÅ
  Éè±žºÅµÄµÍ20Î»±£ŽæµÄŽÎÉè±žºÅ
  Éè±žºÅÏà¹Ø²Ù×÷ºê£º
  MKDEV:ÒÑÖªÖ÷£¬ŽÎÉè±žºÅ,ºÏ²¢Ò»žöÉè±žºÅ
  	dev_t dev = MKDEV(Ö÷Éè±žºÅ, ŽÎÉè±žºÅ);
  MAJOR:ÒÑÖªÉè±žºÅ,ÌáÈ¡Ö÷Éè±žºÅ
  	int major = MAJOR(Éè±žºÅ);
  MINOR£ºÒÑÖªÉè±žºÅ£¬ÌáÈ¡ŽÎÉè±žºÅ
  	int minor = MINOR(Éè±žºÅ);
  Ö÷Éè±žºÅ£ºÓŠÓÃ³ÌÐòžùŸÝÉè±žÎÄŒþµÄÖ÷Éè±žºÅÔÚÃ£Ã£µÄÄÚºËÔŽÂëÖÐ
            ÕÒµœ×ÔŒºÆ¥ÅäµÄÉè±žÇý¶¯³ÌÐò,Ò»žöÉè±žÇý¶¯œöÓÐÒ»žö
            Ö÷Éè±žºÅ
  ŽÎÉè±žºÅ£ºÈç¹û¶àžöÓ²Œþ¹²ÏíÒ»žöÖ÷Éè±žºÅ,Ò²ŸÍ¹²ÏíÒ»žöÉè±žÇý¶¯
            œ«ÀŽÉè±žÇý¶¯žùŸÝŽÎÉè±žºÅÀŽÇø·ÖÓÃ»§µœµ×Ïë²Ù×÷ÄÄžö
            Ó²ŒþžöÌå
  œáÂÛ£ºÉè±žºÅ¶ÔÓÚÄÚºËÀŽËµÊÇÒ»ÖÖ±Š¹óµÄ×ÊÔŽ,Çý¶¯±ØÐëÊ×ÏÈ
        ÏòÄÚºËÈ¥ÉêÇëÉè±žºÅ×ÊÔŽ
        
  ÏòÄÚºËÉêÇëºÍÊÍ·ÅÉè±žºÅµÄÁœžöº¯Êý£º
  int alloc_chrdev_region(dev_t *dev,
  			unsigned baseminor,
  			unsigned count,
  			const char *name);
  ¹ŠÄÜ£ºÏòÄÚºËÈ¥ÉêÇëÉè±žºÅ
  dev:±£ŽæÄÚºËžøÄã·ÖÅäµÄÉè±žºÅ
  baseminor:Ï£ÍûÆðÊŒµÄŽÎÉè±žºÅ,Ò»°ãžø0
  count£º·ÖÅäŽÎÉè±žºÅµÄžöÊý
  name£ºÉè±žÃû³Æ¶ø²»ÊÇÉè±žÎÄŒþÃû,Íš¹ýcat /proc/devices²é¿Ž
  
  void unregister_chrdev_region(dev_t dev, int count);
  ¹ŠÄÜ£ºÊÍ·ÅÉêÇëµÄÉè±žºÅ
  dev:ÉêÇëºÃµÄÉè±žºÅ
  count:ŽÎÉè±žºÅµÄžöÊý
  
5.×ÔÐÐÉèŒÆlinuxÄÚºË×Ö·ûÉè±žÇý¶¯
  ÉùÃ÷Ò»žöÃèÊö×Ö·ûÉè±žÇý¶¯µÄÊýŸÝœá¹¹
  struct char_device {
  	char *name; //×Ö·ûÉè±žµÄÃû³Æ
  	dev_t dev; //×Ö·ûÉè±ž¶ÔÓŠµÄÉè±žºÅ
  	int count; //Ó²ŒþÉè±žµÄžöÊý
  	int (*open)(...) //Žò¿ªÉè±žœÓ¿Ú
  	int (*close)(...) //¹Ø±ÕÉè±žœÓ¿Ú
  	int (*read)(...) //¶ÁÉè±žœÓ¿Ú
  	int (*write)(...) //ÐŽÉè±žœÓ¿Ú
  };
  ŽóµšÉèÏë£º
  ÓŠÓÃ³ÌÐòµ÷ÓÃopen->ÈíÖÐ¶Ï->ÄÚºËµÄsys_open->Çý¶¯µÄopenœÓ¿Ú
  ÓŠÓÃ³ÌÐòµ÷ÓÃclose->ÈíÖÐ¶Ï->ÄÚºËµÄsys_close->Çý¶¯µÄcloseœÓ¿Ú
  ÓŠÓÃ³ÌÐòµ÷ÓÃread->ÈíÖÐ¶Ï->ÄÚºËµÄsys_read->Çý¶¯µÄreadœÓ¿Ú
  ÓŠÓÃ³ÌÐòµ÷ÓÃwrite->ÈíÖÐ¶Ï->ÄÚºËµÄsys_write->Çý¶¯µÄwriteœÓ¿Ú
  
  ÓÅ»¯ÊýŸÝœá¹¹£º
  //ÃèÊö×Ö·ûÉè±žÇý¶¯µÄÊýŸÝœá¹¹
  struct char_device {
  	char *name; //×Ö·ûÉè±žµÄÃû³Æ
  	dev_t dev; //×Ö·ûÉè±ž¶ÔÓŠµÄÉè±žºÅ
  	int count; //Ó²ŒþÉè±žµÄžöÊý
  	struct file_operations *ops;
  };
  
  //ÃèÊö×Ö·ûÉè±žÇý¶¯œÓ¿ÚµÄÊýŸÝœá¹¹
  struct file_operations {
  	int (*open)(...) //Žò¿ªÉè±žœÓ¿Ú
  	int (*close)(...) //¹Ø±ÕÉè±žœÓ¿Ú
  	int (*read)(...) //¶ÁÉè±žœÓ¿Ú
  	int (*write)(...) //ÐŽÉè±žœÓ¿Ú	
  	... //ÎªËùÓûÎªÌíŒÓÈÎºÎÒ»žöœÓ¿Ú
  };
  
6.ÄÚºËÃèÊö×Ö·ûÉè±žÇý¶¯µÄÊýŸÝœá¹¹ºÍÓ²Œþ²Ù×÷œÓ¿ÚµÄÊýŸÝœá¹¹
    //ÃèÊö×Ö·ûÉè±žÇý¶¯µÄÊýŸÝœá¹¹
  struct cdev {
  	dev_t dev; //×Ö·ûÉè±ž¶ÔÓŠµÄÉè±žºÅ
  	int count; //Ó²ŒþÉè±žµÄžöÊý
  	struct file_operations *ops;//×Ö·ûÉè±žÇý¶¯ŸßÓÐµÄÓ²Œþ²Ù×÷œÓ¿Ú
  	... //ÄÚºËÊ¹ÓÃ
  };
  
  //ÃèÊö×Ö·ûÉè±žÇý¶¯œÓ¿ÚµÄÊýŸÝœá¹¹
  struct file_operations {
  	int (*open)(struct inode *, struct file *) //Žò¿ªÉè±žœÓ¿Ú
  	int (*close)(struct inode *, struct file *) //¹Ø±ÕÉè±žœÓ¿Ú
	...
  };

-----------------------------------------------------------------------
»Ø¹Ë£º
±ÊÊÔÌâ£º×ÔŒº±àÐŽÒ»žöstrcmp»òÕßstcpyº¯Êý
ÄÚºËÔŽÂë/lib/string.cÌá¹©Ïà¹ØµÄ²Î¿ŒŽúÂë

1.linuxÄÚºËÉè±žÇý¶¯¿ª·¢Ïà¹Ø»ùŽ¡ÄÚÈÝ
  1.1.ÓÃ»§¿ÕŒäºÍÄÚºË¿ÕŒä
  1.2.linuxÄÚºË³ÌÐò±à³Ì»ù±Ÿ¿òŒÜ
  1.3.linuxÄÚºË³ÌÐò±àÒë
  1.4.linuxÄÚºË³ÌÐò²Ù×÷
  1.5.linuxÄÚºË³ÌÐòÃüÁîÐÐŽ«²Î
  1.6.linuxÄÚºË³ÌÐò·ûºÅµŒ³ö
  1.7.linuxÄÚºË³ÌÐòŽòÓ¡º¯Êýprintk
  1.8.linuxÄÚºËGPIO²Ù×÷¿âº¯Êý
  1.9.linuxÄÚºËÏµÍ³µ÷ÓÃÊµÏÖ¹ý³Ì
 
2.linuxÄÚºË×Ö·ûÉè±žÇý¶¯¿ª·¢Ïà¹ØÄÚÈÝ
  2.1.linuxÏµÍ³ÀíÄî
  2.2.linuxÉè±žÇý¶¯·ÖÀà
  2.3.Éè±žÎÄŒþ
      ×Ö·ûÉè±žÎÄŒþ
      ¿éÉè±žÎÄŒþ
      /dev/
      °üº¬Ö÷£¬ŽÎÉè±žºÅ
      mknod
      ÀûÓÃÏµÍ³µ÷ÓÃº¯ÊýœøÐÐ·ÃÎÊ
  2.4.Éè±žºÅ
      °üÀšÖ÷£¬ŽÎÉè±žºÅ
      dev_t
      12
      20
      MKDEV
      MAJOR
      MINOR
      Ö÷Éè±žºÅ£ºÓŠÓÃžùŸÝÖ÷Éè±žºÅÕÒÇý¶¯
      ŽÎÉè±žºÅ£ºÇý¶¯žùŸÝŽÎÉè±žºÅÇø·ÖÓ²ŒþžöÌå
      Éè±žºÅÊÇÒ»ÖÖ±Š¹óµÄ×ÊÔŽ
      ÉêÇë£ºalloc_chrdev_region
      ÊÍ·Å£ºunregister_chrdev_region
      
  2.5.linuxÄÚºËÃèÊö×Ö·ûÉè±žÇý¶¯µÄÊýŸÝœá¹¹       
      struct cdev {
      	dev_t dev; //±£ŽæÉêÇëµÄÉè±žºÅ
      	int count; //±£ŽæÓ²ŒþÉè±žµÄžöÊý
      	const struct file_operations *ops;//±£Žæ×Ö·ûÉè±žÇý¶¯ŸßÓÐÓ²Œþ²Ù×÷œÓ¿Ú
      	...
      }; 
      
      linuxÄÚºË×Ö·ûÉè±žÇý¶¯µÄÓ²Œþ²Ù×÷œÓ¿ÚµÄÊýŸÝœá¹¹:
      struct file_operations {
      	int (*open) (struct inode *, struct file *);
      	int (*release) (struct inode *, struct file *);
      	ssize_t (*read) (struct file *, char __user *, size_t, loff_t *);
	ssize_t (*write) (struct file *, const char __user *, size_t, loff_t *);
      	...
      };
 2.6.ÎÊ£ºÈçºÎÊµÏÖÒ»žö×Ö·ûÉè±žÇý¶¯³ÌÐòÄØ£¿
     Žð£º±à³Ì²œÖèÊÇ¶šËÀµÄ£¡
     ŸßÌå±à³Ì²œÖè£º
     1.¶šÒå³õÊŒ»¯Ò»žöstruct file_operationsÓ²Œþ²Ù×÷œÓ¿Ú¶ÔÏó
     2.¶šÒå³õÊŒ»¯Ò»žöstruct cdev×Ö·ûÉè±ž¶ÔÏó
       cdev_initÓÃÀŽ³õÊŒ»¯×Ö·ûÉè±ž¶ÔÏó
     3.µ÷ÓÃcdev_addœ«×Ö·ûÉè±ž¶ÔÏó×¢²áµœÄÚºËÖÐ
       ÖÁŽËÄÚºËŸÍÓÐÒ»žöÐÂµÄ×Ö·ûÉè±žÇý¶¯
     4.µ÷ÓÃcdev_delœ«×Ö·ûÉè±ž¶ÔÏóŽÓÄÚºËÖÐÐ¶ÔØ
       Ò»µ©Ð¶ÔØ,ÄÚºËŸÍ²»ŽæÔÚÕâžö×Ö·ûÉè±žÇý¶¯ 
 
 2.7.ÇÐŒÇÓŠÓÃ³ÌÐòµÄÏµÍ³µ÷ÓÃº¯ÊýºÍµ×²ãÇý¶¯Ó²Œþ²Ù×÷œÓ¿ÚÖ®ŒäµÄÁªÏµ£º
 ÓŠÓÃ³ÌÐòµ÷ÓÃopen->C¿âopen->ÈíÖÐ¶Ï->ÄÚºËsys_open->Çý¶¯openœÓ¿Ú
 ÓŠÓÃ³ÌÐòµ÷ÓÃread->C¿âread->ÈíÖÐ¶Ï->ÄÚºËsys_read->Çý¶¯readœÓ¿Ú
 ÓŠÓÃ³ÌÐòµ÷ÓÃwrite->C¿âwrite->ÈíÖÐ¶Ï->ÄÚºËsys_write->Çý¶¯writeœÓ¿Ú
 ÓŠÓÃ³ÌÐòµ÷ÓÃclose->C¿âclose->ÈíÖÐ¶Ï->ÄÚºËsys_close->Çý¶¯release
 
 °žÀý£ºÓŠÓÃ³ÌÐòŽò¿ªLEDÉè±žÊ±,¿ªµÆ
       ÓŠÓÃ³ÌÐò¹Ø±ÕLEDÉè±žÊ±,¹ØµÆ
 ·ÖÎö£º
 0.œ«ÁœžöLEDµÆ×÷ÎªÒ»žöÓ²ŒþÉè±ž
 1.ÓŠÓÃ³ÌÐòÊ¹ÓÃopen/close
   Çý¶¯Ìá¹©open/releaseœÓ¿Ú
 2.ÁœžöœÓ¿ÚÖ»ÐèÒªÀûÓÃGPIO²Ù×÷¿âº¯Êý·Ö±ð²Ù×÷LEDŒŽ¿É
 3.Ç°ÌáÊÇÐèÒªœ«file_operationsºÍcdevœøÐÐ¶šÒå³õÊŒ»¯ºÍ×¢²á
 
 ÊµÊ©²œÖè£º
 ÐéÄâ»úÖŽÐÐ£º
 mkdir /opt/drivers/day03/1.0 -p
 cd /opt/drivers/day03/1.0
 vim led_drv.c
 vim Makfile
 make
 cp led_drv.ko /opt/rootfs/home/drivers
 vim led_test.c //²âÊÔµÄÓŠÓÃ³ÌÐò 
 arm-linux-gcc -o led_test led_test.c 
 cp led_test /opt/rootfs/home/drivers
 
 ARM°åÖŽÐÐ£º
 insmod /home/drivers/led_drv.ko
 cat /proc/devices //²é¿ŽÉêÇëµÄÖ÷Éè±žºÅ
Character devices: //µ±Ç°ÏµÍ³µÄ×Ö·ûÉè±ž
  1 mem
  2 pty
  3 ttyp
  4 /dev/vc/0
  ...
  250 tarena
  ...
  µÚÒ»ÁÐ£ºÉêÇëµÄÖ÷Éè±žºÅ
  µÚ¶þÁÐ£ºÉè±žÃû³Æ
  
 mknod /dev/myled c 250 0
 /home/drivers/led_test 

3.±àÐŽÒ»žö×Ö·ûÉè±žÇý¶¯µÄ²œÖè£º
1.ÐŽÍ·ÎÄŒþ
2.ÐŽÈë¿ÚºÍ³ö¿Úº¯Êý
3.ÏÈÉùÃ÷ºÍ¶šÒå³õÊŒ»¯Ó²ŒþÐÅÏ¢
4.È»ºó¶šÒå³õÊŒ»¯ÈíŒþÐÅÏ¢
  file_operations
  cdev
  dev
5.Ìî³äÈë¿ÚºÍ³ö¿Úº¯Êý
  ÏÈÐŽ×¢ÊÍÁ÷³Ì
  ÔÙÐŽŽúÂë
6.×îºóœ«žøÓÃ»§Ìá¹©µÄœÓ¿Úº¯ÊýÍêÉÆ 

4.linuxÄÚºË×Ö·ûÉè±žÇý¶¯Ó²Œþ²Ù×÷œÓ¿ÚÖ®write
  »ØÒä£ºÓŠÓÃwriteÏµÍ³µ÷ÓÃº¯ÊýµÄÊ¹ÓÃ
  char msg[1024] = {....};
  write(fd, msg, 1024); //ÏòÉè±žÐŽÈëÊýŸÝ 
  
  ¶ÔÓŠµÄµ×²ãÇý¶¯µÄwriteœÓ¿Ú£º
  struct file_operations {
  	ssize_t (*write) (struct file *file, 
  			const char __user *buf, 
  			size_t count, 
  			loff_t *ppos);
  };
  µ÷ÓÃ¹ØÏµ£º
  ÓŠÓÃµ÷write->C¿âwrite->ÈíÖÐ¶Ï->ÄÚºËsys_write->Çý¶¯writeœÓ¿Ú
  ¹ŠÄÜ£ºŽËœÓ¿ÚÓÃÓÚœ«ÊýŸÝÐŽÈëÓ²ŒþÉè±ž
  ²ÎÊý£º
  file:ÎÄŒþÖžÕë
  buf£ºŽËÖžÕë±äÁ¿ÓÃ__userÐÞÊÎ,±íÃ÷ŽËÖžÕë±äÁ¿±£ŽæµÄµØÖ·Î»ÓÚ
       ÓÃ»§¿ÕŒä(0~3G),Ò²ŸÍÊÇ±£ŽæÓÃ»§»º³åÇøµÄÊ×µØÖ·(ÀýÈçmsg)
       ËäÈ»µ×²ãÇý¶¯¿ÉÒÔ·ÃÎÊbuf»ñÈ¡ÓÃ»§µÄÊýŸÝ,µ«ÊÇÄÚºË²»ÔÊÐíÇý¶¯
       Ö±œÓ²Ù×÷ÕâžöÓÃ»§»º³åÇø(ÀýÈç£ºint data = *(int *)buf),
       ÕâÃŽ²Ù×÷Ê±Ïàµ±Î£ÏÕµÄ,Èç¹ûÒªŽÓbuf»º³åÇø¶ÁÈ¡ÊýŸÝµœÇý¶¯ÖÐ
       ±ØÐëÒªÀûÓÃÄÚºËÌá¹©µÄÄÚŽæ¿œ±Žº¯Êýcopy_from_userœ«ÓÃ»§»º³åÇøµÄ
       ÊýŸÝ¿œ±ŽµœÄÚºË»º³åÇø(3G~4G)ÖÐ
  count:ÒªÐŽÈëµÄ×ÖœÚÊý
  ppos£ºŒÇÂŒÁËÉÏÒ»ŽÎµÄÐŽÎ»ÖÃ,²Î¿ŒŽúÂë£º
         loff_t pos = *ppos //»ñÈ¡ÉÏÒ»ŽÎµÄÐŽÎ»ÖÃ
         ÕâÒ»ŽÎÐŽÁË512×ÖœÚ,ŽËœÓ¿Ú·µ»ØÖ®Ç°,ÒªŒÇµÃžüÐÂÐŽÎ»ÖÃ£º
         *ppos = pos + 512      
        
        ÓÑÇéÌáÊŸ£ºÈç¹ûÐŽ²Ù×÷Ö»œøÐÐÒ»ŽÎ,ÎÞÐèŒÇÂŒÐŽÎ»ÖÃ£¡
        ËùÒÔŽË²ÎÊýÓÃÓÚ¶àŽÎÐŽÈë²Ù×÷
   
   ÄÚŽæ¿œ±Žº¯Êýcopy_from_user
   unsigned long copy_from_user(void *to, 
   				const void __user *from,
   				unsigned long n)
   º¯Êý¹ŠÄÜ£ºœ«ÓÃ»§¿ÕŒä»º³åÇøµÄÊýŸÝ¿œ±ŽµœÄÚºË¿ÕŒäµÄ»º³åÇøÖÐ  
   ²ÎÊý£º
   to:Ä¿±ê,ÄÚºË»º³åÇøµÄÊ×µØÖ·
   from:ÔŽ,ÓÃ»§»º³åÇøµÄÊ×µØÖ·
   n:Òª¿œ±ŽµÄ×ÖœÚÊý 
   ÇÐŒÇ£ºŽËº¯Êýœöœö×öÁËœ«ÓÃ»§ÄÚŽæµÄÊýŸÝ¿œ±ŽµœÄÚºËµÄÄÚŽæ
         ŽËÊ±»¹Ã»ÓÐœøÐÐÓ²Œþ²Ù×÷,Ó²Œþ²Ù×÷»¹ÐèÒªœøÐÐ¶îÍâµÄ²Ù×÷
   
   °žÀý£ºÓŠÓÃÏòÉè±žÐŽ1,¿ªµÆ
         ÓŠÓÃÐŽÉè±žÐŽ0,¹ØµÆ
   ÊµÊ©²œÖè£º
   mkdir /opt/drivers/day03/2.0 
   cd /opt/drivers/day03/2.0
 vim led_drv.c
 vim Makfile
 make
 cp led_drv.ko /opt/rootfs/home/drivers
 vim led_test.c //²âÊÔµÄÓŠÓÃ³ÌÐò 
 arm-linux-gcc -o led_test led_test.c 
 cp led_test /opt/rootfs/home/drivers
 
 ARM°åÖŽÐÐ£º
 insmod /home/drivers/led_drv.ko
 cat /proc/devices //²é¿ŽÉêÇëµÄÖ÷Éè±žºÅ
Character devices: //µ±Ç°ÏµÍ³µÄ×Ö·ûÉè±ž
  1 mem
  2 pty
  3 ttyp
  4 /dev/vc/0
  ...
  250 tarena
  ...
  µÚÒ»ÁÐ£ºÉêÇëµÄÖ÷Éè±žºÅ
  µÚ¶þÁÐ£ºÉè±žÃû³Æ
  
 mknod /dev/myled c 250 0
 /home/drivers/led_test on
 /home/dirvers/led_test off  
 
 ×Üœá£ºµ×²ãÇý¶¯write±àÐŽÈý²œÇú£º
 1.¶šÒåÄÚºË»º³åÇø
 2.ŽÓÓÃ»§»º³åÇø¿œ±ŽÊýŸÝµœÄÚºË»º³åÇø
 3.žùŸÝÓÃ»§µÄÐèÇóœøÐÐÓ²ŒþÊýŸÝÐŽÈë²Ù×÷
 
5. linuxÄÚºË×Ö·ûÉè±žÇý¶¯Ó²Œþ²Ù×÷œÓ¿ÚÖ®read
  »ØÒä£ºÓŠÓÃreadÏµÍ³µ÷ÓÃº¯ÊýµÄÊ¹ÓÃ
  char msg[1024];
  read(fd, msg, 1024); //ŽÓÓ²ŒþÉè±ž¶ÁÈ¡ÊýŸÝµœmsg»º³åÇø
  
  ¶ÔÓŠµÄµ×²ãÇý¶¯µÄreadœÓ¿Ú£º
  struct file_operations {
  	ssize_t (*read) (struct file *file, 
  			char __user *buf, 
  			size_t count, 
  			loff_t *ppos);
  };
  µ÷ÓÃ¹ØÏµ£º
  ÓŠÓÃµ÷read->C¿âread->ÈíÖÐ¶Ï->ÄÚºËsys_read->Çý¶¯readœÓ¿Ú
  ¹ŠÄÜ£ºŽÓÓ²ŒþÉè±ž¶ÁÈ¡ÊýŸÝµœÓÃ»§»º³åÇø
  ²ÎÊý£º
  file:ÎÄŒþÖžÕë
  buf£ºŽËÖžÕë±äÁ¿ÓÃ__userÐÞÊÎ,±íÃ÷ŽËÖžÕë±äÁ¿±£ŽæµÄµØÖ·Î»ÓÚ
       ÓÃ»§¿ÕŒä(0~3G),Ò²ŸÍÊÇ±£ŽæÓÃ»§»º³åÇøµÄÊ×µØÖ·(ÀýÈçmsg)
       ËäÈ»µ×²ãÇý¶¯¿ÉÒÔ·ÃÎÊbufÏòÓÃ»§»º³åÇøÐŽÈëÊýŸÝ,µ«ÊÇÄÚºË²»ÔÊÐíÇý¶¯
       Ö±œÓ²Ù×÷ÕâžöÓÃ»§»º³åÇø(ÀýÈç£º*(int *)buf=0x5555),
       ÕâÃŽ²Ù×÷Ê±Ïàµ±Î£ÏÕµÄ,Èç¹ûÇý¶¯ÒªÏëÓÃ»§»º³åÇøÐŽÈëÊýŸÝ
       ±ØÐëÒªÀûÓÃÄÚºËÌá¹©µÄÄÚŽæ¿œ±Žº¯Êýcopy_to_userœ«ÄÚºË»º³åÇøµÄ
       ÊýŸÝ¿œ±ŽµœÓÃ»§»º³åÇøÖÐ
  count:Òª¶ÁÈ¡µÄ×ÖœÚÊý
  ppos£ºŒÇÂŒÁËÉÏÒ»ŽÎµÄ¶ÁÎ»ÖÃ,²Î¿ŒŽúÂë£º
         loff_t pos = *ppos //»ñÈ¡ÉÏÒ»ŽÎµÄ¶ÁÎ»ÖÃ
         ÕâÒ»ŽÎ¶ÁÁË512×ÖœÚ,ŽËœÓ¿Ú·µ»ØÖ®Ç°,ÒªŒÇµÃžüÐÂ¶ÁÎ»ÖÃ£º
         *ppos = pos + 512      
        
        ÓÑÇéÌáÊŸ£ºÈç¹û¶Á²Ù×÷Ö»œøÐÐÒ»ŽÎ,ÎÞÐèŒÇÂŒ¶ÁÎ»ÖÃ£¡
        ËùÒÔŽË²ÎÊýÓÃÓÚ¶àŽÎ¶Á²Ù×÷
   
   ÄÚŽæ¿œ±Žº¯Êýcopy_to_user
   unsigned long copy_to_user(void __user *to, 
   				const void  *from,
   				unsigned long n)
   º¯Êý¹ŠÄÜ£ºœ«ÄÚºË¿ÕŒä»º³åÇøµÄÊýŸÝ¿œ±ŽµœÓÃ»§¿ÕŒäµÄ»º³åÇøÖÐ  
   ²ÎÊý£º
   to:Ä¿±ê,ÓÃ»§»º³åÇøµÄÊ×µØÖ·
   from:ÔŽ,ÄÚºË»º³åÇøµÄÊ×µØÖ·
   n:Òª¿œ±ŽµÄ×ÖœÚÊý 
   ÇÐŒÇ£ºŽËº¯Êýœöœö×öÁËœ«ÄÚºËÄÚŽæµÄÊýŸÝ¿œ±ŽµœÓÃ»§µÄÄÚŽæ
         ŽËÊ±»¹Ã»ÓÐœøÐÐÓ²Œþ²Ù×÷,Ó²Œþ²Ù×÷»¹ÐèÒªœøÐÐ¶îÍâµÄ²Ù×÷           
         
    ×Üœá£ºÊýŸÝÁ÷×ßÏò
    ¶ÔÓÚwrite£º
    ÓÃ»§ÊýŸÝ->Ÿ­¹ýÒ»ŽÎ¿œ±ŽµœÄÚºË¿ÕŒä->Ÿ­¹ý¶þŽÎ¿œ±ŽµœÓ²Œþ
    ¶ÔÓÚread£º
    Ó²ŒþŸ­¹ýÒ»ŽÎÊýŸÝ¿œ±Ž->ÄÚºË,Ÿ­¹ý¶þŽÎ¿œ±Ž->ÓÃ»§
    
    °žÀý£º»ñÈ¡µÆµÄ¿ª¹Ø×ŽÌ¬
    ×Üœá£ºµ×²ãÇý¶¯read±àÐŽÈý²œÇú£º
    1.¶šÒåÄÚºË»º³åÇø
    2.ŽÓÓ²Œþ»ñÈ¡ÊýŸÝ¿œ±ŽµœÄÚºË»º³åÇø
    3.œ«ÄÚºË»º³åÇøÊýŸÝ×îÖÕ¿œ±ŽµœÓÃ»§»º³åÇø

°žÀý£ºÓŠÓÃÄÜ¹»ÈÎÒâ¿ª¹ØÄ³žöµÆ
ÌáÊŸ£ºÓŠÓÃÓŠžÃÏòÉè±žÐŽÈëÁœžöÐÅÏ¢£º¿ª»òÕß¹ØºÍµÆµÄ±àºÅ(1»òÕß2)
ÓŠÓÃÖ»ÐèÏòÇý¶¯ÐŽÈëÒ»žöœá¹¹ÌåŒŽ¿É£º
struct led_cmd {
	int cmd; //¿ª£º1;¹Ø£º0
	int index;//µÚÒ»žöµÆ£º1£»µÚ¶þžöµÆ£º2
};
write(fd, œá¹¹Ìå,œá¹¹ÌåŽóÐ¡);

µ×²ãÇý¶¯writeœÓ¿ÚÓÃœá¹¹ÌåÀŽœÓÊÕÊýŸÝ£¬
œÓÊÕÍêœâÎöÅÐ¶Ïœá¹¹Ìå³ÉÔ±

-----------------------------------------------------------------------
»Ø¹Ë£º
1.linuxÄÚºË×Ö·ûÉè±žÇý¶¯Ïà¹ØÄÚÈÝ
  1.1.ÀíÄî
  1.2.×Ö·ûÉè±žÎÄŒþ
      c
      Ö÷Éè±žºÅ
      ŽÎÉè±žºÅ
      Éè±žÎÄŒþÃû
      mknod
      œöœöÔÚopenÊ±Ê¹ÓÃ
  1.3.Éè±žºÅ
      dev_t
      12
      20
      MKDEV
      MAJOR
      MINOR
      ±Š¹ó×ÊÔŽ
      alloc_chrdev_region
      unregister_chrdev_region
      Ö÷Éè±žºÅ£ºÓŠÓÃÕÒµœÇý¶¯
      ŽÎÉè±žºÅ£ºÇý¶¯·ÖÇøÓ²ŒþžöÌå
  1.4.linuxÄÚºËÃèÊö×Ö·ûÉè±žÇý¶¯ÊýŸÝœá¹¹
      struct cdev
      	.dev
      	.count
      	.ops
      ÅäÌ×º¯Êý£º
      cdev_init
      cdev_add
      cdev_del
      
  1.5.×Ö·ûÉè±žÇý¶¯ÃèÊöÓ²Œþ²Ù×÷œÓ¿ÚµÄÊýŸÝœá¹¹
      struct file_operations {
      	.open
      	.release
      	.read
      	.write
      };
      open/release:¿ÉÒÔžùŸÝÓÃ»§µÄÊµŒÊÐèÇó²»ÓÃ³õÊŒ»¯
                   ÓŠÓÃ³ÌÐòopen/closeÓÀÔ¶·µ»Ø³É¹Š
      read:
      	1.·ÖÅäÄÚºË»º³åÇø
      	2.»ñÈ¡Ó²ŒþÐÅÏ¢œ«ÐÅÏ¢¿œ±ŽµœÄÚºË»º³åÇø
      	3.¿œ±ŽÄÚºË»º³åÇøÊýŸÝµœÓÃ»§»º³åÇø
      write:
      	1.·ÖÅäÄÚºË»º³åÇø
      	2.¿œ±ŽÓÃ»§»º³åÇøÊýŸÝµœÄÚºË»º³åÇø
      	3.¿œ±ŽÄÚºË»º³åÇøµœÓ²Œþ
      	
      ×¢Òâ£ºµÚ¶þžöÐÎ²Îbuf:±£ŽæÓÃ»§»º³åÇøµÄÊ×µØÖ·,Çý¶¯²»ÄÜÖ±œÓ
      	              ·ÃÎÊ,ÐèÒªÀûÓÃÄÚŽæ¿œ±Žº¯Êý
      copy_from_user/copy_to_user	              
      
2.linuxÄÚºË×Ö·ûÉè±žÇý¶¯Ó²Œþ²Ù×÷œÓ¿ÚÖ®ioctl
  2.1.ÕÆÎÕioctlÏµÍ³µ÷ÓÃº¯Êý£º
  º¯ÊýÔ­ÐÍ£º
  int ioctl(int fd, int request, ...);
  º¯Êý¹ŠÄÜ£º
  1.²»œöœöÄÜ¹»ÏòÉè±ž·¢ËÍ¿ØÖÆÃüÁî(ÀýÈç¿ª¹ØµÆÃüÁî)
  2.»¹ÄÜ¹»žúÓ²ŒþÉè±žœøÐÐÊýŸÝµÄ¶ÁÐŽ²Ù×÷
  
  ²ÎÊý£º 
  fd£ºÉè±žÎÄŒþÃèÊö·û
  request:ÏòÉè±ž·¢ËÍµÄ¿ØÖÆÃüÁî,ÃüÁîÐèÒª×ÔŒº¶šÒå
  	  ÀýÈç£º
  	  #define LED_ON   (0x100001)
  	  #define LED_OFF  (0x100002)
  ...:Èç¹ûÓŠÓÃ³ÌÐòÒªŽ«µÝµÚÈýžö²ÎÊý,µÚÈýžö²ÎÊýÒªŽ«µÝÓÃ»§»º³åÇø
      µÄÊ×µØÖ·,œ«ÀŽµ×²ãÇý¶¯¿ÉÒÔ·ÃÎÊÕâžöÓÃ»§»º³åÇøµÄÊ×µØÖ·
      Í¬Ñùµ×²ãÇý¶¯²»ÄÜÖ±œÓ·ÃÎÊ,ÐèÒªÀûÓÃÄÚŽæ¿œ±Žº¯Êý
  ·µ»ØÖµ£º³É¹Š·µ»Ø0£¬Ê§°Ü·µ»Ø-1
  ²Î¿ŒŽúÂë£º
  //Ž«µÝÁœžö²ÎÊý£º
  //¿ªµÆ
  ioctl(fd, LED_ON);
  //¹ØµÆ
  ioctl(fd, LED_OFF);
  ËµÃ÷£ºœöœö·¢ËÍÃüÁî
  
  //Ž«µÝÈýžö²ÎÊý£º
  //¿ªµÚÒ»žöµÆ£º
  int uindex = 1;
  ioctl(fd, LED_ON, &uindex); 	  
  
  //¹ØµÚÒ»žöµÆ£º
    int uindex = 1;
  ioctl(fd, LED_OFF, &uindex);     
  ËµÃ÷£º²»œöœö·¢ËÍÃüÁî,»¹Ž«µÝÓÃ»§»º³åÇøµÄÊ×µØÖ·,Íê³ÉºÍÉè±žµÄ¶Á»òÕßÐŽ
      
  2.2.ioctl¶ÔÓŠµÄµ×²ãÇý¶¯µÄœÓ¿Ú
  »ØÒäC±à³Ì£º
  int a = 0x12345678;
  int *p = &a;
  printf("a = %#x\n", *p);
  µÈŒÛÓÚ£º
  unsigned long p = &a;
  printf("a = %#x\n", *(int *)p);
  
  ioctl¶ÔÓŠµÄµ×²ãÇý¶¯µÄœÓ¿Ú
  struct file_operations {
  	long (*unlocked_ioctl)(struct file *file,
  				unsigned int cmd,
  				unsigned long arg)
  }; 
  µ÷ÓÃ¹ØÏµ£º
  ÓŠÓÃioctl->C¿âioctl->ÈíÖÐ¶Ï->ÄÚºËsys_ioctl->Çý¶¯unlocked_ioctlœÓ¿Ú
  œÓ¿Ú¹ŠÄÜ£º
  1.²»œöœöÏòÉè±ž·¢ËÍ¿ØÖÆÃüÁî
  2.»¹ÄÜ¹»ºÍÉè±žœøÐÐÊýŸÝµÄ¶Á»òÕßÐŽ²Ù×÷
  ²ÎÊý£º
  file£ºÎÄŒþÖžÕë
  cmd:±£ŽæÓÃ»§Ž«µÝ¹ýÀŽµÄ²ÎÊý,±£ŽæÓŠÓÃioctlµÄµÚ¶þžö²ÎÊý
  arg£ºÈç¹ûÓŠÓÃioctlŽ«µÝµÚÈýžö²ÎÊý,arg±£ŽæÓÃ»§»º³åÇøµÄ
       Ê×µØÖ·,ÄÚºË²»ÔÊÐíÖ±œÓÖ±œÓ·ÃÎÊ(int kindex=*(int *)arg)
       ÐèÒªÀûÓÃÄÚŽæ¿œ±Žº¯Êý,Ê¹ÓÃÊ±×¢ÒâÊýŸÝÀàÐÍµÄ×ª»»
  
  °žÀý£ºÀûÓÃioctlÊµÏÖ¿ª¹ØÈÎÒâÒ»žöµÆ
  ÊµÊ©²œÖè£º
  ÐéÄâ»úÖŽÐÐ£º
  mkdir /opt/drivers/day04/1.0 -p
  cd /opt/drivers/day04/1.0
  vim led_drv.c
  vim Makefile
  vim led_test.c
  make
  arm-linux-gcc -o led_test led_test.c
  cp led_drv.ko led_test /opt/rootfs/home/drivers
  
  ARMÖŽÐÐ£º
  insmod /home/drivers/led_drv.ko
  cat /proc/devices
  mknod /dev/myled c Ö÷Éè±žºÅ 0
  /home/drivers/led_test on 1
  /home/drivers/led_test on 2
  /home/drivers/led_test off 1
  /home/drivers/led_test off 2

3.linuxÄÚºË×Ö·ûÉè±žÇý¶¯Ö®Éè±žÎÄŒþµÄ×Ô¶¯ŽŽœš
  3.1.Éè±žÎÄŒþÊÖ¶¯ŽŽœš
      mknod /dev/Éè±žÎÄŒþÃû  c  Ö÷Éè±žºÅ  ŽÎÉè±žºÅ
  3.2.Éè±žÎÄŒþ×Ô¶¯ŽŽœšÊµÊ©²œÖè£º
  1.±£Ö€žùÎÄŒþÏµÍ³rootfsŸßÓÐmdev¿ÉÖŽÐÐ³ÌÐò
    mdev¿ÉÖŽÐÐ³ÌÐòœ«ÀŽ»á°ïÄã×Ô¶¯ŽŽœšÉè±žÎÄŒþ
    which is mdev
    /sbin/mdev
  2.±£Ö€žùÎÄŒþÏµÍ³rootfsµÄÆô¶¯œÅ±Ÿetc/init.d/rcS±ØÐëÓÐ
    ÒÔÏÂÁœŸä»°£º
    /bin/mount -a
    echo /sbin/mdev > /proc/sys/kernel/hotplug
    ËµÃ÷£º
    /bin/mount -a:œ«ÀŽÏµÍ³»á×Ô¶¯œâÎöetc/fstabÎÄŒþ£¬œøÐÐ
                  Ò»ÏµÁÐµÄ¹ÒœÓ¶¯×÷
    echo /sbin/mdev > /proc/sys/kernel/hotplug£ºœ«ÀŽÇý¶¯
    ŽŽœšÉè±žÎÄŒþÊ±,»áœâÎöhotplugÎÄŒþ,Çý¶¯×îÖÕÆô¶¯mdevÀŽ°ï
    Çý¶¯ŽŽœšÉè±žÎÄŒþ 
  3.±£Ö€žùÎÄŒþÏµÍ³rootfs±ØÐëÓÐetc/fstabÎÄŒþ,ÎÄŒþÄÚÈÝÈçÏÂ£º
    proc           /proc        proc   defaults 0 0
    sysfs          /sys         sysfs  defaults 0 0
    œ«/proc,/sysÄ¿ÂŒ·Ö±ð×÷Îªprocfs,sysfsÁœÖÖÐéÄâÎÄŒþÏµÍ³
    µÄÈë¿Ú,ÕâÁœžöÄ¿ÂŒÏÂµÄÄÚÈÝ¶ŒÊÇÄÚºË×ÔŒºŽŽœš,ŽŽœšµÄÄÚŽæ
    ŽæÔÚÓÚÄÚŽæÖÐ
  4.Çý¶¯³ÌÐòÖ»Ðèµ÷ÓÃÒÔÏÂËÄžöº¯ÊýŒŽ¿ÉÍê³ÉÉè±žÎÄŒþµÄ×Ô¶¯
    ŽŽœšºÍ×Ô¶¯ÉŸ³ý
    struct class *cls; //¶šÒåÒ»žöÉè±žÀàÖžÕë
    //¶šÒåÒ»žöÉè±žÀà,Éè±žÀàÃûÎªtarena(ÀàËÆ³€Ê÷ÖŠ)
    cls = class_create(THIS_MODULE, "tarena");
    //ŽŽœšÉè±žÎÄŒþ(ÀàËÆ³€Æ»¹û)
    device_create(cls, NULL, Éè±žºÅ, NULL, Éè±žÎÄŒþÃû);
    ÀýÈç£º
    //×Ô¶¯ÔÚ/dev/ŽŽœšÒ»žöÃûÎªmyledµÄÉè±žÎÄŒþ
    device_create(cls, NULL, dev, NULL, "myled");
   
    //ÉŸ³ýÉè±žÎÄŒþ(ÕªÆ»¹û)
    device_destroy(cls, dev);
    
    //ÉŸ³ýÉè±žÀà(¿³Ê÷ÖŠ)
    class_destroy(cls);
    
    °žÀý£ºÔÚioctlÊµÏÖµÄÉè±žÇý¶¯ÖÐÌíŒÓÉè±žÎÄŒþ×Ô¶¯ŽŽœš¹ŠÄÜ

4.linuxÄÚºË×Ö·ûÉè±žÇý¶¯Ö®Íš¹ýŽÎÉè±žºÅÇø·ÖÓ²ŒþžöÌå
  4.1.Ã÷È·£º¶àžöÓ²ŒþÉè±žžöÌå¿ÉÒÔ×÷ÎªÒ»žöÓ²Œþ¿ŽŽý,Çý¶¯Ò²ÄÜ¹»
            Íš¹ýÈíŒþœøÐÐÇø·Ö
  4.2.ÊµÏÖËŒÂ·£º
  1.Çý¶¯¹ÜÀíµÄÓ²ŒþÌØÐÔÏàËÆ
    ËÄžöUART,NandµÄ¶àžö·ÖÇø
    ²»ÄÜ°ÑLED,°ŽŒü·ÅÔÚÒ»Æð
  2.Ö÷Éè±žºÅÎªÒ»žö,Çý¶¯ÎªÒ»žö,Çý¶¯¹²Ïí
    cdev¹²Ïí
    file_operations¹²Ïí
    .open
    .read
    .write
    .release
    .unlocked_ioctl
    ¶Œ¹²Ïí
  3.¶àžöÓ²ŒþžöÌå¶ŒÓÐ¶ÔÓŠµÄÉè±žÎÄŒþ
  4.Çý¶¯Íš¹ýŽÎÉè±žºÅÇø·Ö,ŽÎÉè±žºÅµÄžöÊýºÍÓ²ŒþžöÌåµÄÊýŸÝÒ»ÖÂ
  
  4.3.ÁËœâÁœžöÊýŸÝœá¹¹£ºstruct inode, struct file  
  struct inode {
  	dev_t	i_rdev; //±£ŽæÉè±žÎÄŒþµÄÉè±žºÅÐÅÏ¢
  	struct cdev *i_cdev; //ÖžÏòÇý¶¯¶šÒå³õÊŒ»¯µÄ×Ö·ûÉè±ž¶ÔÏóled_cdev
  	...
  };   
  ×÷ÓÃ£ºÃèÊöÒ»žöÎÄŒþµÄÎïÀíÉÏµÄÐÅÏ¢(ÎÄŒþUID,GID,Ê±ŒäÐÅÏ¢,ŽóÐ¡µÈ)
  ÉúÃüÖÜÆÚ£ºÎÄŒþÒ»µ©±»ŽŽœš(mknod),ÄÚºËŸÍ»áŽŽœšÒ»žöÎÄŒþ¶ÔÓŠµÄinode¶ÔÏó
            ÎÄŒþÒ»µ©±»Ïú»Ù(rm),ÄÚºËŸÍ»áÉŸ³ýÎÄŒþ¶ÔÓŠµÄinode¶ÔÏó
  ×¢Òâ£ºstruct file_operationsÖÐµÄopen,releaseœÓ¿ÚµÄµÚÒ»žö
  ÐÎ²Îstruct inode *inode,ŽËÖžÕëŸÍÊÇÖžÏòÄÚºËŽŽœšµÄinode¶ÔÏó
  ËùÒÔ,Çý¶¯¿ÉÒÔÍš¹ýinodeÖžÕë»ñÈ¡µœÉè±žºÅÐÅÏ¢£ºinode->i_rdev           
  
  struct file {
  	const struct file_operations *f_op;//ÖžÏòÇý¶¯¶šÒå³õÊŒ»¯µÄÓ²Œþ²Ù×÷œÓ¿Ú¶ÔÏóled_fops
  	...	
  };  
  ×÷ÓÃ£ºÃèÊöÒ»žöÎÄŒþ±»Žò¿ªÒÔºóµÄÐÅÏ¢
  ÉúÃüÖÜÆÚ£ºÒ»µ©ÎÄŒþ±»³É¹ŠŽò¿ª(open),ÄÚºËŸÍ»áŽŽœšÒ»žöfile¶ÔÏóÀŽÃèÊö
            Ò»žöÎÄŒþ±»Žò¿ªÒÔºóµÄ×ŽÌ¬ÊôÐÔ
            Ò»µ©ÎÄŒþ±»¹Ø±Õ(close),ÄÚºËŸÍ»áÏú»Ù¶ÔÓŠµÄfile¶ÔÏó
  
  ×Üœá£ºÒ»žöÎÄŒþÖ»ÓÐÒ»žöinode¶ÔÏó,µ«ÊÇ¿ÉÒÔÓÐ¶àžöfile¶ÔÏó                        
  ÇÐŒÇ£ºÍš¹ýfile¶ÔÏóÖžÕë»ñÈ¡inode¶ÔÏóÖžÕëµÄ·œ·š£º
  ÄÚºËÔŽÂë£ºfbmem.c
  struct inode *inode = file->f_path.dentry->d_inode;
  ÌáÈ¡ŽÎÉè±žºÅ£º
  int minor = MINOR(inode->i_rdev);
   
  °žÀý£º±àÐŽÉè±žÇý¶¯,ÊµÏÖÍš¹ýŽÎÉè±žºÅÀŽÇø·ÖÁœžöLED
  mknod /dev/myled1 c  250 0
  mknod /dev/myled2 c  250 1        

**********************************************************
¶þ.linuxÄÚºË»ìÔÓÉè±žÇý¶¯¿ª·¢Ïà¹ØÄÚÈÝ
1.žÅÄî
  »ìÔÓÉè±ž±ŸÖÊ»¹ÊÇ×Ö·ûÉè±ž,Ö»ÊÇ»ìÔÓÉè±žµÄÖ÷Éè±žºÅÓÉÄÚºËÒÑŸ­
  ¶šÒåÎª,Îª10,œ«ÀŽž÷žö»ìÔÓÉè±žžöÌåÍš¹ýŽÎÉè±žºÅÀŽœøÐÐÇø·Ö
2.»ìÔÓÉè±žÇý¶¯µÄÊýŸÝœá¹¹
  struct miscdevice {
  	int minor;
	const char *name;
	const struct file_operations *fops;
	...
  };      
  minor:»ìÔÓÉè±ž¶ÔÓŠµÄŽÎÉè±žºÅ,Ò»°ã³õÊŒ»¯Ê±Öž¶š
        MISC_DYNAMIC_MINOR,±íÃ÷ÈÃÄÚºË°ïÄã·ÖÅäÒ»žöŽÎÉè±žºÅ
  name:Éè±žÎÄŒþÃû,²¢ÇÒÉè±žÎÄŒþÓÉÄÚºË°ïÄã×Ô¶¯ŽŽœš
  fops£º»ìÔÓÉè±žŸßÓÐµÄÓ²Œþ²Ù×÷œÓ¿Ú
  
  ÅäÌ×º¯Êý£º
  misc_register(&»ìÔÓÉè±ž¶ÔÏó);//×¢²á»ìÔÓÉè±žµœÄÚºË
  misc_deregister(&»ìÔÓÉè±ž¶ÔÏó);//Ð¶ÔØ»ìÔÓÉè±ž    

°žÀý£ºÀûÓÃ»ìÔÓÉè±žÊµÏÖLEDÇý¶¯,žøÓÃ»§Ìá¹©µÄœÓ¿ÚÎªioctl
Í¬ÉÏ
vim·ÖÆÁÏÔÊŸ£º
œøÈëvimµÄÃüÁîÐÐÄ£ÊœÊäÈë£º
vs ÎÄŒþÃû //×óÓÒ·ÖÆÁ
sp ÎÄŒþÃû //ÉÏÏÂ·ÖÆÁ
ÆÁÄ»ÇÐ»»£ºctrl+ww      
      
-----------------------------------------------------------------------
»Ø¹Ë£º
1.linuxÄÚºË×Ö·ûÉè±žÇý¶¯¿ª·¢Ïà¹ØÄÚÈÝ
  1.1.Éè±žÎÄŒþ
      /dev/
      mknod
      Èýžö±£Ö€+ËÄžöº¯Êý
      ÏµÍ³µ÷ÓÃº¯Êý
  1.2.Éè±žºÅ
      dev_t
      MKDEV
      MAJOR
      MINOR
      Ö÷Éè±žºÅ
      ŽÎÉè±žºÅ
      ×ÊÔŽ
      ÉêÇë
      ÊÍ·Å
  1.3.×Ö·ûÉè±žÇý¶¯ÊýŸÝÀàÐÍ
      struct cdev
      ÅäÌ×º¯Êý
      cdev_init
      cdev_add
      cdev_del
  1.4.Ó²Œþ²Ù×÷œÓ¿ÚÊýŸÝÀàÐÍ
      struct file_operations
      open
      release
      read
      write
      	×¢Òâ£ºbuf
      unlocke_ioctl
      	×¢Òâ£ºarg
  1.5.ÄÚŽæ¿œ±Žº¯Êý
      copy_from_user
      copy_to_user
  1.6.Éè±žÎÄŒþ×Ô¶¯ŽŽœš
      Èýžö±£Ö€
      ËÄžöº¯Êý
  1.7.Áœžö¶îÍâÊýŸÝœá¹¹
      struct inode
      	.i_rdev
      struct file
      inodeºÍfile¹ØÏµ£ºfbmem.c
      
2.linuxÄÚºË»ìÔÓÉè±žÇý¶¯¿ª·¢Ïà¹ØÄÚÈÝ
  ±ŸÖÊ»¹ÊÇ×Ö·ûÉè±ž
  Ö÷Éè±žºÅÎª10
  Íš¹ýŽÎÉè±žºÅÇø·Ö
  ÊýŸÝœá¹¹£º
  struct miscdevice
  	.minor = MISC_DYNAMIC_MINOR->ÈÃÄÚºË·ÖÅäŽÎÉè±žºÅ
  	.name  = ÄÚºË°ïÄãŽŽœšÉè±žÎÄŒþ
  	.fops  = Ó²Œþ²Ù×÷œÓ¿Ú
  ÅäÌ×º¯Êý£º
  misc_register
  misc_deregister

3.linuxÄÚºËÖÐ¶Ï±à³Ì
  ÃæÊÔÌâ£ºÌžÌž¶ÔÖÐ¶ÏµÄÀíœâ
  3.1.ŒÆËã»úÎªÊ²ÃŽÓÐÖÐ¶Ï»úÖÆ
  ÓÉÓÚŒÆËã»úÓ²Œþ²ãÃæÀŽœ²ÓÉCPUºÍÍâÉè×é³É,CPUÐèÒªžúÍâÉèœøÐÐ²»¶ÏµÄ
  ÊýŸÝÍšÐÅ,ÓÖÓÉÓÚÍâÉèµÄŽŠÀíËÙ¶ÈÔ¶Ô¶ÂýÓÚCPUµÄŽŠÀíËÙ¶È,CPUÎªÁË
  ±£Ö€·ÃÎÊÍâÉèÊ±µÄÊýŸÝÕý³£,Ò»°ã»áÏëµœ²ÉÓÃÂÖÑ¯·œÊœ(ËÀµÈ,CPU²»ÄÜ
  žÉ±ðµÄÆäËûÊÂÇé),×îÖÕœµµÍCPUµÄÀûÓÃÂÊ,ÈÃ¹ŠºÄÌážß;¶ÔÓÚÕâÖÖÇé¿ö
  ¿ÉÒÔ¿ŒÂÇÊ¹ÓÃÖÐ¶Ï»úÖÆ,ÕâÀïÒÔCPU¶ÁÈ¡UARTÊýŸÝÎªÀý£º
  CPU¶ÁÈ¡UARTÊýŸÝÊ±(œÓÊÕ»º³åÇøŒÄŽæÆ÷),µ±·¢ÏÖÊýŸÝÃ»ÓÐ×Œ±ž
  ŸÍÐ÷,CPU¿ÉÒÔÈ¥žÉÆäËû±ðµÄÊÂÇé(ŽŠÀíÄ³žöœø³Ì),Ò»µ©UARTœÓÊÕ»º³åÇø
  ÓÐÊýŸÝ,UART¿ØÖÆÆ÷»ážøCPU·¢ËÍÒ»žöÖÐ¶ÏÐÅºÅ(àË,ÎÒÕâÓÐÊýÁË),
  CPUÒ»µ©œÓÊÕµœÕâžöÖÐ¶ÏÐÅºÅ,CPUÍ£Ö¹ÊÖÍ·µÄ¹€×÷,×ªÈ¥¶ÁÈ¡UARTÊýŸÝ
  ¶ÁÈ¡Íê±Ï,CPUŒÌÐøœÓ×ÅÖŽÐÐÔ­ÏÈ±»Žò¶ÏµÄ¹€×÷,ÌážßÁËCPUµÄÀûÓÃÂÊ
  
  3.2.ÖÐ¶ÏµÄÓ²ŒþŽ¥·¢¹ý³ÌºÍÓ²ŒþÁ¬œÓ
  Ã÷È·£ºÍâÉè²úÉúµÄÖÐ¶ÏÐÅºÅ²»»áÖ±œÓËÍŽïCPU,¶øÊÇÒªŸ­¹ý
        ÖÐ¶Ï¿ØÖÆÆ÷µÄŽŠÀíÒÔºóÔÙÓÉÖÐ¶Ï¿ØÖÆÆ÷Ÿö¶šÊÇ·ñËÍŽï
        žøCPUÒ»žöÖÐ¶ÏÐÅºÅ(IRQ/FIQ)
  »­³öÒ»žöŒòÒªµÄÖÐ¶ÏÓ²ŒþÁ¬œÓÍŒ
  ÍâÉèºÍÖÐ¶Ï¿ØÖÆµÄÖÐ¶ÏÏß·ÖÁœÀà£º
  ÍâÉèÖÐ¶Ï£ºÖÐ¶ÏÏß¿ÉÒÔÓÐÔ­ÀíÍŒÀŽµ÷Õû(ÈâÑÛÄÜ¿Žµœ)
  ÄÚ²¿ÖÐ¶Ï£ºÖÐ¶ÏÏß²»¿ÉÐÞžÄ(Œ¯³ÉŽŠÀíÆ÷ÄÚ²¿,ÈâÑÛ¿Ž²»µœ)
  
  ÖÐ¶Ï¿ØÖÆÆ÷µÄ¹ŠÄÜ£º
  1.ÄÜ¹»Ê¹ÄÜ»òÕßœûÖ¹Ä³žöÍâÉèÖÐ¶ÏÐÅºÅ
  2.ÄÜ¹»ÅäÖÃÍâÉèÖÐ¶ÏÐÅºÅœ«ÀŽÒÔIRQ»¹ÊÇFIQ·¢žøCPU
  3.ÄÜ¹»ÉèÖÃÍâÉèÖÐ¶ÏµÄÓÅÏÈŒ¶
  4.ÄÜ¹»ÉèÖÃÍâÉèÖÐ¶ÏÐÅºÅµÄÓÐÐ§Ž¥·¢·œÊœ
    žßµçÆœŽ¥·¢
    µÍµçÆœŽ¥·¢
    ÉÏÉýÑØŽ¥·¢
    ÏÂœµÑØŽ¥·¢
    Ë«±ßÑØŽ¥·¢
    
  ÒÔ°ŽŒüÎªÀý,ÌžÌžÖÐ¶ÏµçÐÅºÅµÄŽ¥·¢Á÷³Ì£º
  °ŽŒüÃ»ÓÐ²Ù×÷,ÖÐ¶ÏÏßÎªžßµçÆœ,°ŽŒü°ŽÏÂ,ÖÐ¶ÏÏßÉÏÓÐÒ»žöÏÂœµÑØ
  µçÐÅºÅ,ŽËµçÐÅºÅ×Ô¶¯ÅÜµœÖÐ¶Ï¿ØÖÆÆ÷,ÖÐ¶Ï¿ØÖÆŸ­¹ýÒ»·¬µÄÅÐ¶Ï
  Èç¹ûºÏÊÊ,ÖÐ¶Ï¿ØÖÆÆ÷×îÖÕžøCPU·¢ËÍÒ»žöÖÐ¶ÏÐÅºÅ,Õâžö¹ý³Ì¶ŒÊÇ
  Ó²Œþ×Ô¶¯Íê³É,Ò»µ©CPUœÓÊÕµœÖÐ¶ÏµçÐÅºÅ,CPU¿ªÆôÖÐ¶ÏÒì³£µÄŽŠÀí
  Á÷³Ì£º
  ARMºËÓ²Œþœ«Íê³É£º
  1.±ž·ÝCPSRµœSPSR_IRQ/FIQ
  2.ÉèÖÃCPSR
    MODE
    T
    I
    F
  3.±£Žæ·µ»ØµØÖ·lr_irq/fiq=pc-4
  4.ÉèÖÃPCÎªÖÐ¶ÏÒì³£ŽŠÀíÈë¿Ú
    pc=0x18
    »òÕß
    pc=0x1c
  5.œøÈëÁËÒì³£ÏòÁ¿±íµÄÖÐ¶ÏŽŠÀíÈë¿Ú,¿ªÆôÈíŒþµÄÖÐ¶ÏÒì³£ŽŠÀí
  6.ÖÐ¶ÏµÄÈíŒþŽŠÀí¹ý³Ì£º
    ÊµÏÖ±àÐŽºÃÒì³£ÏòÁ¿±íµÄŽúÂë
    ±£»€ÏÖ³¡
    ŽŠÀíÖÐ¶ÏŽŠÀíº¯Êý
    »ÖžŽÏÖ³¡
  
  3.3.»­ÍŒÕ¹ÊŸÖÐ¶ÏµÄŽŠÀíÁ÷³Ì
  ŸßÌå²ÎŒûint.bmp
  
  3.4.ÖÐ¶Ï±à³Ì²œÖè
  Ã÷È·£º²»¹ÜÊÇARMÂã°å³ÌÐò»¹ÊÇŽø²Ù×÷ÏµÍ³µÄ³ÌÐò,ÖÐ¶Ï±à³Ì±ØÐëÒ»ÖÂ
  ÖÐ¶Ï±à³ÌËÄ²œÖè£º
  1.±àÐŽÒì³£ÏòÁ¿±íµÄŽúÂë
  2.±àÐŽ±£ŽæÏÖ³¡µÄŽúÂë
  3.±àÐŽÖÐ¶ÏŽŠÀíº¯Êý
    ŸßÌåÄÚÈÝÈçºÎÊµÏÖ,ÑÏžñ°ŽÕÕÓÃ»§µÄÐèÇóÀŽ¶š
  4.±àÐŽ»ÖžŽÏÖ³¡µÄŽúÂë
  
  Ã÷È·£º²»¹ÜÊÇARMÂã°å»¹ÊÇÔÚlinuxÏµÍ³ÏÂ,1,2,4Èý²œÖè¶ŒÊÇÓÉ
        ARM¹«ËŸ»òÕßlinuxÄÚºËÒÑŸ­°ïÄãÊµÏÖ£¡µÚ3²œ±ØÐëÓÉ³ÌÐòÔ±
        žùŸÝÓÃ»§µÄÐèÇóÀŽÍê³É£¡
  
  ÎÊ£ºlinuxÄÚºËÇý¶¯ÈçºÎÌíŒÓÒ»žöÍâÉèµÄÖÐ¶ÏŽŠÀíº¯ÊýÄØ£¿
      Ò»µ©ÖÐ¶ÏŽŠÀíº¯ÊýÌíŒÓÍê³É,œ«ÀŽÍâÉè²úÉúÖÐ¶Ï,ÄÚºË
      ŸÍ»á×îÖÕµ÷ÓÃŽËÖÐ¶ÏŽŠÀíº¯Êý,Íê³ÉÓÃ»§µÄÒµÎñÐèÇó£¡
  Žð£ºÀûÓÃŽóÃû¶Š¶ŠµÄrequest_irqº¯ÊýŒŽ¿ÉÍê³ÉÏòÄÚºËÌíŒÓ×¢²á
      Ò»žöÍâÉèµÄÖÐ¶ÏŽŠÀíº¯Êý£¡
  
  3.5.ŽóÃû¶Š¶ŠµÄrequest_irqº¯ÊýÏêœâ
  º¯ÊýÔ­ÐÍ£º
  int request_irq(unsigned int irq,
  		   irq_handler_t handler,
  		   unsigned long flags,
  		   const char *name,
  		   void *dev_id)
  ¹ŠÄÜ£º
  1.ÏòÄÚºËÉêÇëÓ²ŒþÖÐ¶Ï×ÊÔŽ
  2.ÏòÄÚºË×¢²áÓ²ŒþÖÐ¶Ï¶ÔÓŠµÄÖÐ¶ÏŽŠÀíº¯Êý
  
  ²ÎÊý£º
  irq:Ó²ŒþÖÐ¶Ï¶ÔÓŠµÄÄÚºËÈíŒþ±àºÅ(ÀàËÆÉí·ÝÖ€ºÅ),ÓÖ³ÆÖÐ¶ÏºÅ
      ÒÔºêµÄÐÎÊœ±íÊŸ
      ÀýÈç£º
      Ó²ŒþÖÐ¶Ï       ÖÐ¶ÏºÅ
      XEINT0	     IRQ_EINT(0)
      XEINT1	     IRQ_EINT(1)
      ......	     ....
      XEINT10	     IRQ_EINT(10)
 
 handler:ÖÐ¶ÏŽŠÀíº¯Êý,Ö»Ðèœ«ÖÐ¶ÏŽŠÀíº¯ÊýµØÖ·Ž«µÝ¹ýÀŽŒŽ¿É
         Ò»µ©×¢²áÖÐ¶ÏŽŠÀíº¯ÊýµœÄÚºË,œ«ÀŽÓ²ŒþŽ¥·¢ÖÐ¶Ï
         ÄÚºËŸÍ»áµ÷ÓÃŽËº¯Êý
         ÖÐ¶ÏŽŠÀíº¯ÊýµÄÔ­ÐÍ£º
         irqreturn_t ÖÐ¶ÏŽŠÀíº¯ÊýÃû(int irq, void *dev_id)
         irq:µ±Ç°Ž¥·¢µÄÓ²ŒþÖÐ¶Ï¶ÔÓŠµÄÖÐ¶ÏºÅ
         dev_id:žøÖÐ¶ÏŽŠÀíº¯ÊýŽ«µÝµÄ²ÎÊýÐÅÏ¢
                œšÒé²ÎÊýÊ¹ÓÃÊ±,ÊýŸÝÀàÐÍœøÐÐÇ¿×ª
         
 flags:ÖÐ¶Ï±êÖŸ
       ¶ÔÓÚÍâ²¿ÖÐ¶Ï,ÖÐ¶Ï±êÖŸ£º
       IRQ_TRIGGER_FALLING:
       IRQ_TRIGGER_RISING:
       IRQ_TRIGGER_HIGH:
       IRQ_TRIGGER_LOW:
       ÉèÖÃÓÐÐ§µÄŽ¥·¢·œÊœ
       ¿ÉÒÔ×öÎ»»ò²Ù×÷
       
       ¶ÔÓÚÄÚ²¿ÖÐ¶Ï,žø0ŒŽ¿É,Íš¹ýÅäÖÃ¿ØÖÆÆ÷ÄÚ²¿ŒÄŽæÆ÷
       ÊµÏÖÓÐÐ§µÄÖÐ¶ÏŽ¥·¢·œÊœÅäÖÃ
 name£ºÖÐ¶ÏÃû³Æ
       Íš¹ýcat /proc/interrupts²é¿ŽŽËÃû³Æ
       
 dev_id:žøÖÐ¶ÏŽŠÀíº¯ÊýŽ«µÝµÄ²ÎÊý 
        ÏëÏëpthread_create
 
 void *thread_func(void *arg)
 {
 	int *p = (int *)arg;
 	
 	printf("g_data = %#x\n", *p);	
 }
 
 int g_data = 0x55;
 pthread_create(&id, NULL, thread_func, &g_data);     
       
 
 ÖÐ¶Ï²»ÔÙÊ¹ÓÃÊ±,ŒÇµÃÒªÉŸ³ýÖÐ¶ÏŽŠÀíº¯ÊýºÍÊÍ·Å×ÊÔŽ
 free_irq(int irq, void *dev_id)
 irq:ÖÐ¶ÏºÅ
 dev_id:žøÖÐ¶ÏŽŠÀíº¯ÊýŽ«µÝµÄ²ÎÊý,ÇÐŒÇ×¢²áÖÐ¶ÏŽŠÀíº¯Êý
        Ž«µÝµÄ²ÎÊýÎñ±ØÒªºÍÊÍ·ÅŽ«µÝµÄ²ÎÊýÒªÒ»ÖÂ£¡     
 
 °žÀý£º²ÉÓÃÖÐ¶Ï·œÊœ,±àÐŽ°ŽŒüÇý¶¯,ÊµÏÖ°ŽŒü°ŽÏÂ»òÕßËÉ¿ªŽòÓ¡
       °ŽŒüµÄÐÅÏ¢
 ÊµÊ©²œÖè£º
 ÏÈÐ¶ÔØ¹Ù·œµÄ°ŽŒüÇý¶¯£º
 cd /opt/kernel
 make menuconfig
   Device Drivers->
   	Input devices supports->
   		Keyboards->
   		   <*> S3c gpio keypads support... //È¥µô
 ±£ŽæÍË³ö
 make zImage
 cp arch/arm/boot/zImage /tftpboot
 ÓÃÐÂzImageÖØÆô¿ª·¢°å
 
 mkdir /opt/drivers/day05/1.0 -p
 cd /opt/drivers/day05/1.0
 vim btn_drv.c
 vim Makefile
 make
 cp btn_drv.ko /opt/rootfs/home/drivers/
 
 ARM²âÊÔ£º
 insmod /home/drivers/btn_drv.ko
 cat /proc/interrupts //²é¿ŽÖÐ¶Ï×¢²áµÄÐÅÏ¢
            CPU0
 16:         63    s3c-uart  s5pv210-uart
 18:         98    s3c-uart  s5pv210-uart
 32:          0  s5p_vic_eint  KEY_UP
 33:          0  s5p_vic_eint  KEY_DOWN
 ...	    ...    ...          ...
 µÚÒ»ÁÐ£ºÖÐ¶ÏºÅ,ÀýÈçIRQ_EINT(0)=32
 µÚ¶þÁÐ£ºÖÐ¶ÏŽ¥·¢ŽÎÊý
 µÚÈýÁÐ£ºÖÐ¶ÏÀàÐÍ
 µÚËÄÁÐ£ºÖÐ¶ÏÃû³Æ
 
 °ŽÏÂ»òÕßËÉ¿ª°ŽŒü²é¿ŽŽòÓ¡ÐÅÏ¢
 cat /proc/interrupts //²é¿ŽÖÐ¶ÏµÄŽ¥·¢ŽÎÊý
 
4.linuxÄÚºËÖÐ¶Ï±à³ÌÖ®¶¥°ë²¿ºÍµ×°ë²¿»úÖÆ
  4.1.Ã÷È·Ïà¹ØžÅÄî
  linuxÏµÍ³,CPUÈíŒþ²ãÃæÒ»ÌìµœÍí×öÁœÀàÊÂ£ºœø³ÌºÍÖÐ¶Ï,ÄÄžöÒªÏëÔËÐÐ,±ØÐëÏÈ»ñÈ¡µœCPU×ÊÔŽ
  ¡°ÈÎÎñ¡±£º°üÀšœø³ÌºÍÖÐ¶Ï
  ¡°ÐÝÃß¡±£ºœöŽæÔÚœø³ÌµÄÊÀœçÀï,œø³ÌÐÝÃßÖ»ÊÇµ±Ç°œø³Ì»áÊÍ·ÅËùÕŒÓÃµÄCPU×ÊÔŽžø
          ÆäËûÈÎÎñÊ¹ÓÃ,ÖÐ¶ÏÊÇ²»ÔÊÐíÐÝÃß²Ù×÷
  ¡°ÓÅÏÈŒ¶¡±£ººâÁ¿Ò»žöÈÎÎñ»ñÈ¡CPUµÄÒ»ÖÖÄÜÁŠ,ÓÅÏÈŒ¶Ôœžß,»ñÈ¡CPU×ÊÔŽµÄÄÜÁŠŸÍÔœÇ¿
  ÖÐ¶Ï·ÖÁœÀà£ºÓ²ŒþÖÐ¶ÏºÍÈíÖÐ¶Ï
  ÖÐ¶Ï²»Á¥ÊôÓÚÈÎºÎœø³Ì,²»²ÎÓëœø³ÌÖ®ŒäµÄµ÷¶È
  Ç°ÌáÊÇÔÚlinuxÏµÍ³,ÈÎÎñÓÅÏÈŒ¶µÄ»®·Ö£º
  Ó²ŒþÖÐ¶ÏÓÅÏÈŒ¶ŽóÓÚÈíÖÐ¶Ï
  ÈíÖÐ¶ÏµÄÓÅÏÈŒ¶ŽóÓÚœø³Ì
  ÈíÖÐ¶ÏÓÐÓÅÏÈŒ¶Ö®·Ö
  œø³ÌÓÐÓÅÏÈŒ¶Ö®·Ö
  Ó²ŒþÖÐ¶ÏÎÞÓÅÏÈŒ¶Ö®·Ö
  
  4.2.ÇÐŒÇ£ºlinuxÄÚºËÒªÇóÖÐ¶ÏŽŠÀíº¯ÊýµÄÖŽÐÐËÙ¶ÈÔœ¿ìÔœºÃ,ÆäËû
      ÈÎÎñŸÍÄÜ¹»Œ°Ê±»ñÈ¡µœCPU×ÊÔŽ
      ×¢Òâ£ºÖÐ¶ÏŽŠÀíº¯Êýžü²»ÄÜ×öÐÝÃß²Ù×÷
      Èç¹ûÖÐ¶ÏŽŠÀíº¯Êý³€Ê±ŒäÕŒÓÃCPU×ÊÔŽ,»áÓ°ÏìÏµÍ³µÄ²¢·¢ÄÜÁŠ
      ºÍÏìÓŠÄÜÁŠ£¡
      
      ÎÊ£ºÓÐÐ©³¡ºÏ,ÖÐ¶ÏŽŠÀíº¯ÊýÊÆ±Ø»á³€Ê±ŒäÕŒÓÃCPU×ÊÔŽ
          Ò²»áÊÆ±ØÓ°ÏìÏµÍ³µÄ²¢·¢ºÍÏìÓŠÄÜÁŠ,ÔõÃŽ°ì£¿
      Žð£ºÍš¹ýÖÐ¶Ï±à³ÌÖ®¶¥°ë²¿ºÍµ×°ë²¿»úÖÆœøÐÐÓÅ»¯
  	  œ«Ô­ÏÈµÄÖÐ¶ÏŽŠÀíº¯ÊýÒ»·ÖÎª¶þ,·Ö±ðÊÇ¶¥°ë²¿ºÍ
  	  µ×°ë²¿
  
  4.3.¶¥°ë²¿ÌØµã
  ±ŸÖÊÉÏŸÍÊÇÖÐ¶ÏŽŠÀíº¯Êý,Ò²ŸÍÊÇÒ»µ©Ó²Œþ²úÉúÖÐ¶Ï,ÄÚºËÊ×ÏÈ
  ÖŽÐÐ¶¥°ë²¿µÄÄÚÈÝ(ÄÚºËÊ×ÏÈµ÷ÓÃÖÐ¶ÏŽŠÀíº¯Êý)£»
  ŽËÊ±µÄÖÐ¶ÏŽŠÀíº¯ÊýºÍÔ­ÖÐ¶ÏŽŠÀíº¯Êý²»Ò»Ñù,ŽËÊ±µÄÖÐ¶ÏŽŠÀíº¯Êý
  »á×öÔ­ÏÈÖÐ¶ÏŽŠÀíº¯ÊýÖÐ±ÈœÏœôŒ±,ºÄÊ±œÏ¶ÌµÄÄÚÈÝ,Ò»µ©ÖŽÐÐÍê±Ï
  ¿ìËÙÊÍ·ÅCPU×ÊÔŽžøÆäËûÈÎÎñÊ¹ÓÃ£¡
  
  ¶¥°ë²¿ÖŽÐÐÆÚŒä²»ÔÊÐí±»Žò¶Ï,²»ÔÊÐí·¢ÉúCPU×ÊÔŽµÄÇÐ»»£¡
  
  4.4.µ×°ë²¿ÌØµã
  µ×°ë²¿ÒªÖŽÐÐÔ­ÏÈÖÐ¶ÏŽŠÀíº¯ÊýÖÐ²»œôŒ±,ºÄÊ±œÏ³€µÄÄÚÈÝ;
  CPU»áÔÚ"ÊÊµ±µÄÊ±ºò"»áÈ¥ÖŽÐÐµ×°ë²¿µÄÄÚÈÝ;
  ÓÉÓÚËü²»œôŒ±,ËùÒÔÈç¹ûÀŽÁËžßÓÅÏÈŒ¶µÄÈÎÎñÍ¬Ñù¿ÉÒÔŽò¶Ïµ×°ë²¿µÄ
  ÖŽÐÐ¹ý³Ì,ÔÊÐíCPU×ÊÔŽ·¢ÉúÇÐ»»
  
  4.5.µ×°ë²¿ÊµÏÖ·œ·š£ºÈýÖÖ
      tasklet
      ¹€×÷¶ÓÁÐ
      ÈíÖÐ¶Ï
  
  4.6.µ×°ë²¿»úÖÆÖ®taskletÌØµã
  1.±ŸÖÊŸÍÊÇÑÓºóÖŽÐÐµÄÒ»ÖÖÊÖ¶Î
  2.tasklet¶ÔÓŠµÄÑÓºóŽŠÀíº¯Êý,ŽËº¯ÊýÖÐÔ­ÏÈÖÐ¶ÏŽŠÀíº¯ÊýÖÐ
    ²»œôŒ±,ºÄÊ±œÏ³€µÄÄÚÈÝ
  3.taskletÊÇ»ùÓÚÈíÖÐ¶ÏÊµÏÖ,ÓÅÏÈŒ¶žßÓÚœø³Ì,µÍÓÚÓ²ŒþÖÐ¶Ï
    ËùÒÔtaskletÑÓºóŽŠÀíº¯Êý²»ÄÜœøÐÐÐÝÃß²Ù×÷
  4.taskletµÄÊýŸÝœá¹¹
    struct tasklet_struct {
    	void (*function)(unsigned long data);
    	unsigned long data;
    	...
    };
    ³ÉÔ±£º
    function:taskletµÄÑÓºóŽŠÀíº¯Êý,×ö²»œôŒ±,ºÄÊ±œÏ³€µÄÄÚÈÝ
             ²»ÄÜœøÐÐÐÝÃß²Ù×÷
             ÐÎ²Îdata±£ŽæÊÇžøÑÓºóŽŠÀíº¯ÊýŽ«µÝµÄ²ÎÊý,Ò»°ãŽ«µÝ
             ²ÎÊýµÄÖžÕë,×¢ÒâÊýŸÝÀàÐÍµÄ×ª»»
    data£ºŸÍÊÇžøÑÓºóŽŠÀíº¯ÊýŽ«µÝµÄ²ÎÊý
    
    ÅäÌ×º¯Êý£º
    DECLARE_TASKLET(name,func,data);
    ¹ŠÄÜ£º¶šÒå³õÊŒ»¯tasklet¶ÔÏó
    name:tasklet¶ÔÏóÃû
    func:taskletÑÓºóŽŠÀíº¯ÊýµØÖ·
    data:žøÑÓºóŽŠÀíº¯ÊýŽ«µÝµÄ²ÎÊý
    
    tasklet_schedule(&tasklet¶ÔÏó);
    ¹ŠÄÜ£ºÏòÄÚºËµÇŒÇtaskletÑÓºóŽŠÀíº¯Êý,Ò»µ©µÇŒÇÍê³É,ÄÚºË
          »áÔÚ"ÊÊµ±µÄÊ±ºò"È¥ÖŽÐÐ¶ÔÓŠµÄÑÓºóŽŠÀíº¯Êý	
    Èç¹ûÇý¶¯ÖÐÓÐ¶¥°ë²¿(ÖÐ¶ÏŽŠÀíº¯Êý),Ò»°ãÔÚ¶¥°ë²¿µÄŽúÂëÖÐ
    µ÷ÓÃµÇŒÇŒŽ¿É£»
    Èç¹ûÇý¶¯ÖÐÃ»ÓÐ¶¥°ë²¿,ÒÀŸÝÊµŒÊµÄÓ²Œþ²Ù×÷ÐèÇóœøÐÐµ÷ÓÃµÇŒÇ
    ŒŽ¿É£¡
    Ò»µ©µÇŒÇÍê³É,ÄÚºËŸÍ»áÔÚÊÊµ±µÄÊ±ºòÈ¥ÖŽÐÐ£¡
     
    ×îºó±àÐŽºÃÑÓºóŽŠÀíº¯ÊýŒŽ¿É
    
    ÇÐŒÇ£ºtasklet»ùÓÚÈíÖÐ¶ÏÊµÏÖ,ËùÒÔÑÓºóŽŠÀíº¯ÊýÖŽÐÐËÙ¶ÈŸ¡Á¿¿ì
          žü²»ÄÜ×öÐÝÃß²Ù×÷
          
    °žÀý£ºÀûÓÃtasklet"ÓÅ»¯"°ŽŒüÇý¶¯
 
-----------------------------------------------------------------------
»Ø¹Ë£º
1.linuxÄÚºËÖÐ¶Ï±à³Ì
  ÃæÊÔÌâ£ºÌžÌž¶ÔÖÐ¶ÏµÄÀíœâ
  1.ÎªÊ²ÃŽÓÐÖÐ¶Ï»úÖÆ
    ŸÙÀý×Ó
  2.ÖÐ¶ÏµÄÓ²ŒþÁ¬œÓ
    »­ÍŒ
  3.ÖÐ¶ÏµÄŽŠÀí¹ý³Ì
    »­ÍŒ
  4.ÖÐ¶ÏµÄÈíŒþ±à³Ì
    ËÄ²¿Çú
  5.linuxÄÚºËÖÐ¶Ï±à³Ì
    Ä¿±ê£ºÖ»ÐèÏòÄÚºË×¢²áÓ²ŒþÖÐ¶ÏµÄÖÐ¶ÏŽŠÀíº¯ÊýŒŽ¿É
    ŽóÃû¶Š¶Šº¯Êý£ºrequeset_irq/free_irq
    int request_irq(ÖÐ¶ÏºÅ,ÖÐ¶ÏŽŠÀíº¯Êý,ÖÐ¶Ï±êÖŸ,ÖÐ¶ÏÃû³Æ,žøÖÐ¶ÏŽŠÀíº¯ÊýŽ«µÝµÄ²ÎÊý)
    void free_irq(ÖÐ¶ÏºÅ,Ž«µÝ²ÎÊý)  
  6.linuxÄÚºËÖÐ¶Ï±à³ÌµÄ×¢ÒâÊÂÏî
    ÖÐ¶Ï²»Á¥ÊôÓÚÈÎºÎœø³Ì,²»²ÎÓëœø³Ìµ÷¶È
    Ó²ŒþÖÐ¶Ï>ÈíÖÐ¶Ï>œø³Ì
    ÒªÇóÖÐ¶ÏŽŠÀíº¯ÊýÖŽÐÐµÄËÙ¶ÈÔœ¿ìÔœºÃ,Ä¿µÄÌážßÏµÍ³µÄÏàÓŠÄÜÁŠºÍ²¢·¢ÄÜÁŠ
    žü²»ÄÜœøÐÐÐÝÃß²Ù×÷
    ÎÊ£ºÓÐÐ©³¡ºÏÎÞ·šÂú×ãÕâÖÖÒªÇó,ŽËÊ±¿ÉÒÔ¿ŒÂÇÊ¹ÓÃÄÚºËÌá¹©µÄ¶¥°ë²¿ºÍµ×°ë²¿»úÖÆÀŽÓÅ»¯
  7.ÖÐ¶Ï±à³Ì¶¥°ë²¿ºÍµ×°ë²¿»úÖÆ
    ÕâÖÖ»úÖÆµÄ±ŸÖÊÄ¿µÄŸÍÊÇŒ°Ê±ÊÍ·ÅCPU×ÊÔŽ,ÈÃÆäËûžßÓÅÏÈŒ¶µÄ
    ÈÎÎñŒ°Ê±»ñÈ¡µœCPU×ÊÔŽ,Í¶ÈëÔËÐÐ;
    µ×°ë²¿»úÖÆ±ŸÖÊŸÍÊÇÑÓºóÖŽÐÐ,ŸÍÊÇœ«²»ÖØÒªµÄÊÂÇéÍùºóÍÏÑÓ,ÒÔºóÈ¥ÖŽÐÐ
    µ×°ë²¿²¢²»Ò»¶š·ÇÒªºÍ¶¥°ë²¿ÅäºÏÊ¹ÓÃ
    
    ¶¥°ë²¿±ŸÖÊŸÍÊÇÖÐ¶ÏŽŠÀíº¯Êý,œôŒ±,ºÄÊ±œÏ¶ÌµÄÄÚÈÝ,²»¿É±»ÖÐ¶Ï
    µ×°ë²¿ÖŽÐÐ²»œôŒ±,ºÄÊ±œÏ³€µÄÄÚÈÝ,¿ÉÒÔÖÐ¶Ï
    »­ÍŒ
    
    µ×°ë²¿ÊµÏÖ·œ·š£º
    	tasklet
    	¹€×÷¶ÓÁÐ
    	ÈíÖÐ¶Ï
  8.µ×°ë²¿ÊµÏÖ·œ·šÖ®tasklet
    ÌØµã£º
    ÖÐ¶ÏÉÏÏÂÎÄ£ºŸÍÊÇÖÐ¶ÏµÄÕûžöŽŠÀíµÄ¹ý³Ì(Ìø×ªµœÒì³£ÏòÁ¿±í,±£»€ÏÖ³¡,ÖŽÐÐÖÐ¶ÏŽŠÀíº¯Êý,»ÖžŽÏÖ³¡)
    œø³ÌÉÏÏÂÎÄ£ºŸÍÊÇœø³ÌµÄÕûžöŽŠÀíµÄ¹ý³Ì(œø³ÌµÄŽŽœš,µ÷¶È,ÇÀÕŒ,œø³ÌÐÝÃß,œø³ÌµÄ»œÐÑ,œø³ÌµÄÍË³ö)
    »ùÓÚÈíÖÐ¶ÏÊµÏÖ,ÓÅÏÈŒ¶žßÓÚœø³ÌµÍÓÚÓ²ŒþÖÐ¶Ï,ÑÓºóŽŠÀíº¯Êý²»ÄÜœøÐÐÐÝÃß²Ù×÷
    taskletÑÓºóŽŠÀíº¯Êý¹€×÷ÔÚÖÐ¶ÏÉÏÏÂÎÄ
    ±ŸÖÊÊÇÑÓºóÖŽÐÐµÄÒ»ÖÖÊÖ¶Î
    
    ÊýŸÝœá¹¹£º
    struct tasklet_struct
    	.function //ÑÓºóŽŠÀíº¯Êý,Ò»µ©µÇŒÇÍê³É,ÄÚºË»áÔÚÊÊµ±µÄÊ±ºòÈ¥ÖŽÐÐ
    	            ²»ÄÜœøÐÐÐÝÃß²Ù×÷
    	.data //žøÑÓºóŽŠÀíº¯ÊýŽ«µÝµÄ²ÎÊý
    
    ÅäÌ×º¯Êý£º
    DECLARE_TASKLET(name,func,data)//¶šÒå³õÊŒ»¯¶ÔÏó
    tasklet_schedule(&name);//µÇŒÇÑÓºóŽŠÀíº¯Êý
  
  9.µ×°ë²¿ÊµÏÖ·œ·šÖ®¹€×÷¶ÓÁÐ
  1.ÌØµã£º
    ¹€×÷¶ÓÁÐµÄÑÓºóŽŠÀíº¯Êý¹€×÷ÔÚœø³ÌÉÏÏÂÎÄ,ËùÒÔŽËº¯Êý¿ÉÒÔœøÐÐ
    ÐÝÃß²Ù×÷,²ÎÓëœø³ÌÖ®ŒäµÄµ÷¶È
    ÓÅÏÈŒ¶µÍÓÚÖÐ¶Ï
    ¹€×÷¶ÓÁÐµÄ±ŸÖÊÒ²ÊÇÑÓºóÖŽÐÐµÄÒ»ÖÖÊÖ¶Î
    ×Üœá£º
    ÑÓºóÖŽÐÐµÄÄÚÈÝÖÐÈç¹ûÓÐÐÝÃß²Ù×÷±ØÐëÊ¹ÓÃ¹€×÷¶ÓÁÐ
    ÑÓºóÖŽÐÐµÄÄÚÈÝÖÐÃ»ÓÐÐÝÃß,ÈýÖÖ·œ·š¶Œ¿ÉÒÔÊ¹ÓÃ,µ«ÊÇÈç¹û¿ŒÂÇ
    µœÐ§ÂÊÎÊÌâ,Ê¹ÓÃtasklet»òÕßÈíÖÐ¶Ï
  
  2.ÊýŸÝœá¹¹
    struct work_struct {
    	void (*function)(struct work_struct *work);
  	...
    };
    function:¹€×÷¶ÓÁÐµÄÑÓºóŽŠÀíº¯Êý,¹€×÷ÔÚœø³ÌÉÏÏÂÎÄ,ËùÒÔ¿ÉÒÔœøÐÐ
             ÐÝÃß²Ù×÷
             ÐÎ²ÎworkÖžÕëÖžÏòÇý¶¯×ÔŒº¶šÒå³õÊŒ»¯µÄ¹€×÷¶ÔÏó
    ÎÊ£º¹€×÷¶ÓÁÐÈçºÎžøÑÓºóŽŠÀíº¯ÊýŽ«µÝ²ÎÊýÄØ£¿
    Žð£ºÈÏÕæ×ÔÐÐÑÐŸ¿ÄÚºËŽóÃû¶Š¶ŠµÄºê£ºcontainer_of
    
    ÅäÌ×º¯Êý£º
    //žø¹€×÷¶ÔÏóÌíŒÓÒ»žöÑÓºóŽŠÀí(³õÊŒ»¯¶ÔÏó)
    INIT_WORK(&¹€×÷¶ÔÏóÃû,ÑÓºóŽŠÀíº¯Êý);
    schedule_work(&¹€×÷¶ÔÏóÃû); //ÏòÄÚºËµÇŒÇ¹€×÷µÄÑÓºóŽŠÀíº¯Êý
    Ò»µ©µÇŒÇÍê³É,ÄÚºË»áÔÚÊÊµ±µÄÊ±ºòÈ¥ÖŽÐÐŽËº¯Êý
    
    ±à³Ì²œÖè£º
    1.¶šÒå¹€×÷¶ÔÏó
      struct work_struct work;
    2.³õÊŒ»¯¹€×÷¶ÔÏó,ÌíŒÓÑÓºóŽŠÀíº¯Êý
      INIT_WORK(&work, xxx_work_function);
    3.ÔÚÊÊµ±µÄÎ»ÖÃœøÐÐµÇŒÇÑÓºóŽŠÀíº¯Êý
      schedule_work(&work);
      ×Üœá£º
      Èç¹ûÓÐ¶¥°ë²¿,Ò»°ãÔÚ¶¥°ë²¿µÇŒÇ
      Èç¹ûÃ»ÓÐ¶¥°ë²¿,ºÎÊ±ºÎµØµÇŒÇËæÒâ
   
    °žÀý£ºÀûÓÃ¹€×÷¶ÓÁÐ,"ÓÅ»¯"°ŽŒüÇý¶¯
          ŽòÓ¡°ŽŒüÐÅÏ¢·ÅÔÚµ×°ë²¿¹€×÷¶ÓÁÐµÄÑÓºóŽŠÀíº¯ÊýÖÐÖŽÐÐ
  
  10.µ×°ë²¿ÊµÏÖ·œ·šÖ®ÈíÖÐ¶Ï(ÁËœâ)
  ÌØµã£º
  1.ÈíÖÐ¶ÏµÄÑÓºóŽŠÀíº¯Êý¹€×÷ÔÚÖÐ¶ÏÉÏÏÂÎÄÖÐ,²»ÄÜœøÐÐÐÝÃß²Ù×÷
  2.tasklet»ùÓÚÈíÖÐ¶ÏÊµÏÖ
  3.ÈíÖÐ¶ÏµÄÑÓºóŽŠÀíº¯Êý¿ÉÒÔÍ¬Ê±ÔËÐÐÔÚ¶àžöCPUÉÏ,µ«ÊÇtasklet
    µÄÑÓºóŽŠÀíº¯ÊýÖ»ÄÜÔËÐÐÔÚÒ»žöCPUÉÏ;
    ËùÒÔÈíÖÐ¶ÏµÄÑÓºóŽŠÀíº¯Êý±ØÐëŸß±ž¿ÉÖØÈëÐÔ(¿ÉÖØÈëº¯Êý)
    int g_data
    swap1(int *a, int *b)
    {
    	g_data = *b;
    	*b = *a;
    	*a = g_data;
    } //²»ŸßÓÐ¿ÉÖØÈëÐÔ
    
    swap2(int *a, int *b)
    {
    	int data;
    	
    	data = *b;
    	*b = *a;
    	*a = data;
    } //ŸßÓÐ¿ÉÖØÈëÐÔ
    ×Üœá£º
    1.Ÿ¡Á¿±ÜÃâ·ÃÎÊÈ«ŸÖ±äÁ¿
    2.Èç¹ûÒª·ÃÎÊÈ«ŸÖ±äÁ¿,Òª×¢Òâ»¥³â·ÃÎÊ,µ«ÊÇŽúÂëµÄÖŽÐÐÐ§ÂÊ
      œµµÍ
  4.ÈíÖÐ¶ÏŽúÂëµÄÊµÏÖ¹ý³Ì²»ÄÜ²ÉÓÃinsmod/rmmod¶¯Ì¬ŒÓÔØºÍÐ¶ÔØ
    Ö»ÄÜŸ²Ì¬±àÒëµœÄÚºËÖÐ(zImage,ÔÚÒ»Æð),²»±ãÓÚŽúÂëµÄÎ¬»€
  5.ÈíÖÐ¶ÏµÄ±ŸÖÊŸÍÊÇÑÓºóÖŽÐÐ  

2.linuxÄÚºËÈíŒþ¶šÊ±Æ÷ 
  2.1.ÁËœâŒÆËã»úµÄÓ²Œþ¶šÊ±Æ÷
  ÌØµã£ºÒ»µ©ÉÏµç,Ó²Œþ¶šÊ±Æ÷ÖÜÆÚÐÔµÄ°ŽÕÕÒ»¶šµÄÆµÂÊžøCPU·¢ËÍÖÐ¶ÏÐÅºÅ
        ÕâžöÖÐ¶ÏÓÖ³ÆÊ±ÖÓÖÐ¶Ï,»òÕß¶šÊ±Æ÷ÖÐ¶Ï;
        ÖÐ¶ÏŽ¥·¢µÄÆµÂÊ¿ÉÒÔÈíŒþ±à³ÌÉèÖÃ£¡
        
  2.2.ÁËœâlinuxÄÚºË¶ÔÓŠµÄ¶šÊ±Æ÷ÖÐ¶ÏµÄÖÐ¶ÏŽŠÀíº¯Êý
  1.ŽËº¯ÊýÓÉÄÚºËÒÑŸ­ÊµÏÖºÃ
    cd /opt/kernel
    vim arch/arm/mach-s5pv210/mach-cw210.c
    .init_timer=sys_timer //žú×ÙœøÈëÕÒµœ¶ÔÓŠµÄÖÐ¶ÏŽŠÀíº¯Êý    
  2.ŽËº¯Êý»áÖÜÆÚÐÔ,°ŽÕÕÒ»¶šµÄÆµÂÊ±»ÄÚºËµ÷ÓÃ
  3.ŽËº¯Êýœ«×öÒ»ÏÂŒžžöÊÂÇé£º
    1.žüÐÂÏµÍ³µÄÔËÐÐÊ±Œä
    2.žüÐÂÏµÍ³µÄÊµŒÊÊ±Œä(ÓÖ³Æwall time)
    3.Œì²éœø³ÌµÄÊ±ŒäÆ¬ÊÇ·ñÓÃŸ¡,Ÿö¶šÊÇ·ñÆô¶¯µ÷¶È
    4.Œì²éÄÚºËÊÇ·ñÓÐ³¬Ê±µÄÈíŒþ¶šÊ±Æ÷,Èç¹ûÓÐ³¬Ê±µÄÈíŒþ¶šÊ±Æ÷
      ÄÚºËµ÷ÓÃ³¬Ê±µÄÈíŒþ¶šÊ±Æ÷µÄ³¬Ê±ŽŠÀíº¯Êý
    5.Í³ŒÆµÄCPUÀûÓÃÂÊ,ÄÚŽæµÄÊ¹ÓÃÂÊµÈµÈÏµÍ³×ÊÔŽ
  
  2.3.linuxÄÚºËÖÐÊ±ŒäÏà¹ØžÅÄî
    1.HZ
      ÄÚºË³£Á¿,ARMŒÜ¹¹HZ=100,X86ŒÜ¹¹HZ=1000
      ÀýÈçHZ=100,±íÊŸÓ²Œþ¶šÊ±Æ÷1ÃëÖÓžøCPU·¢ËÍ100žö¶šÊ±Æ÷ÖÐ¶ÏÐÅºÅ
      Ã¿·¢ÉúÒ»ŽÎÖÐ¶ÏµÄÊ±ŒäŒäžôÎª10ms
    2.jiffies_64,jiffies  
      jiffies_64ÊÇÄÚºËÈ«ŸÖ±äÁ¿,64Î»,unsigned long long,
      ŒÇÂŒ×Ô¿ª»úÒÔÀŽ·¢ÉúÁË¶àÉÙŽÎµÄ¶šÊ±Æ÷ÖÐ¶Ï,Ã¿·¢ÉúÒ»ŽÎ,"×Ô¶¯"ŒÓ1 
   
      jiffiesÒ²ÊÇÄÚºËÈ«ŸÖ±äÁ¿,32Î»,unsigned long,ÖµÈ¡µÃjiffies_64
      µÄµÍ32Î»£¬Ã¿·¢ÉúÒ»ŽÎ¶šÊ±Æ÷ÖÐ¶Ï,Í¬Ñù"×Ô¶¯"ŒÓ1,Ò»°ãÓÃÀŽ
      ŒÇÂŒÁ÷Ê§Ê±Œä(Ê±ŒäŒäžô)
      ×¢Òâ£ºÖ»ÒªÔÚÄÚºËŽúÂëÖÐ¿Žµœjiffies,ŸÍµÈÓÚŽË¿ÌÎªµ±Ç°Ê±Œä
      
      ²Î¿ŒŽúÂë£º
      unsigned long timeout = jiffies + 5*HZ;
      ËµÃ÷£º
      jiffies:±íÊŸµ±Ç°Ê±Œä
      5*HZ:Ê±ŒäŒäžôÎª5Ãë
      timeout:±íÊŸ5ÃëÒÔºóµÄÊ±Œä,Ò²ŸÍÊÇ³¬Ê±Ê±Œä
      
      ²Î¿ŒŽúÂë£ºÅÐ¶ÏÊÇ·ñ³¬Ê±
      unsigned long timeout = jiffies + 5*HZ;
      ...
      ...
      ... //ÈôžÉÌõŽúÂë,ŽúÂëÖŽÐÐÐèÒªÊ±Œä
      if (jiffies > timeout)
      	³¬Ê±
      else
        Ã»ÓÐ³¬Ê±
     
      œâŸö·œ·š£º
      if(time_after(jiffies, timeout)) {
      	³¬Ê±
      } else {
      	Ã»ÓÐ³¬Ê±
      }//ŽËº¯ÊýÎÞÐèŒÇÒä,Ö»Ðè¿ŽŽóÉñÈçºÎÅÐ¶ÏŒŽ¿É
        
  2.4.linuxÄÚºËÈíŒþ¶šÊ±Æ÷
  ÌØµã£º
  1.ÄÚºËÈíŒþ¶šÊ±Æ÷»ùÓÚÈíÖÐ¶ÏÊµÏÖ
  2.ÄÚºËÈíŒþ¶šÊ±Æ÷¶ÔÓŠµÄ³¬Ê±ŽŠÀíº¯Êý²»ÄÜœøÐÐÐÝÃß²Ù×÷
  3.ÄÚºËÈíŒþ¶šÊ±Æ÷µœÆÚÒÔºó,ÄÚºË»áµ÷ÓÃ¶ÔÓŠµÄ³¬Ê±ŽŠÀíº¯ÊýÍê³ÉÄ³žöÓÃ»§µÄÒµÎñ
  
  ÊýŸÝœá¹¹:
  struct timer_list {
  	unsigned long expirs; //³¬Ê±Ê±ºòµÄÊ±Œä,ÀýÈç³¬Ê±Ê±ŒäŒäžôÎª5s
  	                        expires = jiffies + 5*HZ;
  	void (*function)(unsigned long data) //³¬Ê±ŽŠÀíº¯Êý,²»ÄÜœøÐÐÐÝÃß²Ù×÷
  	unsigned long data; //žø³¬Ê±ŽŠÀíº¯ÊýŽ«µÝµÄ²ÎÊý,Ò»°ãŽ«µÝÖžÕë
  	...
  };
  
  ÅäÌ×º¯Êý£º
  init_timer(&¶šÊ±Æ÷¶ÔÏó);//³õÊŒ»¯¶šÊ±Æ÷¶ÔÏó
  add_timer(&¶šÊ±Æ÷¶ÔÏó);//ÏòÄÚºË×¢²áÌíŒÓÒ»žö¶šÊ±Æ÷¶ÔÏó
                           Ò»µ©ÌíŒÓÍê±Ï,ÄÚºË¿ªÊŒ¶ÔŽË¶šÊ±Æ÷œøÐÐµ¹ŒÆÊ±
                           ³¬Ê±Ê±ŒäµœÆÚ,ÄÚºËµ÷ÓÃ¶ÔÓŠµÄ³¬Ê±ŽŠÀíº¯Êý,²¢ÇÒ
                           ÄÚºËœ«¶šÊ±Æ÷¶ÔÏóŽÓÄÚºËÖÐÉŸ³ý
  del_timer(&¶šÊ±Æ÷¶ÔÏó); //ÉŸ³ý¶šÊ±Æ÷
  mod_timer(&¶šÊ±Æ÷¶ÔÏó, ÐÂµÄ³¬Ê±Ê±ºòµÄÊ±Œä);//ÐÞžÄ¶šÊ±Æ÷
  ŽËº¯ÊýµÈŒÛÓÚÒ»ÏÂÈý²œÖè£º
  1.ÏÈÉŸ³ýÖ®Ç°µÄ¶šÊ±Æ÷del_timer
  2.ÔÚÐÞžÄÐÂµÄ³¬Ê±Ê±Œäexpires = ....
  3.ÖØÐÂÌíŒÓ¶šÊ±Æ÷add_timer
  
  ±à³Ì²œÖè£º
  1.¶šÒå¶šÊ±Æ÷¶ÔÏó
    struct timer_list mytimer;
  2.³õÊŒ»¯¶šÊ±Æ÷¶ÔÏó
    init_timer(&mytimer);
    //ÐèÒª¶îÍâ×ÔŒº³õÊŒ»¯ÒÔÏÂÈýžö×Ö¶Î£º
    expires = jiffies + 5*HZ;
    function = mytimer_function;
    data = (unsigned long)&...;
  3.×¢²á¶šÊ±Æ÷¶ÔÏóµœÄÚºË
    add_timer(&mytimer);
  4.²»ÔÙÊ¹ÓÃ¶šÊ±Æ÷ÉŸ³ý
    del_timer(&mytimer);
  5.mod_timer(&mytimer, jiffies + 20*HZ);
  
  °žÀý1£ºÀûÓÃ¶šÊ±Æ÷,ÊµÏÖÃ¿žô2000msŽòÓ¡Ò»Ÿä»°
  °žÀý2£ºÀûÓÃ¶šÊ±Æ÷,ÊµÏÖÃ¿žô2000ms¿ª¹ØµÆ
  °žÀý3£ºÀûÓÃ¶šÊ±Æ÷,ÊµÏÖÄÜ¹»¶¯Ì¬ÐÞžÄµÆµÄÉÁËžÆµÂÊ,ÀýÈç100ms
         500ms£¬1000ms£¬2000ms,ÌáÊŸ²»ÔÊÐíÊ¹ÓÃ×Ö·ûÉè±žÇý¶¯ºÍ
         »ìÔÓÉè±žÇý¶¯±à³Ì¿òŒÜ,Ö»Ðè²ÉÓÃÄÚºË³ÌÐòµÄÃüÁîÐÐŽ«²ÎÊµÏÖŒŽ¿É
         Çý¶¯ŒÓÔØÒÔºó,µÆµÄÉÁËžÆµÂÊ¿ÉÒÔÐÞžÄ
         ÌáÊŸ£ºmodule_param(name,type,ÈšÏÞ);
         ÌáÊŸ£ººÁÃëms×ªÖÐ¶ÏŽ¥·¢µÄŽÎÊý
         msecs_to_jiffies(ºÁÃëÊý);                           
         ×¢Òâ£º²»ÔÊÐíÊ¹ÓÃif...elseÅÐ¶Ï   
    
3.linuxÄÚºËÑÓÊ±·œ·š
  linuxÄÚºËÑÓÊ±·ÖÁœÖÖ£ºÃŠÑÓÊ±ºÍÐÝÃßÑÓÊ±
  "ÃŠÑÓÊ±"£ºCPUÔ­µØ¿Õ×ª,Žò×ª,ÓŠÓÃÔÚµÈŽýÑÓÊ±Œ«¶ÌµÄ³¡ºÏ
            ÖÐ¶ÏºÍœø³Ì¶Œ¿ÉÒÔÊ¹ÓÃÃŠÑÓÊ±
  "ÐÝÃßÑÓÊ±"£ºµ±Ç°œø³ÌÊÍ·ÅËùÕŒÓÃµÄCPU×ÊÔŽžøÆäËûÈÎÎñÊ¹ÓÃ
              œöÊÊÓÃÓÚœø³Ì,ÑÓÊ±Ê±Œä±ÈœÏ³€µÄ³¡ºÏ
   
  ÃŠÑÓÊ±µÄº¯Êý£º
  ndelay(ÄÉÃëÊý);//ÄÉÃëŒ¶ÑÓÊ±
  ÀýÈç£ºndelay(100);//ÃŠÑÓÊ±100ÄÉÃë
  
  udelay(Î¢ÃëÊý); 
  ÀýÈç£ºudelay(100); //ÃŠÑÓÊ±100Î¢Ãë
  
  mdelay(ºÁÃëÊý);
  ÀýÈç£ºmdelay(5); //ÃŠÑÓÊ±5ºÁÃ×
  ×¢Òâ£ºÈç¹ûÃŠÑÓÊ±µÄÊ±Œä³¬¹ý10ms,œšÒé²ÉÓÃÐÝÃßÑÓÊ±
  
  ÐÝÃßÑÓÊ±µÄº¯Êý£º
  msleep(ºÁÃëÊý);
  ÀýÈç£ºmsleep(20); //ÐÝÃßÑÓÊ±20ºÁÃë
  
  ssleep(ÃëÊý);
  ÀýÈç£ºssleep(20);
  
  schedule(); //ÓÀŸÃÐÔÐÝÃß
  
  scheudle_timeout(5*HZ); //ÐÝÃßÑÓÊ±5Ãë

*********************************************************
4.linuxÄÚºË²¢·¢ºÍŸºÌ¬Ïà¹ØÄÚÈÝ
ÃæÊÔÌâ£ºÌžÌžœø³ÌŒäÍšÐÅµÄ·œ·š
°žÀý£ºÒªÇóÒ»žöLEDÉè±žÖ»ÄÜ±»Žò¿ªÒ»ŽÎ
·ÖÎöÊµÏÖ¹ý³Ì£º
·œ°ž1:ÓŠÓÃ²ãÊµÏÖ
      ²ÉÓÃœø³ÌŒäÍšÐÅ»úÖÆ,ÊµÏÖ¶àžöœø³ÌÖ®ŒäÍšÐÅŸö¶šÊÇ·ñŽò¿ªÉè±ž
      AŽò¿ª,BÎÊA,CÎÊA...
      È±µã£º²»Ì«Áé»î

·œ°ž2:Çý¶¯²ãÊµÏÖ
      Ã÷È·£º²»¹ÜÓŠÓÃ²ãÓÐ¶àÉÙœø³Ì,·ÃÎÊÉè±žÓÀÔ¶ÏÈopen
      ËüÃÇ×îÖÕ¶Œ»áµ÷ÓÃµ×²ãÇý¶¯µÄled_open,Ö»ÐèÔÚµ×²ãÇý¶¯µÄ
      led_openŽúÂëÖÐ×öÏà¹ØµÄÏÞ¶šŒŽ¿É
      ¡±Ò»·òµ±¹ØÍò·òÄª¿ª¡°  
      
      µ×²ãÇý¶¯µÄled_open²Î¿ŒŽúÂë£º
      static int open_cnt = 1;
      static int led_open(struct inode *inode,
      				struct file *file)
      {
      	if (--open_cnt !=0 ){
      		printk("Éè±žÒÑ±»Žò¿ª!\n");
      		open_cnt++;
      		return -EBUSY;//Éè±žÃŠ
      	}
      	printk("Éè±žŽò¿ª³É¹Š!\n");
      	return 0; 
      }   
      static int led_close(struct inode *inode,
      				struct file *file)
      {
	open_cnt++;
      	return 0; 
      }  
      
    ŽúÂë·ÖÎö£ºÑÐŸ¿ŽúÂëÆ¬¶Îif (--open_cnt !=0 )
    »ã±à·ÃÎÊ±äÁ¿£º
    ldr ŒÓÔØ
    sub ÔËËã
    str ŽæŽ¢
    Õý³£Çé¿ö£º
    Aœø³ÌŽò¿ªÉè±ž£º
    	¶ÁÈ¡£ºopen_cnt=1
    	ÐÞžÄ,ÐŽ»Ø£ºopen_cnt=0
    	œá¹û£ºŽò¿ªÉè±ž³É¹Š
    
    Bœø³ÌŽò¿ªÉè±ž£º
    	¶ÁÈ¡£ºopen_cnt=0
    	ÐÞžÄ£¬ÐŽ»Ø£ºopen_cnt=-1
    	œá¹û£ºŽò¿ªÉè±žÊ§°Ü
    
    Òì³£Çé¿ö£º
    Aœø³ÌÏÈŽò¿ª£º
    	¶ÁÈ¡:open_cnt=1
    ŸÍÔÚŽËÊ±ŽË¿Ì,²¢ÇÒÓÉÓÚlinuxÏµÍ³ÔÊÐíœø³ÌÖ®Ç°œøÐÐÇÀÕŒ(œø³ÌÓÐÓÅÏÈŒ¶Ö®·Ö)
    žßÓÅÏÈŒ¶µÄBœø³Ì¿ªÊŒÍ¶ÈëÔËÐÐ,²¢ÇÒŽËÊ±ÇÀÕŒAœø³ÌµÄCPU×ÊÔŽ,Bœø³Ì¿ªÊŒÖŽÐÐ£º
    
    Bœø³Ì¿ªÊŒÖŽÐÐ£º
        ¶ÁÈ¡£ºopen_cnt=1    	 	
	ÐÞžÄ,ÐŽ»Ø£ºopen_cnt=0
    	œá¹û£ºŽò¿ªÉè±ž³É¹Š
    	Bœø³ÌÖŽÐÐÍê±Ï,Bœø³ÌÊÍ·ÅCPU×ÊÔŽžøAœø³Ì,Aœø³ÌŒÌÐøÖŽÐÐ
    
    Aœø³ÌŒÌÐøÖŽÐÐ£º
        ÐÞžÄ,ÐŽ»Ø£ºopen_cnt=0
    	œá¹û£ºŽò¿ªÉè±ž³É¹Š
    
    œáÂÛ£º
    1.·¢ÉúÕâÖÖÇÀÕŒµÄžÅÂÊŒ«ÆäÖ®µÍ
    2.²úÉúÕâÖÖÒì³£µÄžù±ŸÔ­ÒòÊÇlinuxÏµÍ³œø³ÌÓëœø³ÌµÄÇÀÕŒ
      linuxÄÚºËÔÊÐíœø³ÌœøÐÐÇÀÕŒ¶øÌážßÏµÍ³µÄÊµÊ±ÐÔ
      žßÓÅÏÈŒ¶µÄœø³ÌÇÀÕŒµÍÓÅÏÈŒ¶µÄœø³ÌµÄCPU×ÊÔŽ
      ±ŸÖÊ£º»¹ÊÇÓÅÏÈŒ¶ÎÊÌâ 
    3.ÎÊ£ºlinuxÄÚºËÖÐ²úÉúÀàËÆÒÔÉÏÒì³£µÄÇé¿ö»¹ÓÐÄÄÐ©£¿
      Žð£º
      1.œø³ÌÓëœø³ÌÖ®ŒäµÄÇÀÕŒ
      2.ÖÐ¶ÏºÍœø³Ì
      3.ÖÐ¶ÏºÍÖÐ¶Ï
      4.SMP	

-----------------------------------------------------------------------
»Ø¹Ë£º
1.linuxÄÚºËÖÐ¶Ï±à³Ì
  ÃæÊÔÌâ£ºÌžÌž¶ÔÖÐ¶ÏÀíœâ
  1.1.ÎªÊ²ÃŽÓÐÖÐ¶Ï
      ŸÙÀý×Ó
  1.2.ÖÐ¶ÏÓ²ŒþÁ¬œÓºÍŽ¥·¢¹ý³Ì
      »­ÍŒ
  1.3.ÖÐ¶ÏµÄŽŠÀíÁ÷³Ì
      »­ÍŒ
  1.4.ÖÐ¶Ï±à³Ì²œÖè
      ËÄ²œÖè
  1.5.linuxÄÚºËÖÐ¶Ï±à³Ì
      request_irq/free_irq
  1.6.linuxÄÚºË¶ÔÖÐ¶ÏŽŠÀíº¯ÊýµÄÒªÇó
  1.7.linuxÄÚºËÖÐ¶Ï¶¥°ë²¿ºÍµ×°ë²¿
  1.8.linuxÄÚºËµ×°ë²¿ÊµÏÖ·œ·š
      tasklet
      ¹€×÷¶ÓÁÐ
      ÈíÖÐ¶Ï

2.linuxÄÚºËÈíŒþ¶šÊ±Æ÷
  Ó²Œþ¶šÊ±Æ÷
  HZ
  jiffies
  ÊýŸÝœá¹¹£º
  struct timer_list
  »ùÓÚÈíÖÐ¶Ï
  ²»ÄÜÐÝÃß²Ù×÷

3.linuxÄÚºËÑÓÊ±·œ·š
  ÃŠÑÓÊ±
  	ndelay/udelay/mdelay
  ÐÝÃßÑÓÊ±
  	msleep/ssleep/schedule/schedule_timeout

4.linuxÄÚºË²¢·¢ºÍŸºÌ¬
  °žÀý£ºÒ»žöÉè±žÒªÇóÖ»ÄÜ±»Žò¿ªÒ»ŽÎ
  ËŒÂ·£º
  ·œ·š1£ºÔÚÓŠÓÃ²ãÊµÏÖ
  ·œ·š2£ºÔÚÇý¶¯²ãÊµÏÖ
  
  4.1.žÅÄî
  ²¢·¢£º¶àžöÖŽÐÐµ¥Ôª(ÖÐ¶ÏºÍœø³Ì)Í¬Ê±·¢Éú
  ŸºÌ¬£º¶àžöÖŽÐÐµ¥Ôª¶Ô¹²Ïí×ÊÔŽµÄÍ¬Ê±·ÃÎÊ,ÐÎ³ÉµÄŸºÕù×ŽÌ¬
        ÈýžöÌõŒþ£º
        1.ÒªÓÐ¹²Ïí×ÊÔŽ
        2.ÒªÓÐ¶àžöÖŽÐÐµ¥Ôª
        3.±ØÐë¶Ô¹²Ïí×ÊÔŽÍ¬Ê±·ÃÎÊ
        
  ¹²Ïí×ÊÔŽ£ºÈíŒþÉÏµÄÈ«ŸÖ±äÁ¿ºÍÓ²Œþ×ÊÔŽ(Ó²ŒþŒÄŽæÆ÷)
            ÀýÈç£ºint open_cnt = 1; //È«ŸÖ±äÁ¿
                  GPC0CON //Ó²ŒþŒÄŽæÆ÷
                  
  ÁÙœçÇø£º·ÃÎÊ¹²Ïí×ÊÔŽµÄŽúÂëÇøÓò
  	  ÀýÈç£º
  	  static int open_cnt = 1; //¹²Ïí×ÊÔŽ
  	  static int led_open(...)
  	  {
  	  	//ÁÙœçÇø
  	  	if (--open_cnt != 0) {
  	  		...
  	  	}
  	  	//ÁÙœçÇøœáÎ²
   	  }
   	  
  »¥³â·ÃÎÊ£ºµ±Ò»žöÖŽÐÐµ¥ÔªÔÚ·ÃÎÊÁÙœçÇøÊ±,ÆäËûÖŽÐÐµ¥ÔªœûÖ¹
            ·ÃÎÊÁÙœçÇø,Ö±µœÇ°Ò»žöÖŽÐÐµ¥Ôª·ÃÎÊÍê±Ï
  
  ÖŽÐÐÂ·Ÿ¶ŸßÓÐÔ­×ÓÐÔ£ºµ±Ò»žöÖŽÐÐµ¥ÔªÔÚ·ÃÎÊÁÙœçÇøÊ±,²»ÔÊÐí
                      ·¢ÉúCPU×ÊÔŽµÄÇÐ»»,±£Ö€ÕâžöÖŽÐÐµ¥Ôª
                      Ì€Ì€ÊµÊµ·ÃÎÊÁÙœçÇø
  
  4.2.linuxÄÚºËÖÐÐÎ³ÉŸºÌ¬µÄ4ÖÖÇéÐÎ£º
  1.¶àºË(SMP),ÓÉÓÚ¶àºË¹²ÏíÄÚŽæ,ÉÁŽæ,IO×ÊÔŽ
  2.µ¥CPUµÄœø³ÌÓëœø³ÌÖ®Ç°µÄÇÀÕŒ(žßÓÅÏÈŒ¶µÄœø³ÌÇÀÕŒµÍÓÅÏÈŒ¶œø³ÌµÄCPU×ÊÔŽ)
  3.ÖÐ¶ÏºÍœø³Ì
    Ó²ŒþºÍœø³Ì
    ÈíÖÐ¶ÏºÍœø³Ì
  4.ÖÐ¶ÏºÍÖÐ¶Ï
    Ó²ŒþºÍÈíÖÐ¶Ï
    ÈíÖÐ¶ÏºÍÈíÖÐ¶Ï  
  
  4.3.linuxÄÚºËœâŸöŸºÌ¬µÄ·œ·š
  ÖÐ¶ÏÆÁ±Î
  ×ÔÐýËø
  ÐÅºÅÁ¿
  Ô­×Ó²Ù×÷
  
  4.4.linuxÄÚºËœâŸöŸºÌ¬·œ·šÖ®ÖÐ¶ÏÆÁ±Î
  ÌØµã£º
  1.ÖÐ¶ÏÆÁ±ÎÄÜ¹»œâŸöÒÔÏÂŸºÌ¬ÎÊÌâ£º
    ÖÐ¶ÏºÍœø³Ì
    ÖÐ¶ÏºÍÖÐ¶Ï
    œø³ÌÓëœø³ÌµÄÇÀÕŒ(ÇÐŒÇœø³ÌÓëœø³ÌµÄÇÀÕŒ»ùÓÚÈíÖÐ¶Ï)
  
  2.ÖÐ¶ÏÆÁ±ÎÎÞ·Ç±£»€µÄÊÇÁÙœçÇø,µ±CPUÖŽÐÐÁÙœçÇøÊ±,²»ÔÊÐíÖÐ¶Ï
    œøÐÐÀŽÇÀÕŒCPU×ÊÔŽ,µ«ÊÇÓÉÓÚÊÇÆÁ±ÎÁËÖÐ¶Ï,¶ø²Ù×÷ÏµÍ³ºÜ¶à»úÖÆ
    ÓÖžúÖÐ¶ÏÃÜÇÐÏà¹Ø,ËùÒÔÖÐ¶ÏÆÁ±Î±£»€µÄÁÙœçÇøµÄŽúÂëÖŽÐÐËÙ¶È
    Òª¿ì,žü²»ÄÜœøÐÐÐÝÃß²Ù×÷
  
  ±à³ÌÊ¹ÓÃ²œÖè£º
  1.Ã÷È·Çý¶¯ŽúÂëÖÐÄÄÐ©ÊÇ¹²Ïí×ÊÔŽ
  2.Ã÷È·Çý¶¯ŽúÂëÖÐÄÄÐ©ÊÇÁÙœçÇø
  3.Ã÷È·Çý¶¯ŽúÂëÖÐµÄÁÙœçÇøÊÇ·ñÓÐÐÝÃß²Ù×÷
    Èç¹ûÓÐ,ÊÆ±Ø²»ÄÜÊ¹ÓÃÖÐ¶ÏÆÁ±ÎŽË·œ·š
    Èç¹ûÃ»ÓÐ,¿ÉÒÔ¿ŒÂÇÊ¹ÓÃÖÐ¶ÏÆÁ±Î
  4.·ÃÎÊÁÙœçÇøÖ®Ç°ÆÁ±ÎÖÐ¶Ï
    unsigned long flags
    local_irq_save(flags); //ÆÁ±ÎÖÐ¶Ï,±£ŽæÖÐ¶Ï×ŽÌ¬µœflags
  
  5.œÓÏÂÀŽ¿ÉÒÔÌ€Ì€ÊµÊµµÄ·ÃÎÊÁÙœçÇø,ŽËÊ±Ò²²»»á·¢ÉúCPU×ÊÔŽµÄÇÐ»»
  
  6.·ÃÎÊÁÙœçÇøÍê±Ï,Ò»¶šÒªŒÇµÃ»ÖžŽÖÐ¶Ï
    local_irq_restore(flags);  
  
  7.ÆÁ±ÎÖÐ¶ÏºÍ»ÖžŽÖÐ¶ÏÒ»¶šÒªÂßŒ­ÉÏÅä¶ÔÊ¹ÓÃ£¡
  
  ²Î¿ŒŽúÂë£º
  µ×²ãÇý¶¯µÄled_open²Î¿ŒŽúÂë£º
      static int open_cnt = 1; //¹²Ïí×ÊÔŽ
      static int led_open(struct inode *inode,
      				struct file *file)
      {
      	unsigned long flags;
      	//ÆÁ±ÎÖÐ¶Ï
        local_irq_save(flags);
        
        //ÁÙœçÇø
      	if (--open_cnt !=0 ){
      		printk("Éè±žÒÑ±»Žò¿ª!\n");
      		open_cnt++;
      		//»ÖžŽÖÐ¶Ï
      		local_irq_restore(flags);
      		return -EBUSY;//Éè±žÃŠ
      	}
      	
      	//»ÖžŽÖÐ¶Ï
      	local_irq_restore(flags);
      	printk("Éè±žŽò¿ª³É¹Š!\n");
      	return 0; 
      }                       
  
   4.5.linuxÄÚºËœâŸöŸºÌ¬·œ·šÖ®×ÔÐýËø
   ÌØµã£º
   1.³ýÁËÖÐ¶ÏÒýÆðµÄŸºÌ¬ÎÊÌâ¶Œ¿ÉÒÔœøÐÐœâŸö
   2.×ÔÐýËø±ØÐëžœŒÓÔÚÄ³žö¹²Ïí×ÊÔŽÉÏ
   3.Ïë·ÃÎÊÁÙœçÇø¶øÃ»ÓÐ»ñÈ¡×ÔÐýËøµÄÈÎÎñœ«Ô­µØ¿Õ×ª,Ô­µØÃŠµÈŽý
   4.³ÖÓÐ×ÔÐýËøµÄÈÎÎñ·ÃÎÊÁÙœçÇøÊ±,ÖŽÐÐËÙ¶ÈÒª¿ì,žü²»ÄÜ×öÐÝÃß²Ù×÷
   ×Üœá£º×ÔÐýËø±£»€µÄÁÙœçÇø²»ÄÜœøÐÐÐÝÃß²Ù×÷
   
   ÊýŸÝÀàÐÍ£ºspinlock_t
   
   ±à³Ì²Ù×÷²œÖè£º
   1.Ã÷È·Çý¶¯ŽúÂëÖÐÄÄÐ©ÊÇ¹²Ïí×ÊÔŽ
   2.Ã÷È·Çý¶¯ŽúÂëÖÐÄÄÐ©ÊÇÁÙœçÇø
   3.Ã÷È·ÁÙœçÇøÖÐÊÇ·ñÓÐÐÝÃß
     Èç¹ûÃ»ÓÐ,¿ÉÒÔ¿ŒÂÇÊ¹ÓÃ×ÔÐýËø
     µ±È»»¹Òª¿ŒÂÇÊÇ·ñÓÐÖÐ¶ÏÒýÆðµÄŸºÌ¬,Èç¹ûÓÐ,Í¬Ñù²»ÄÜ
     Ê¹ÓÃ×ÔÐýËø
   4.¶šÒå×ÔÐýËø¶ÔÏó
     spinlock_t lock;
   5.³õÊŒ»¯×ÔÐýËø¶ÔÏó
     spinlock_init(&lock);
   6.·ÃÎÊÁÙœçÇøÖ®Ç°ÏÈ»ñÈ¡×ÔÐýËø
     spin_lock(&lock); //ÈÎÎñ»ñÈ¡×ÔÐýËø,Á¢Âí·µ»Ø
     		       //Èç¹ûÃ»ÓÐ»ñÈ¡×ÔÐýËø,ÈÎÎñÔÚŽËÃŠµÈŽý
   7.Ò»µ©»ñÈ¡×ÔÐýËø,Ì€Ì€ÊµÊµµÄ·ÃÎÊÁÙœçÇø
     ×¢Òâ£ºÁÙœçÇø²»ÄÜœøÐÐÐÝÃß²Ù×÷
   8.·ÃÎÊÁÙœçÇøÖ®ºó,ŒÇµÃÒªÊÍ·Å×ÔÐýËø
     spin_unlock(&lock);
   9.»ñÈ¡ËøºÍÊÍ·ÅËøÔÚÂßŒ­ÉÏÒªÅä¶ÔÊ¹ÓÃ
   ²Î¿ŒŽúÂë£º
   //¶šÒå×ÔÐýËø¶ÔÏó
   static spinlock_t lock;
   Èë¿Úº¯Êýµ÷ÓÃ£º
   	spin_lock_init(&lock);
   µ×²ãÇý¶¯µÄled_open²Î¿ŒŽúÂë£º
      static int open_cnt = 1; //¹²Ïí×ÊÔŽ
      static int led_open(struct inode *inode,
      				struct file *file)
      {
      	unsigned long flags;
      	//»ñÈ¡×ÔÐýËø
        spin_lock(&lock);
        
        //ÁÙœçÇø
      	if (--open_cnt !=0 ){
      		printk("Éè±žÒÑ±»Žò¿ª!\n");
      		open_cnt++;
      		//ÊÍ·Å×ÔÐýËø
      		spin_unlock(&lock);
      		return -EBUSY;//Éè±žÃŠ
      	}
      	
      	//ÊÍ·Å×ÔÐýËø
      	spin_unlock(&lock);
      	printk("Éè±žŽò¿ª³É¹Š!\n");
      	return 0; 
      }     
      
   4.6.linuxÄÚºËœâŸöŸºÌ¬·œ·šÖ®×ÔÐýËøÀ©Õ¹,ÓÖ³ÆÑÜÉú×ÔÐýËø
   ÌØµã£º
   1.ËùÓÐµÄŸºÌ¬ÎÊÌâ¶ŒÄÜ¹»œâŸö
   2.ÑÜÉú×ÔÐýËø±ØÐëžœŒÓÔÚÄ³žö¹²Ïí×ÊÔŽÉÏ
   3.Ïë·ÃÎÊÁÙœçÇø¶øÃ»ÓÐ»ñÈ¡ÑÜÉú×ÔÐýËøµÄÈÎÎñœ«Ô­µØ¿Õ×ª,Ô­µØÃŠµÈŽý
   4.³ÖÓÐÑÜÉú×ÔÐýËøµÄÈÎÎñ·ÃÎÊÁÙœçÇøÊ±,ÖŽÐÐËÙ¶ÈÒª¿ì,žü²»ÄÜ×öÐÝÃß²Ù×÷
   ×Üœá£ºÑÜÉú×ÔÐýËø±£»€µÄÁÙœçÇø²»ÄÜœøÐÐÐÝÃß²Ù×÷
   
   ÊýŸÝÀàÐÍ£ºspinlock_t
   
   ±à³Ì²Ù×÷²œÖè£º
   1.Ã÷È·Çý¶¯ŽúÂëÖÐÄÄÐ©ÊÇ¹²Ïí×ÊÔŽ
   2.Ã÷È·Çý¶¯ŽúÂëÖÐÄÄÐ©ÊÇÁÙœçÇø
   3.Ã÷È·ÁÙœçÇøÖÐÊÇ·ñÓÐÐÝÃß
     Èç¹ûÃ»ÓÐ,¿ÉÒÔ¿ŒÂÇÊ¹ÓÃÑÜÉú×ÔÐýËø
   4.¶šÒå×ÔÐýËø¶ÔÏó
     spinlock_t lock;
   5.³õÊŒ»¯×ÔÐýËø¶ÔÏó
     spinlock_init(&lock);
   6.·ÃÎÊÁÙœçÇøÖ®Ç°ÏÈ»ñÈ¡ÑÜÉú×ÔÐýËø
     unsigned long flags
     spin_lock_irqsave(&lock,flags); //ÏÈÆÁ±ÎÖÐ¶ÏÈ»ºó»ñÈ¡×ÔÐýËø
      				     //ÈÎÎñ»ñÈ¡×ÔÐýËø,Á¢Âí·µ»Ø
     		                     //Èç¹ûÃ»ÓÐ»ñÈ¡×ÔÐýËø,ÈÎÎñÔÚŽËÃŠµÈŽý
   7.Ò»µ©»ñÈ¡×ÔÐýËø,Ì€Ì€ÊµÊµµÄ·ÃÎÊÁÙœçÇø
     ×¢Òâ£ºÁÙœçÇø²»ÄÜœøÐÐÐÝÃß²Ù×÷
   8.·ÃÎÊÁÙœçÇøÖ®ºó,ŒÇµÃÒªÊÍ·Å×ÔÐýËø,ÔÙ»ÖžŽÖÐ¶Ï
     spin_unlock_irqrestore(&lock,flags);
   9.»ñÈ¡ËøºÍÊÍ·ÅËøÔÚÂßŒ­ÉÏÒªÅä¶ÔÊ¹ÓÃ
   ²Î¿ŒŽúÂë£º
   //¶šÒå×ÔÐýËø¶ÔÏó
   static spinlock_t lock;
   Èë¿Úº¯Êýµ÷ÓÃ£º
   	spin_lock_init(&lock);
   µ×²ãÇý¶¯µÄled_open²Î¿ŒŽúÂë£º
      static int open_cnt = 1; //¹²Ïí×ÊÔŽ
      static int led_open(struct inode *inode,
      				struct file *file)
      {
      	unsigned long flags;
      	//»ñÈ¡×ÔÐýËø
        spin_lock_irqsave(&lock, flags);
        
        //ÁÙœçÇø
      	if (--open_cnt !=0 ){
      		printk("Éè±žÒÑ±»Žò¿ª!\n");
      		open_cnt++;
      		//ÊÍ·Å×ÔÐýËø
      		spin_unlock_irqrestore(&lock, flags);
      		return -EBUSY;//Éè±žÃŠ
      	}
      	
      	//ÊÍ·Å×ÔÐýËø
      	spin_unlock_irqrestore(&lock, flags);
      	printk("Éè±žŽò¿ª³É¹Š!\n");
      	return 0; 
      }  
    °žÀý£ºÀûÓÃ»ìÔÓÉè±žÇý¶¯,ÊµÏÖÒ»žöLEDÉè±žÖ»ÄÜ±»Žò¿ªÒ»ŽÎ
    ARM²âÊÔ²œÖè£º
    insmod /home/drivers/led_drv.ko
    ls /dev/myled -lh
    /home/led_test & //Æô¶¯Aœø³Ì
    ps  //²é¿ŽAœø³ÌµÄPID
    /home/led_test  //Æô¶¯Bœø³Ì
                     
  4.7.linuxÄÚºËœâŸöŸºÌ¬·œ·šÖ®ÐÅºÅÁ¿
  ÌØµã£º
  1.±ŸÖÊŸÍÊÇœâŸö×ÔÐýËø±£»€µÄÁÙœçÇø²»ÄÜÐÝÃßµÄÎÊÌâ
  2.ÐÅºÅÁ¿ÓÖ³ÆË¯ÃßËø,±ŸÉí»ùÓÚ×ÔÐýËøÀ©Õ¹¶øÀŽ
  3.ÐÅºÅÁ¿±£»€µÄÁÙœçÇø¿ÉÒÔœøÐÐÐÝÃß²Ù×÷
  4.ÒªÏë·ÃÎÊÁÙœçÇøµÄÈÎÎñ,¶øÃ»ÓÐ»ñÈ¡µœÐÅºÅÁ¿,ÈÎÎñœ«œøÈëÐÝÃß
    ×ŽÌ¬µÈŽýÐÅºÅÁ¿±»ÊÍ·Å
  5.ÐÅºÅÁ¿Ò»°ãÓŠÓÃÓÚœø³Ì
  
  ÊýŸÝÀàÐÍ£ºstruct semaphore
  
  ±à³Ì²Ù×÷²œÖè£º
  1.Ã÷È·Çý¶¯ÖÐÄÄÐ©ÊÇ¹²Ïí×ÊÔŽ
  2.Ã÷È·Çý¶¯ÖÐÄÄÐ©ÊÇÁÙœçÇø
  3.Ã÷È·ÁÙœçÇøÖÐÊÇ·ñÓÐÐÝÃß²Ù×÷
    Èç¹ûÓÐ,Ê¹ÓÃÐÅºÅÁ¿
    Èç¹ûÃ»ÓÐ,¿ÉÒÔ¿ŒÂÇÊ¹ÓÃÐÅºÅÁ¿
  4.¶šÒåÐÅºÅÁ¿¶ÔÏó
    struct semaphore sema;
  5.³õÊŒ»¯ÐÅºÅÁ¿Îª»¥³âÐÅºÅÁ¿
    sema_init(&sema, 1);
  6.·ÃÎÊÁÙœçÇøÖ®Ç°»ñÈ¡ÐÅºÅÁ¿
    down(&sema);//»ñÈ¡ÐÅºÅÁ¿,Èç¹ûÕý³£»ñÈ¡ÐÅºÅÁ¿,ŽËº¯ÊýÁ¢ŒŽ·µ»Ø
    		//Èç¹ûÃ»ÓÐ»ñÈ¡ÐÅºÅÁ¿,œø³Ìœ«œøÈë²»¿ÉÖÐ¶ÏµÄÐÝÃß×ŽÌ¬
    		//ŽúÂëÍ£Ö¹²»¶¯,œø³ÌµÈŽý±»»œÐÑ,»œÐÑµÄ·œ·šÊÇÕýÔÚ»ñÈ¡
    		  ÐÅºÅÁ¿µÄÈÎÎñÊÍ·ÅÐÅºÅÁ¿,Í¬Ê±Ò²»á»œÐÑÕâžöÐÝÃßµÄœø³Ì
    		//A»ñÈ¡ÐÅºÅÁ¿,Bœø³ÌÔÚŽËœøÈë²»¿ÉÖÐ¶ÏµÄÐÝÃß×ŽÌ¬(Ë¯ÃßÆÚŒä²»»áÁ¢ŒŽÏìÓŠºÍŽŠÀíÐÅºÅ)
    		//AÊÍ·ÅÐÅºÅÁ¿,Í¬Ê±»œÐÑB,Bœø³Ì±»»œÐÑÒÔºó,ÐèÒªŽŠÀíÖ®Ç°œÓÊÜµœµÄÐÅºÅ
    »òÕß
    down_interruptible(&sema);//»ñÈ¡ÐÅºÅÁ¿,Èç¹ûÕý³£»ñÈ¡ÐÅºÅÁ¿,ŽËº¯ÊýÁ¢ŒŽ·µ»Ø
    		//Èç¹ûÃ»ÓÐ»ñÈ¡ÐÅºÅÁ¿,œø³Ìœ«œøÈë¿ÉÖÐ¶ÏµÄÐÝÃß×ŽÌ¬
    		//ŽúÂëÍ£Ö¹²»¶¯,œø³ÌµÈŽý±»»œÐÑ,»œÐÑµÄ·œ·šÊÇÓÐÁœÖÖ£º
    		  1.»ñÈ¡ÐÅºÅÁ¿µÄÈÎÎñœøÐÐ»œÐÑ
    		  2.œÓÊÕµœÁËÐÅºÅœøÐÐ»œÐÑ
    		//A»ñÈ¡ÐÅºÅÁ¿,Bœø³ÌÔÚŽËœøÈë¿ÉÖÐ¶ÏµÄÐÝÃß×ŽÌ¬(Ë¯ÃßÆÚŒä»áÁ¢ŒŽÏìÓŠºÍŽŠÀíÐÅºÅ)
    		//AÊÍ·ÅÐÅºÅÁ¿,Í¬Ê±»œÐÑB
    		
  7.Ò»µ©»ñÈ¡ÐÅºÅÁ¿³É¹Š,Ì€Ì€ÊµÊµµÄ·ÃÎÊÁÙœçÇø  
  8.·ÃÎÊÍê±Ï,ŒÇµÃÒªÊÍ·ÅÐÅºÅÁ¿
    up(&sema); //²»œöœö»áÊÍ·ÅÐÅºÅÁ¿,»¹Òª»œÐÑÖ®Ç°ÐÝÃßµÄœø³Ì
  
  °žÀý£ºÀûÓÃÐÅºÅÁ¿,ÊµÏÖÒ»žöLEDÉè±žÖ»ÄÜ±»Žò¿ªÒ»ŽÎ
  ²ÉÓÃdownÀŽ»ñÈ¡ÐÅºÅÁ¿
  Ç¿µ÷£º
  1.Èç¹ûÃ»ÓÐ»ñÈ¡ÐÅºÅÁ¿,œø³ÌœøÈë²»¿ÉÖÐ¶ÏµÄÐÝÃß×ŽÌ¬(ÐÝÃßÆÚŒä²»»áÁ¢ŒŽÏìÓŠºÍŽŠÀíÐÅºÅ)
  2.ŽËÐÝÃßœø³Ì±»»œÐÑµÄ·œ·šÖ»ÓÐ1žö£º
    Ö»ÄÜÓÉAœø³ÌÊÍ·ÅÐÅºÅÁ¿Ê±»œÐÑŽËÐÝÃßµÄœø³Ì
    ŽËœø³ÌÒ»µ©±»»œÐÑ,»¹ÒªŽŠÀíÖ®Ç°œÓÊÜµœµÄÐÅºÅ
  ARMÊµÑé²œÖè£º
  insmod /home/drivers/led_drv.ko
  /home/drivers/led_test & //Æô¶¯Aœø³Ì
  /home/drivers/led_test & //Æô¶¯Bœø³Ì
  ps //²é¿ŽA,BµÄPID
  top //²é¿ŽA,Bœø³ÌµÄ×ŽÌ¬,°ŽQŒüÍË³ötopÃüÁî
      S:¿ÉÖÐ¶ÏµÄÐÝÃß×ŽÌ¬
      D:²»¿ÉÖÐ¶ÏµÄÐÝÃß×ŽÌ¬
      R:ÔËÐÐ×ŽÌ¬
      
  kill Bœø³ÌµÄPID  //ÏòÐÝÃßÖÐµÄBœø³Ì·¢ËÍÐÅºÅ
  ps //²é¿ŽBÊÇ·ñ±»žÉµô
  kill Aœø³ÌµÄPID //É±ËÀAœø³Ì,Aœø³ÌÊÍ·ÅÐÅºÅÁ¿,»œÐÑBœø³Ì
  
  /home/drivers/led_test & //Æô¶¯Aœø³Ì
  /home/drivers/led_test & //Æô¶¯Bœø³Ì
  ps //²é¿ŽA,BµÄPID
  top //²é¿ŽA,Bœø³ÌµÄ×ŽÌ¬,°ŽQŒüÍË³ötopÃüÁî
  kill Aœø³ÌµÄPID  //É±ËÀAœø³Ì,Aœø³ÌÊÍ·ÅÐÅºÅÁ¿,»œÐÑBœø³Ì
  top //²é¿ŽBœø³ÌµÄ×ŽÌ¬ÐÅÏ¢
  kill Bœø³ÌPID  
      œá¹ûÊÇ:D->S(ÓŠÓÃµ÷ÓÃsleep)     	
  
  
  ²ÉÓÃdown_interruptibleÀŽ»ñÈ¡ÐÅºÅÁ¿
  Ç¿µ÷£º 
  1.Ã»ÓÐ»ñÈ¡ÐÅºÅÁ¿,œø³ÌœøÈë¿ÉÖÐ¶ÏµÄÐÝÃß×ŽÌ¬
  2.¿ÉÖÐ¶ÏµÄÐÝÃß×ŽÌ¬±íÊŸÐÝÃßÆÚŒä¿ÉÒÔÏìÓŠŽŠÀíœÓÊÕµœµÄÐÅºÅ
  3.¿ÉÖÐ¶ÏÐÝÃßœø³Ì±»»œÐÑµÄ·œ·š£º
    1.Íš¹ýÐÅºÅ»œÐÑ
    2.Íš¹ýAœø³ÌÊÍ·ÅÐÅºÅÁ¿»œÐÑ
 insmod /home/drivers/led_drv.ko
  /home/drivers/led_test & //Æô¶¯Aœø³Ì
  /home/drivers/led_test & //Æô¶¯Bœø³Ì
  ps //²é¿ŽA,BµÄPID
  top //²é¿ŽA,Bœø³ÌµÄ×ŽÌ¬,°ŽQŒüÍË³ötopÃüÁî
      S:¿ÉÖÐ¶ÏµÄÐÝÃß×ŽÌ¬
      D:²»¿ÉÖÐ¶ÏµÄÐÝÃß×ŽÌ¬
      R:ÔËÐÐ×ŽÌ¬
      
  kill Bœø³ÌµÄPID  //ÏòÐÝÃßÖÐµÄBœø³Ì·¢ËÍÐÅºÅ
  ps //²é¿ŽBÊÇ·ñ±»žÉµô
  kill Aœø³ÌµÄPID //É±ËÀAœø³Ì,Aœø³ÌÊÍ·ÅÐÅºÅÁ¿,»œÐÑBœø³Ì
  
  /home/drivers/led_test & //Æô¶¯Aœø³Ì
  /home/drivers/led_test & //Æô¶¯Bœø³Ì
  ps //²é¿ŽA,BµÄPID
  top //²é¿ŽA,Bœø³ÌµÄ×ŽÌ¬,°ŽQŒüÍË³ötopÃüÁî
  kill Aœø³ÌµÄPID  //É±ËÀAœø³Ì,Aœø³ÌÊÍ·ÅÐÅºÅÁ¿,»œÐÑBœø³Ì
  top //²é¿ŽBœø³ÌµÄ×ŽÌ¬ÐÅÏ¢
  kill Bœø³ÌPID  
      œá¹ûÊÇ:D->S(ÓŠÓÃµ÷ÓÃsleep)     

-----------------------------------------------------------------------
»Ø¹Ë£º
1.linuxÄÚºË²¢·¢ºÍŸºÌ¬
  1.1.žÅÄî
  ²¢·¢
  ŸºÌ¬
  ¹²Ïí×ÊÔŽ
  ÁÙœçÇø
  »¥³â·ÃÎÊ
  ÖŽÐÐÂ·Ÿ¶ŸßÓÐÔ­×ÓÐÔ
  
  1.2.ÐÎ³ÉŸºÌ¬µÄ4ÖÐÇéÐÎ
  SMP
  µ¥CPU,œø³ÌÓëœø³ÌµÄÇÀÕŒ
  ÖÐ¶ÏºÍœø³Ì
  ÖÐ¶ÏºÍÖÐ¶Ï
  »­ÍŒ
  
  1.3.œâŸöŸºÌ¬ÎÊÌâµÄ·œ·š
  ÖÐ¶ÏÆÁ±Î
  ×ÔÐýËø
  ÑÜÉú×ÔÐýËø
  ÐÅºÅÁ¿
  
  ³¡Ÿ°£ºÉèÖÃÄ³žöGPIOµÄžßµÍµçÆœµÄÊ±ŒäÎªÑÏžñµÄ500us
  ŽËÊ±Òª¿ŒÂÇµœŸºÌ¬ÎÊÌâ,Ò»°ãÀŽËµÖÐ¶Ï×î»áµ·¹í£¡
  
  spin_lock_irqsave(&lock ,flags);
  gpio_direction_output(., 1);
  udelay(500);
  gpio_direction_output(., 0);
  udelay(500);
  spin_unlock_irqrestore(&lock, flags);
  
  1.4.Ô­×Ó²Ù×÷
  ÌØµã£º
  Ô­×Ó²Ù×÷ÄÜ¹»œâŸöËùÓÐµÄŸºÌ¬ÎÊÌâ
  Ô­×Ó²Ù×÷·ÖÁœÀà£ºÎ»Ô­×Ó²Ù×÷ºÍÕûÐÎÔ­×Ó²Ù×÷
  
  Î»Ô­×Ó²Ù×÷=Î»²Ù×÷ŸßÓÐÔ­×ÓÐÔ,Î»²Ù×÷ÆÚŒä²»ÔÊÐí·¢ÉúCPU×ÊÔŽÇÐ»»
  
  Ê¹ÓÃÎ»Ô­×Ó²Ù×÷µÄ³¡Ÿ°£ºÈç¹ûÇý¶¯¶Ô¹²Ïí×ÊÔŽœøÐÐÎ»²Ù×÷,²¢ÇÒ¿ŒÂÇ
  µœŸºÌ¬ÎÊÌâ,ŽËÊ±¿ÉÒÔ¿ŒÂÇÊ¹ÓÃÄÚºËÌá¹©µÄÎ»Ô­×Ó²Ù×÷ÀŽ±ÜÃâŸºÌ¬ÎÊÌâ
  µ«ÊÇ¶Ô¹²Ïí×ÊÔŽµÄÎ»²Ù×÷±ØÐëÊ¹ÓÃÄÚºËÌá¹©µÄÏà¹Øº¯Êý£º
  void set_bit(int nr, void *addr)
  void clear_bit(int nr, void *addr)
  void change_bit(int nr, void *addr)
  int test_bit(int nr, void *addr)
  ...
  addr:¹²Ïí×ÊÔŽµÄÊ×µØÖ·
  nr:µÚŒžžöbitÎ»(ŽÓ0¿ªÊŒ)
  
  ²Î¿ŒŽúÂë£º
  static int open_cnt = 1; //¹²Ïí×ÊÔŽ
  
  //ÁÙœçÇø
  open_cnt &= ~(1 << 1); //²»ŸßÓÐÔ­×ÓÐÔ,»á·¢ÉúCPU×ÊÔŽµÄÇÐ»»
  
  žÄÔì,¿ŒÂÇŸºÌ¬ÎÊÌâ£º
  ·œ°ž1£º
  local_irq_save(flags);
  open_cnt &= ~(1 << 1);
  local_irq_restore(flags);
  
  ·œ°ž2£º
  spin_lock_irqsave(&lock, flags);
  open_cnt &= ~(1 << 1);
  spin_unlock_irqrestore(&lock, flags);
  
  ·œ°ž3£º
  down(&sema);
  open_cnt &= ~(1 << 1);
  up(&sema);
  
  ·œ°ž4£º
  clear_bit(&open_cnt, 1);
  
  °žÀý£ºŒÓÔØÇý¶¯,ÔÚÇý¶¯Èë¿Úº¯Êýœ«0x5555ÊýŸÝ±ä³É0xaaaa
  ²»ÔÊÐíÊ¹ÓÃchange_bitº¯Êý
  
  ÕûÐÎÔ­×Ó²Ù×÷ = ÕûÐÎ²Ù×÷ŸßÓÐÔ­×ÓÐÔ
  Ê¹ÓÃ³¡Ÿ°£ºÈç¹ûÇý¶¯ÖÐ¶Ô¹²Ïí×ÊÔŽœøÐÐÕûÐÍÊýµÄ²Ù×÷,²¢ÇÒ¿ŒÂÇµœ
  ŸºÌ¬ÎÊÌâ,¿ÉÒÔ¿ŒÂÇÊ¹ÓÃÕûÐÎÔ­×Ó²Ù×÷
  
  ÕûÐÎÔ­×Ó±äÁ¿ÊýŸÝÀàÐÍ£ºatomic_t(Àà±È³Éint)
  
  ±à³Ì²œÖè£º
  1.¶šÒå³õÊŒ»¯ÕûÐÍÔ­×Ó±äÁ¿
    atomic_t tv = ATOMIC_INIT(1);
  2.¶ÔÕûÐÎÔ­×Ó±äÁ¿²Ù×÷,ÄÚºËÌá¹©ÁËÏà¹ØµÄÅäÌ×º¯Êý
    atomic_add
    atomic_sub
    atomic_inc
    atomic_dec
    atomic_set
    atomic_read
    atomic_dec_and_test(&tv) //ÕûÐÎÔ­×Ó±äÁ¿tv×ÔŒõ1,È»ºóÅÐ¶ÏtvµÄÖµ
    ÊÇ·ñÎª0,Èç¹ûÎª0,·µ»ØÕæ;·ñÔò·µ»ØŒÙ
    
    ²Î¿ŒŽúÂë£º
    static int open_cnt = 1;
    
    //ÁÙœçÇø
    --open_cnt; //²»ŸßÓÐÔ­×ÓÐÔ
    
  žÄÔì,ÌíŒÓ·œ·š£º
  ·œ°ž1£º
  local_irq_save(flags);
   --open_cnt
  local_irq_restore(flags);
  
  ·œ°ž2£º
  spin_lock_irqsave(&lock, flags);
   --open_cnt
  spin_unlock_irqrestore(&lock, flags);
  
  ·œ°ž3£º
  down(&sema);
  --open_cnt
  up(&sema);
  
  ·œ°ž4£ºÕûÐÎÔ­×Ó²Ù×÷
  static atomic_t open_cnt = ATOMIC_INIT(1);
  atomic_dec(&open_cnt);

*********************************************************
2.linuxÄÚºËµÈŽý¶ÓÁÐ»úÖÆ
  2.1.µÈŽý·ÖÁœÖÖ
  ÃŠµÈŽý£ºCPUÔ­µØ¿Õ×ª,µÈŽýÊ±Œä±ÈœÏ¶ÌµÄ³¡ºÏ
  ÐÝÃßµÈŽý£º×šÖžœø³Ì,œø³ÌµÈŽýÄ³žöÊÂŒþ·¢ÉúœøÈëÐÝÃß×ŽÌ¬
  µÈŽý¶ÓÁÐ»úÖÆÑÐŸ¿ÐÝÃßµÈŽý£¡
  
  2.2.µÈŽýµÄ±ŸÖÊ
  ÓÉÓÚÍâÉèµÄŽŠÀíËÙ¶ÈÂýÓÚCPU,µ±Ä³žöœø³ÌÒª²Ù×÷·ÃÎÊÓ²ŒþÍâÉè
  µ±Ó²ŒþÍâÉèÃ»ÓÐ×Œ±žŸÍÐ÷,ÄÇÃŽŽËœø³Ìœ«œøÈëÐÝÃßµÈŽý,ÄÇÃŽœø³Ì
  »áÊÍ·ÅCPU×ÊÔŽžøÆäËûÈÎÎñÊ¹ÓÃ,Ö±µœÍâÉè×Œ±žºÃÊýŸÝ(ÍâÉè»ážøCPU·¢ËÍÖÐ¶ÏÐÅºÅ),»œÐÑÖ®Ç°
  ÐÝÃßµÈŽýµÄœø³Ì,œø³Ì±»»œÐÑÒÔºóŒŽ¿É²Ù×÷·ÃÎÊÓ²ŒþÍâÉè
  
  ÒÔCPU¶ÁÈ¡UARTÊýŸÝÎªÀý,ÀíÀíÊýŸÝµÄÕûžö²Ù×÷Á÷³Ì£º
  1.ÓŠÓÃ³ÌÐòµ÷ÓÃread,×îÖÕœø³ÌÍš¹ýÈíÖÐ¶ÏÓÉÓÃ»§¿ÕŒä
    ÏÝÈëÄÚºË¿ÕŒäµÄµ×²ãÇý¶¯readœÓ¿Ú
  2.œø³ÌœøÈëµ×²ãUARTµÄreadœÓ¿Ú·¢ÏÖœÓÊÕ»º³åÇøÊýŸÝÃ»ÓÐ×Œ±ž
    ŸÍÐ÷,ŽËœø³ÌÊÍ·ÅCPU×ÊÔŽœøÈëÐÝÃßµÈŽý×ŽÌ¬,ŽËÊ±ŽúÂëÍ£Ö¹²»Ç°
    µÈŽýUART»º³åÇøÀŽÊýŸÝ
  3.Èç¹ûÔÚÄ³žöÊ±¿Ì,UARTœÓÊÕµœÊýŸÝ,×îÖÕÊÆ±ØžøCPU·¢ËÍÒ»žöÖÐ¶ÏÐÅºÅ
    ÄÚºËµ÷ÓÃÆäÖÐ¶ÏŽŠÀíº¯Êý,Ö»ÐèÔÚÖÐ¶ÏŽŠÀíº¯ÊýÖÐ»œÐÑÖ®Ç°
    ÐÝÃßµÄœø³Ì
  4.ÐÝÃßµÄœø³ÌÒ»µ©±»»œÐÑ,œø³ÌŒÌÐøÖŽÐÐµ×²ãÇý¶¯µÄreadœÓ¿Ú
    readœÓ¿Úœ«œÓÊÕ»º³åÇøµÄÊýŸÝ×îÖÕÉÏ±šžøÓÃ»§¿ÕŒä
    
  ÎÊ£ºÈçºÎÈÃœø³ÌÔÚÄÚºË¿ÕŒäÐÝÃßÄØ£¿
  Žð£º
  ÀûÓÃÒÑÑ§µÄÐÝÃßº¯Êý£ºmsleep/ssleep/schedule/schedule_timeout
  ÕâÐ©º¯ÊýµÄÈ±µã¶ŒÐèÒªÖž¶šÒ»žöÐÝÃß³¬Ê±Ê±Œä,²»ÄÜ¹»ËæÊ±ËæµØÐÝÃß
  ËæÊ±ËæµØ±»»œÐÑ£¡
  
  ÎÊ£ºÈçºÎÈÃœø³ÌÔÚÄÚºË¿ÕŒäËæÊ±ËæµØÐÝÃß,ËæÊ±ËæµØ±»»œÐÑÄØ£¿
  Žð£ºÀûÓÃµÈŽý¶ÓÁÐ»úÖÆ
  msleep/ssleep/ÐÅºÅÁ¿ÕâÐ©ÐÝÃß»úÖÆ¶ŒÊÇÀûÓÃµÈŽý¶ÓÁÐÊµÏÖ£¡
  
  2.4.µÈŽý¶ÓÁÐºÍ¹€×÷¶ÓÁÐ¶Ô±È
  ¹€×÷¶ÓÁÐÊÇµ×°ë²¿µÄÒ»žöÊµÏÖ·œ·š,±ŸÖÊÈÃÊÂÇéÑÓºóÖŽÐÐ
  µÈŽý¶ÓÁÐÊÇÈÃœø³ÌÔÚÄÚºË¿ÕŒäœøÐÐÐÝÃß»œÐÑ
  
  2.5.ÀûÓÃµÈŽý¶ÓÁÐÊµÏÖœø³ÌÔÚÇý¶¯ÖÐÐÝÃßµÄ±à³Ì²œÖè£º
  ÀÏÓ¥<------->œø³ÌµÄµ÷¶ÈÆ÷(žøœø³Ì·ÖÅäCPU×ÊÔŽ,Ê±ŒäÆ¬,ÇÐ»»,ÇÀÕŒ),ŽËŽúÂëÓÐÄÚºËÒÑŸ­ÊµÏÖ
  ŒŠÂèÂè<------>µÈŽý¶ÓÁÐÍ·,ËùŽú±íµÄµÈŽý¶ÓÁÐÖÐÃ¿Ò»žöœÚµã±íÊŸµÄÊÇÒªÐÝÃßµÄœø³Ì
  		Ö»Òªœø³ÌÐÝÃß,Ö»Ðè°ÑÐÝÃßµÄœø³Ì·ÅµœŒŠÂèÂèËù¶ÔÓŠµÄµÈŽý¶ÓÁÐÖÐ
  Ð¡ŒŠ<----->Ã¿Ò»žöÐÝÃßµÄœø³Ì,Ò»žöÐÝÃßµÄœø³Ì¶ÔÓŠµÄÊÇÒ»žöÐ¡ŒŠ
  
  linuxÄÚºËœø³Ì×ŽÌ¬µÄºê£º
  œø³ÌµÄÔËÐÐ×ŽÌ¬£ºTASK_RUNNING
  œø³ÌµÄÐÝÃß×ŽÌ¬£º
  		²»¿ÉÖÐ¶ÏµÄÐÝÃß×ŽÌ¬£ºTASK_UNINTERRUPTIBLE
  		¿ÉÖÐ¶ÏµÄÐÝÃß×ŽÌ¬£ºTASK_INTERRUPTIBLE
  œø³ÌµÄ×Œ±žŸÍÐ÷×ŽÌ¬£ºTASK_READY
  
  ±à³Ì²Ù×÷²œÖè£º
  1.¶šÒå³õÊŒ»¯µÈŽý¶ÓÁÐÍ·¶ÔÏó(¹¹ÔìÒ»žöŒŠÂèÂè)
    wait_queue_head_t wq; //¶šÒå
    init_waitqueue_head(&wq); //³õÊŒ»¯	
    
  2.¶šÒå³õÊŒ»¯×°ÔØÐÝÃßœø³ÌµÄÈÝÆ÷(¹¹ÔìÒ»žöÐ¡ŒŠ)
    wait_queue_t wait; //¶šÒåÒ»žö×°ÔØÐÝÃßœø³ÌµÄÈÝÆ÷
    init_waitqueue_entry(&wait, current);//œ«µ±Ç°œø³ÌÌíŒÓµœwaitÈÝÆ÷ÖÐ
    					 //ŽËÊ±µ±Ç°œø³Ì»¹ÃŽÒÔºóÐÝÃß
    ¡°µ±Ç°œø³Ì¡±£ºÕýÔÚ»ñÈ¡CPU×ÊÔŽÖŽÐÐµÄœø³Ì,µ±Ç°œø³ÌÊÇÒ»žö¶¯Ì¬±ä»¯µÄ
    current£ºÄÚºËÈ«ŸÖÖžÕë±äÁ¿,¶ÔÓŠµÄÊýŸÝÀàÐÍ£º
             struct task_struct {
             	pid_t pid;//œø³ÌºÅ
             	char comm[TASK_COMM_LEN];//œø³ÌµÄÃû³Æ
             	...
             };//ŽËÊýŸÝœá¹¹ŸÍÊÇÃèÊölinuxÏµÍ³œø³Ì
             Ö»ÒªŽŽœšÒ»žöœø³Ì,ÄÚºËŸÍ»á°ïÄãŽŽœšÒ»žötask_struct
             ¶ÔÏóÀŽÃèÊöÄãŽŽœšµÄÕâžöœø³ÌÐÅÏ¢
             currentÖžÕëŸÍÊÇÖžÏòµ±Ç°œø³Ì¶ÔÓŠµÄtask_struct¶ÔÏó
   ŽòÓ¡µ±Ç°œø³ÌµÄPIDºÍÃû³Æ£º
   printk("µ±Ç°œø³Ì[%s]PID[%d]\n", 
   		current->comm, current->pid);          
             
   ×¢Òâ£ºÒ»žöÐÝÃßµÄœø³ÌÒªÓÐÒ»žö¶ÔÓŠµÄÈÝÆ÷wait£¡
  
  3.œ«ÐÝÃßµÄœø³ÌÌíŒÓµœµÈŽý¶ÓÁÐÖÐÈ¥(œ«Ð¡ŒŠÌíŒÓµœŒŠÂèÂèµÄºóÃæ)
    add_wait_queue(&wq, &wait);   
  
  4.ÉèÖÃœø³ÌµÄÐÝÃß×ŽÌ¬
    set_current_state(TASK_INTERRUPTIBLE);//¿ÉÖÐ¶ÏµÄÐÝÃß×ŽÌ¬ 
    »òÕß
    set_current_state(TASK_UNINTERRUPTIBLE); //²»¿ÉÖÐ¶ÏµÄÐÝÃß×ŽÌ¬
    //ŽËÊ±œø³Ì»¹Ã»ÓÐÐÝÃß
  
  5.µ±Ç°œø³ÌœøÈëÕæÕýµÄÐÝÃß×ŽÌ¬,Ò»µ©œøÈëÐÝÃß×ŽÌ¬,ŽúÂë
    Í£Ö¹²»Ç°,µÈŽý±»»œÐÑ
    schedule(); //ÐÝÃßÈ»ºóµÈŽý±»»œÐÑ
    ¶ÔÓÚ¿ÉÖÐ¶ÏµÄÐÝÃß×ŽÌ¬,»œÐÑµÄ·œ·šÓÐÁœÖÖ£º
    1.œÓÊÕµœÁËÐÅºÅÒýÆð»œÐÑ
    2.Çý¶¯Ö÷¶¯»œÐÑ(ÊýŸÝµœÀŽ,ÖÐ¶ÏŽŠÀíº¯ÊýÖÐœøÐÐ»œÐÑ)
    
    ¶ÔÓÚ²»¿ÉÖÐ¶ÏµÄÐÝÃß×ŽÌ¬£¬»œÐÑµÄ·œ·šÓÐÒ»ÖÖ£º
    1.Çý¶¯Ö÷¶¯»œÐÑ
    
  6. Ò»µ©œø³Ì±»»œÐÑ,ÉèÖÃœø³ÌµÄ×ŽÌ¬ÎªÔËÐÐ,²¢ÇÒœ«µ±Ç°œø³Ì
     ŽÓµÈŽý¶ÓÁÐÖÐÒÆ³ý
     set_current_state(TASK_RUNNING);
     remove_wait_queue(&wq, &wait); 
  
  7.Ò»µ©±»»œÐÑ,Ò»°ã»¹ÒªÅÐ¶Ï»œÐÑµÄÔ­Òò
    if(signal_pending(current)) {
    	printk("œø³ÌÓÉÓÚœÓÊÕµœÁËÐÅºÅÒýÆðµÄ»œÐÑ!\n");
    	return -ERESTARTSYS;
    } else {
    	printk("Çý¶¯Ö÷¶¯»œÐÑ!\n");
    	//ËµÃ÷Ó²ŒþÊýŸÝ×Œ±žŸÍÐ÷
    	//œø³ÌŒÌÐø²Ù×÷Ó²Œþ
    	copy_to_user//œ«ÊýŸÝÉÏ±šžøÓÃ»§¿ÕŒä
    }
   
   8.Çý¶¯Ö÷¶¯»œÐÑµÄ·œ·š£º
     wake_up(&wq); //»œÐÑwqËù¶ÔÓŠµÄµÈŽý¶ÓÁÐÖÐËùÓÐµÄœø³Ì
     »òÕß
     wake_up_interruptible(&wq); //Ö»»œÐÑÐÝÃßÀàÐÍÎª¿ÉÖÐ¶ÏµÄœø³Ì
    
   °žÀý£ºÐŽœø³Ì»œÐÑ¶Áœø³Ì
   ARM²âÊÔ²œÖè£º
   insmod /home/drivers/btn_drv.ko
   /home/drivers/btn_test r & //Æô¶¯¶Áœø³Ì
   ps  //²é¿ŽPID
   top //²é¿ŽÐÝÃßÀàÐÍ
   /home/drivers/btn_test w   //Æô¶¯ÐŽœø³Ì
   
  
  °žÀý£º±àÐŽ°ŽŒüÇý¶¯,žøÓÃ»§ÓŠÓÃ³ÌÐòÉÏ±š°ŽŒü×ŽÌ¬ºÍ°ŽŒüÖµ
  ·ÖÎö£º
  1.ÓŠÓÃ³ÌÐò»ñÈ¡°ŽŒüµÄ×ŽÌ¬ºÍ°ŽŒüÖµ
    ÓŠÓÃ³ÌÐòµ÷ÓÃread»òÕßioctl»ñÈ¡ÕâÐ©ÐÅÏ¢
  2.Èç¹û°ŽŒüÃ»ÓÐ²Ù×÷,ÓŠÓÃ³ÌÐòÓŠžÃœøÈëÐÝÃßµÈŽý°ŽŒüÓÐ²Ù×÷
  3.Ò»µ©°ŽŒüÓÐ²Ù×÷,ÊÆ±ØžøCPU·¢ËÍÖÐ¶ÏÐÅºÅ,ŽËÊ±»œÐÑÐÝÃßµÄ
    œø³Ì,œø³ÌÔÙÈ¥¶ÁÈ¡°ŽŒüµÄÐÅÏ¢ÉÏ±šžøÓÃ»§
  
  ²âÊÔ²œÖè£º
  insmod /home/drivers/btn_drv.ko
  ls /dev/mybtn -lh
  cat /proc/interrupts //²é¿ŽÖÐ¶ÏµÄ×¢²áÐÅÏ¢
  
  
3.°ŽŒüÈ¥³ý¶¶¶¯
  ÓÉÓÚ°ŽŒüµÄ»úÐµœá¹¹,°ŽŒüµÄÖÊÁ¿ÎÊÌâÔì³É°ŽŒüŽæÔÚ¶¶¶¯
  °ŽŒü¶¶¶¯ÊµŒÊµÄ²šÐÎ
  È¥³ý¶¶¶¯µÄ·œ·š£º
  Ó²ŒþÈ¥¶¶¶¯
  ÈíŒþÈ¥¶¶¶¯£º×ÚÖŒÑÓÊ±
  Ã¿ŽÎÉÏÉýÑØºÍÏÂœµÑØµÄÊ±ŒäŒäžôŸ­ÑéÖµ5~10ms
  µ¥Æ¬»úÂã°å¿ª·¢,²ÉÓÃÃŠÑÓÊ±,ÀË·ÑCPU×ÊÔŽ
  linuxÄÚºËÍ¬Ñù²ÉÓÃÑÓÊ±,ÑÓÊ±²ÉÓÃ¶šÊ±Æ÷œøÐÐÑÓÊ±

±àÐŽÇý¶¯²œÖè£º
1.ÏÈÍ·ÎÄŒþ
2.žÃÉùÃ÷µÄÉùÃ÷,žÃ¶šÒåµÄ¶šÒå,žÃ³õÊŒ»¯µÄ³õÊŒ»¯
  ÏÈžãÓ²ŒþÔÙÅªÈíŒþ
  struct btn_event
  struct btn_resource
  
  struct btn_event g_data;
  struct btn_resource btn_info...
  
  struct file_operations ...
  struct miscdevice ...
3.Ìî³äÈë¿ÚºÍ³ö¿Ú
  µ«·²³õÊŒ»¯¹€×÷¶ŒÔÚÈë¿Ú
  ³ö¿ÚžúÈë¿Ú¶Ô×ÅžÉ
4.×îºóÍê³Éž÷žöœÓ¿Úº¯Êý
  .open
  .release
  .read
  .write
  .unlocked_ioctl
  .mmap
  ±àÐŽœÓ¿Úº¯ÊýÒ»¶šÒªžùŸÝÊµŒÊµÄÓÃ»§ÐèÇóÀŽÍê³É
  
  Èç¹ûÓÐÖÐ¶Ï,±àÐŽÖÐ¶ÏŽŠÀíº¯Êý
  ×¢Òâ£ºÖÐ¶ÏŽŠÀíº¯ÊýºÍž÷žöœÓ¿Úº¯ÊýÖ®ŒäµÄ¹ØÏµ(ÊýŸÝŽ«µÝ)
  
°ŽŒü³ÌÐòµÄÖŽÐÐÁ÷³Ì£º
ÓŠÓÃread->Çý¶¯read,Ë¯Ãß->°ŽŒü°ŽÏÂ->²úÉúÖÐ¶Ï->ÄÚºËµ÷ÖÐ¶ÏŽŠÀíº¯Êý
->ÖÐ¶ÏŽŠÀíº¯Êý×Œ±žÉÏ±šµÄÊýŸÝ,»œÐÑœø³Ì->readœø³Ì»œÐÑ,ŒÌÐøÖŽÐÐ-¡·
°ÑÖÐ¶Ï×Œ±žºÃµÄÊýŸÝžøÓÃ»§    
    
-----------------------------------------------------------------------
»Ø¹Ë£º
1.linuxÄÚºË²¢·¢ºÍŸºÌ¬Ö®Ô­×Ó²Ù×÷
  ÌØµã£º
  ÄÜ¹»œâŸöËùÓÐµÄŸºÌ¬ÎÊÌâ
  Î»Ô­×Ó²Ù×÷£º¶Ô¹²Ïí×ÊÔŽœøÐÐÎ»²Ù×÷,¿ŒÂÇŸºÌ¬ÎÊÌâ
  ÕûÐÎÔ­×Ó²Ù×÷£º¶Ô¹²Ïí×ÊÔŽœøÐÐÕûÐÍ²Ù×÷,¿ŒÂÇŸºÌ¬ÎÊÌâ
  ÊýŸÝÀàÐÍ£ºatomic_t(Àà±È³Éint)
  ×Üœá£º²Ù×÷Îñ±ØÒªÊ¹ÓÃÄÚºËÌá¹©µÄÏà¹Øº¯Êý

2.linuxÄÚºËµÈŽý¶ÓÁÐ»úÖÆ
  ²úÉúžù±ŸÔ­Òò£ºÍâÉèµÄŽŠÀíËÙ¶ÈÔ¶Ô¶ÂýËÙCPU
  ÄÜ¹»ÈÃœø³ÌËæÊ±ËæµØÐÝÃß,ËæÊ±ËæµØ±»»œÐÑ
  ±à³Ì²œÖè£º
  1.¶šÒå³õÊŒ»¯µÈŽý¶ÓÁÐÍ·(È«ŸÖ±äÁ¿)
  2.¶šÒå³õÊŒ»¯×°ÔØÐÝÃßœø³ÌµÄÈÝÆ÷(ŸÖ²¿±äÁ¿)
    current£ºÄÚºËÈ«ŸÖ±äÁ¿,ÖžÏò"µ±Ç°œø³Ì"
  3.ÌíŒÓÐÝÃßœø³ÌµœµÈŽý¶ÓÁÐÖÐ
  4.ÉèÖÃµ±Ç°œø³ÌµÄÐÝÃß×ŽÌ¬
  5.œøÈëÕæÕýµÄÐÝÃß×ŽÌ¬,ÊÍ·ÅCPU×ÊÔŽ,µÈŽý±»»œÐÑ
    ×¢Òâ£º»œÐÑµÄ·œ·š
  6.Ò»µ©œø³Ì±»»œÐÑ,ÉèÖÃœø³ÌµÄ×ŽÌ¬ÎªÔËÐÐ,²¢ÇÒœ«œø³ÌŽÓ
    µÈŽý¶ÓÁÐÖÐÒÆ³ý
  7.Ò»°ãÒªÅÐ¶Ïœø³Ì»œÐÑµÄÔ­Òò
  8.Çý¶¯Ö÷¶¯»œÐÑµÄ·œ·š
    wake_up/wake_up_interruptible
  9.Îñ±ØÕÆÎÕ°ŽŒüÇý¶¯°üÀšÈ¥¶¶¶¯     
  
3.linuxÄÚºËµÈŽý¶ÓÁÐ±à³Ì·œ·š2£º
  ±à³Ì²œÖè£º
  1.¶šÒå³õÊŒ»¯µÈŽý¶ÓÁÐÍ·(¹¹ÔìŒŠÂèÂè)
    wait_queue_head_t wq;
    init_waitqueue_head(&wq);
  2.µ÷ÓÃÒÔÏÂÁœžö·œ·šŒŽ¿ÉÊµÏÖœø³ÌµÄÐÝÃß
    wait_event(wq, condition);//ÇÐŒÇ£ºŽËÄËºê
    ËµÃ÷£º
    wq£ºµÈŽý¶ÓÁÐÍ·
    condition:Èç¹ûconditionÎªÕæ,œø³Ì²»»áÐÝÃß,Á¢ŒŽ·µ»Ø,ŒŽÓ²ŒþÉè±ž¿ÉÓÃ(¿É¶Á»òÕß¿ÉÐŽ)
    	      Èç¹ûconditionÎªŒÙ,œø³Ìœ«œøÈë²»¿ÉÖÐ¶ÏµÄÐÝÃß×ŽÌ¬,µÈŽý±»»œÐÑ,ŒŽÓ²ŒþÉè±ž²»¿ÉÓÃ
    
    »òÕß
    wait_event_interruptible(wq, condition);
    ËµÃ÷£º
    wq£ºµÈŽý¶ÓÁÐÍ·
    condition:Èç¹ûconditionÎªÕæ,œø³Ì²»»áÐÝÃß,Á¢ŒŽ·µ»Ø,ŒŽÓ²ŒþÉè±ž¿ÉÓÃ(¿É¶Á»òÕß¿ÉÐŽ)
    	      Èç¹ûconditionÎªŒÙ,œø³Ìœ«œøÈë¿ÉÖÐ¶ÏµÄÐÝÃß×ŽÌ¬,µÈŽý±»»œÐÑ,ŒŽÓ²ŒþÉè±ž²»¿ÉÓÃ 
    ×Üœá£º
    ÒÔÉÏÁœžöºêµÈŒÛÓÚ±à³Ì·œ·š1µÄµÚ2²œ~µÚ7²œ
  
  3.»œÐÑµÄ·œ·š
    wake_up/wake_up_interruptible
    
  ·œ·š2µÄ±à³Ì¿òŒÜ£º
  //ÐÝÃßµÄµØ·œ
  xxx(...) {
  	//Æð³õconditionÎªŒÙ
  	wait_event_interruptible(wq, condition);
  	//Ò»µ©±»»œÐÑ
  	conditionÉèÖÃÎªŒÙ
  }
  
  //»œÐÑµÄµØ·œ
  yyy(...) {
  	conditionÉèÖÃÎªÕæ
        //»œÐÑÐÝÃßµÄœø³Ì
  	wake_up_interruptible(&wq);
  }
  
  °žÀý£ºÀûÓÃµÈŽý¶ÓÁÐ±à³Ì·œ·š2ÊµÏÖ°ŽŒüÇý¶¯

***********************************************************
3.linuxÄÚºËÄÚŽæ·ÖÅäÏà¹ØÄÚÈÝ
  3.1.linuxÄÚºËÄÚŽæµÄ»®·Ö(ÁËœâ)
  Ã÷È·£º²»¹ÜÊÇÔÚÓÃ»§¿ÕŒä»¹ÊÇÔÚÄÚºË¿ÕŒä,ÈíŒþÒ»ÂÉ²»ÔÊÐí·ÃÎÊ
        Ó²ŒþÍâÉèµÄÎïÀíµØÖ·,ÒªÏëÈíŒþ·ÃÎÊÓ²ŒþÍâÉèµÄÎïÀíµØÖ·
        ±ØÐëœ«Ó²ŒþÍâÉèµÄÎïÀíµØÖ·Ó³ÉäµœÓÃ»§ÐéÄâµØÖ·»òÕß
        ÄÚºËÐéÄâµØÖ·,œ«ÀŽÈíŒþÖ»Òª·ÃÎÊÓÃ»§ÐéÄâµØÖ·»òÕß
        ÄÚºËÐéÄâµØÖ·ŸÍÊÇÔÚ·ÃÎÊ¶ÔÓŠµÄÎïÀíµØÖ·
  ÌØÀý£ºuclinux²Ù×÷ÏµÍ³ÈíŒþ·ÃÎÊµÄµØÖ·¶ŒÊÇÎïÀíµØÖ·
  
  »Ø¹ËÓÃ»§¿ÕŒä3GÐéÄâÄÚŽæµÄ»®·Ö
  ×Üœá£ºÓÃ»§¿ÕŒä3GÐéÄâÄÚŽæµØÖ·ºÍÎïÀíµØÖ·Ö®ŒäµÄÓ³Éä
        ÊôÓÚ¶¯Ì¬Ó³Éä(ÓÃµœÊ±œøÐÐÓ³Éä,²»ÓÃÊ±œ«Ó³Éä¹ØÏµœâ³ý)
  4GÐéÄâµØÖ·»®·ÖÎªÓÃ»§ÐéÄâµØÖ·ºÍÄÚºËÐéÄâµØÖ·
  ÓÃ»§ÐéÄâµØÖ·¿ÕŒä·¶Î§£º0~0xbfffffff
  ÄÚºËÐéÄâµØÖ·¿ÕŒä·¶Î§£º0xc0000000~0xffffffff
  
  linuxÄÚºË1GÐéÄâÄÚŽæµØÖ·ºÍÎïÀíÄÚŽæµØÖ·µÄÓ³ÉäÊôÓÚÒ»Ò»Ó³Éä,
  ŒŽÄÚºËÔÚÆô¶¯µÄÊ±ºòŸÍÒÑŸ­œ«ÎïÀíÄÚŽæµØÖ·ºÍÄÚºË1GÐéÄâÄÚŽæµØÖ·
  œšÁ¢ºÃÓ³Éä¹ØÏµ,œ«ÀŽÈíŒþÎÞÐèÔÙŽÎœšÁ¢Ó³Éä,Ö±œÓ·ÃÎÊŒŽ¿É,ÄÚŽæ
  µÄ·ÃÎÊÐ§ÂÊ×îžß£º
  ÎïÀíÄÚŽæµØÖ·     ÄÚºËÐéÄâµØÖ·   
  0x0     	   0xC0000000
  0x1		   0xC0000001
  0x2		   0xC0000002
  ...              ...
  1G		   1G
  Ò»Ò»Ó³ÉäŽæÔÚÏßÐÔ¹ØÏµ£¡
  ÎÊÌâ£ºÈç¹û²ÉÓÃÒ»Ò»Ó³Éä,linuxÄÚºË×î¶àÖ»ÄÜ·ÃÎÊ1GµÄÎïÀíÄÚŽæ
  ÈçºÎÈÃÄÚºË·ÃÎÊµœËùÓÐµÄÎïÀíÄÚŽæµØÖ·ÄØ£¿ÓÖÒªŒæ¹ËÄÚŽæµÄ·ÃÎÊ
  Ð§ÂÊ
  Žð£ºlinuxÄÚºËœ«1GÐéÄâÄÚŽæ»®·ÖÈôžÉžöÇøÓò
  X86»®·Ö£º
  Ö±œÓÄÚŽæÓ³ÉäÇø£º
  	ŽóÐ¡Îª896M
  	ÄÚºËÔÚÆô¶¯µÄÊ±ºò,œ«Ö±œÓÄÚŽæÓ³ÉäÇøµÄÄÚºËÐéÄâÄÚŽæµØÖ·
  	ºÍÎïÀíÄÚŽæµØÖ·œøÐÐÒ»Ò»Ó³Éä,Õâ¿éÄÚŽæÇøÓòµÄÐ§ÂÊ×îžß
  	ÓÖ³ÆµÍ¶ËÄÚŽæ
  ¶¯Ì¬ÄÚŽæÓ³ÉäÇø£º
  	Ä¬ÈÏŽóÐ¡Îª120M
  	ÄÚºËŽúÂëÐèÒª·ÃÎÊÄ³¿éÎïÀíÄÚŽæÊ±,ÄÚºË¶¯Ì¬œšÁ¢¶¯Ì¬ÄÚŽæÓ³ÉäÇø
  	µÄÐéÄâÄÚŽæºÍÎïÀíÄÚŽæµÄÓ³Éä,Ê¹ÓÃÍê±Ï,Ò»¶šÒªŒÇµÃœâ³ý
  	µØÖ·Ó³Éä,·ñÔòÔì³ÉÄÚŽæÐ¹Â©
  	
  ÓÀŸÃÄÚŽæÓ³ÉäÇø£º
  ¹Ì¶šÄÚŽæÓ³ÉäÇø£º
  	¹Ì¶š=ÓÀŸÃ
  	ŽóÐ¡¶ŒÎª4M
  	Èç¹ûÆµ·±µÄ·ÃÎÊÄ³¿éÎïÀíÄÚŽæ,¿ŒÂÇµœÐ§ÂÊ,¿ÉÒÔœ«
  	ÎïÀíÄÚŽæÓ³ÉäµœÓÀŸÃ»òÕß¹Ì¶šÄÚŽæµÄÐéÄâÄÚŽæÉÏ
  	Ç°ÕßÓ³ÉäÊ±»áµŒÖÂÐÝÃß,²»ÄÜÓÃÓÚÖÐ¶ÏÉÏÏÂÎÄ
  	ºóÕß²»»áµŒÖÂÐÝÃß    	      
   
   žß¶ËÄÚŽæ=¶¯Ì¬ÄÚŽæÓ³ÉäÇø+ÓÀŸÃ+¹Ì¶š
   
   TPAD¿ª·¢°å,linuxÄÚºË1GÐéÄâÄÚŽæµÄ»®·Ö£º
   Æô¶¯¿ª·¢°å,¹Û²ìÄÚºËŽòÓ¡ÐÅÏ¢,ÕÒµœ1GÄÚºËÐéÄâÄÚŽæµÄ»®·Ö£º
   Virtual kernel memory layout:
    ÇøÓòÃû    ÄÚºËÆðÊŒµØÖ·  ÄÚºËœáÊøµØÖ·  ÇøÓòŽóÐ¡
    
    Òì³£ÏòÁ¿±í
    vector  : 0xffff0000 - 0xffff1000   (   4 kB)
    
    ¹Ì¶šÄÚŽæÓ³ÉäÇø
    fixmap  : 0xfff00000 - 0xfffe0000   ( 896 kB)
    
    DMAÄÚŽæÓ³ÉäÇø
    DMA     : 0xff000000 - 0xffe00000   (  14 MB)
    
    ¶¯Ì¬ÄÚŽæÓ³ÉäÇø
    vmalloc : 0xec800000 - 0xfc000000   ( 248 MB)
    
    Ö±œÓÄÚŽæÓ³ÉäÇø
    lowmem  : 0xc0000000 - 0xec600000   ( 710 MB)
    
    //Ä£¿éŒÓÔØÇøÓò
    modules : 0xbf000000 - 0xc0000000   (  16 MB)
    
    //³õÊŒ»¯¶Î  
      .init : 0xc0008000 - 0xc0037000   ( 188 kB)
    //ŽúÂë¶Î  
      .text : 0xc0037000 - 0xc0832000   (8172 kB)
    //ÊýŸÝ¶Î  
      .data : 0xc0832000 - 0xc0886960   ( 339 kB) 
    
   ÇÐŒÇ£ºÒ»žöÎïÀíµØÖ·¿ÉÒÔÓÐ¶àžöÐéÄâµØÖ·(ÓÃ»§µÄºÍÄÚºËµÄ)
         µ«ÊÇÒ»žöÐéÄâµØÖ·²»ÄÜ¶ÔÓŠ¶àžöÎïÀíµØÖ·
           
   3.2.linuxÄÚºËÄÚŽæ·ÖÅäµÄº¯Êý
   »ØÒäÓŠÓÃÄÚŽæ·ÖÅä£º
   int a; //ŸÖ²¿,È«ŸÖµÄ(³õÊŒ»¯ºÍÃ»³õÊŒ»¯)
   malloc/free //¶Ñ
   
   ÄÚºË·ÖÅäº¯ÊýÒ»£º
   kmalloc/kfree
   º¯ÊýÔ­ÐÍ£º
   void *kmalloc(int size, gfp_t flags)
   ¹ŠÄÜ£º
   1.ŽÓÖ±œÓÄÚŽæÓ³ÉäÇø·ÖÅäÄÚŽæ
     ·ÃÎÊÐ§ÂÊžß
   2.·ÖÅäÄÚŽæŽóÐ¡×îÐ¡32×ÖœÚ,×îŽó4MB
   3.·ÖÅäµÄÄÚºËÐéÄâÄÚŽæºÍÎïÀíÄÚŽæ¶ŒÊÇÁ¬ÐøµÄ
   
   ²ÎÊý£º
   size:Öž¶š·ÖÅäÄÚŽæµÄŽóÐ¡,µ¥Î»Îª×ÖœÚ
   flags:Öž¶š·ÖÅäÄÚŽæÊ±µÄÐÐÎª±êÖŸ£º
         GFP_KERNEL:žæËßÄÚºË,ÇëÅ¬ÁŠœ«ÕâŽÎÄÚŽæ·ÖÅäžã¶š
                    Èç¹ûÄÚŽæ²»×ã,»áµŒÖÂÐÝÃß,ËùÒÔ²»ÄÜÓÃÔÚ
                    ÖÐ¶ÏÉÏÏÂÎÄ
         GFP_ATOMIC:Èç¹ûÄÚŽæ²»×ã,²»»áœøÐÐÐÝÃß,¶øÊÇÁ¢ŒŽ·µ»Ø
                    ¿ÉÒÔÓÃÔÚÖÐ¶ÏÉÏÏÂÎÄ
   ·µ»ØÖµ£º·µ»Ø·ÖÅäÄÚºËÐéÄâÄÚŽæµÄÊ×µØÖ·
   ÀýÈç£º
   void *addr;
   addr = kmalloc(100, GFP_KERNEL);
   if (addr == NULL)
   	return -ENOMEM;   
   	
   memcpy(addr, "hello,world", 12);
     
   ²»ÔÙÊ¹ÓÃÊ±,ŒÇµÃÒªÊÍ·ÅÄÚŽæ£º
   void kfree(void *addr)
   
   ÄÚºËÄÚŽæ·ÖÅäº¯Êý¶þ£º
   __get_free_pages/free_pages
   º¯ÊýÔ­ÐÍ£º
   unsigned long __get_free_pages(gfp_t flags, int order)
   ¹ŠÄÜ£º
   1.ŽÓÖ±œÓÄÚŽæÓ³ÉäÇø·ÖÇø
   2.ÎïÀíºÍÐéÄâÄÚŽæÉÏ¶ŒÊÇÁ¬ÐøµÄ
   3.×îŽó4MB
   
   ²ÎÊý£º
   flags£º±íÊŸ·ÖÅäÄÚŽæÊ±µÄÐÐÎª
          GFP_KERNEL:žæËßÄÚºË,ÇëÅ¬ÁŠœ«ÕâŽÎÄÚŽæ·ÖÅäžã¶š
                    Èç¹ûÄÚŽæ²»×ã,»áµŒÖÂÐÝÃß,ËùÒÔ²»ÄÜÓÃÔÚ
                    ÖÐ¶ÏÉÏÏÂÎÄ
          GFP_ATOMIC:Èç¹ûÄÚŽæ²»×ã,²»»áœøÐÐÐÝÃß,¶øÊÇÁ¢ŒŽ·µ»Ø
                    ¿ÉÒÔÓÃÔÚÖÐ¶ÏÉÏÏÂÎÄ
   order:order=0,·ÖÅä1Ò³
   	 order=1,·ÖÅä2Ò³
   	 order=2,·ÖÅä4Ò³
   	 order=3,·ÖÅä8Ò³
   	 ...
   ·µ»ØÖµ£º·µ»Ø·ÖÅäÄÚŽæµÄÊ×µØÖ·,×¢ÒâÊýŸÝÀàÐÍµÄ×ª»»
   
   unsigned long addr;
   addr = __get_free_pages(GPF_KERNEL, 2);
   memcpy((void *)addr, "hello,world", 12);
   
   ÄÚŽæ²»ÔÙÊ¹ÓÃÊ±,ŒÇµÃÒªÊÍ·ÅÄÚŽæ£º
   void free_pages(unsigned long addr, int order);
  
   ÄÚºËÄÚŽæ·ÖÅäº¯ÊýÈý£º
   vmalloc/vfree
   void *vmalloc(int size);
   º¯Êý¹ŠÄÜ£º
   1.ŽÓ¶¯Ì¬ÄÚŽæÓ³ÉäÇø·ÖÅäÄÚŽæ
   2.ÄÚºËÐéÄâµØÖ·ÊÇÁ¬ÐøµÄ,µ«ÊÇ¶ÔÓŠµÄÎïÀíµØÖ·²»Ò»¶šÁ¬Ðø
     ¶¯Ì¬ÄÚŽæÓ³ÉäÇøµÄÄÚŽæ·ÃÎÊÐ§ÂÊµÍ
   3.ÀíÂÛÄ¬ÈÏ×îŽó·ÖÅä120M 
   4.Í¬Ñù»áµŒÖÂÐÝÃß,ËùÒÔ²»ÄÜÓÃÔÚÖÐ¶ÏÉÏÏÂÎÄ
   
   ÊÍ·ÅÄÚŽæ£º
   void vfree(void *addr)
   
   ÄÚºËÄÚŽæ·ÖÅäÁíÀà·œ·š£º
   ÔÚÄÚºËÆô¶¯²ÎÊýÖÐ,ÌíŒÓvmalloc=£¿(ÀýÈçvmalloc=250M)±íÊŸ
   ÄÚºËÆô¶¯Ê±,œ«¶¯Ì¬ÄÚŽæÓ³ÉäÇøµÄŽóÐ¡ÓÉÔ­ÏÈµÄ120MÀ©Õ¹µœ
   250M
   
   °žÀý£ºÌø×ª¶¯Ì¬ÄÚŽæÓ³ÉäÇøµÄŽóÐ¡
   1.Æô¶¯¿ª·¢°åµÄlinuxÏµÍ³,¹Û²ìÄÚºËŽòÓ¡ÐÅÏ¢,Ê×ÏÈÈ·ÈÏ
     Ö±œÓÄÚŽæÓ³ÉäÇøºÍ¶¯Ì¬ÄÚŽæÓ³ÉäÇøµÄŽóÐ¡(Ä¬ÈÏ832MºÍ120M)
   
   2.ÖØÆô¿ª·¢°å,œøÈëuboot,ÖŽÐÐ£º
   setenv bootargs root=/dev/nfs nfsroot=192.168.1.8:/opt/rootfs ip=192.168.1.110:192.168.1.8:192.168.1.1:255.255.255.0::eth0:on init=/linuxrc console=ttySAC0,115200 vmalloc=250M
   saveenv
   boot 
   cat /proc/cmdline
   ŒÌÐø¹Û²ìÄÚºËµÄÆô¶¯ÐÅÏ¢,ÔÙŽÎ²é¿ŽÖ±œÓÄÚŽæÓ³ÉäÇøºÍ¶¯Ì¬ÄÚŽæÓ³ÉäÇøµÄŽóÐ¡ÊÇ·ñÓÐ±ä»¯
   
   ÄÚºËÄÚŽæ·ÖÅäÁíÀà·œ·š£º
   ÔÚÄÚºËÆô¶¯²ÎÊýÖÐ,ÌíŒÓmem=£¿(ÀýÈçmem=8M)±íÊŸ
   ÄÚºËÆô¶¯Ê±,œ«ÎïÀíÄÚŽæµÄ×îºó8MÔ€Áô³öÀŽ,œ«ÀŽžøÇý¶¯µ¥¶ÀÊ¹ÓÃ
   µ«ÊÇÇý¶¯Ê¹ÓÃÊ±,±ØÐëÀûÓÃioremapº¯ÊýœøÐÐµØÖ·Ó³Éä,œ«×îºóµÄ
   8MÎïÀíÄÚŽæºÍÄÚºËµÄ¶¯Ì¬ÄÚŽæÓ³ÉäÇøµÄÐéÄâÄÚŽæ×öÓ³Éä,Ò»µ©Íê³É
   Ó³Éä,œ«ÀŽÇý¶¯·ÃÎÊÓ³ÉäµÄÄÚºËÐéÄâÄÚŽæŸÍÊÇÔÚ·ÃÎÊ×îºóµÄ8MÎïÀí
   ÄÚŽæ

**********************************************************
4.ŽóÃû¶Š¶ŠµÄioremapº¯Êý
  4.1.Ã÷È·
  Ç¶ÈëÊœÏµÍ³,CPU·ÃÎÊÄ³žöÍâÉè,±ØÐëÒªÏÈ»ñÈ¡µœÕâžöÍâÉèµÄ»ùµØÖ·
  Ö»ÒªÓÐÁËÕâžö»ùµØÖ·,œ«ÀŽŸÍ¿ÉÒÔÒÔµØÖ·ÖžÕëµÄÐÎÊœ·ÃÎÊ£º
  *(unsigned long *)0x20000000 = 0x55;
  
  4.2.Ã÷È·
  linuxÏµÍ³²»¹ÜÊÇÓÃ»§¿ÕŒä»¹ÊÇÄÚºË¿ÕŒä,Ò»ÂÉ²»ÔÊÐí·ÃÎÊÍâÉèµÄÎïÀí»ùµØÖ·
  ,ÒªÏë·ÃÎÊ,±ØÐëœ«Éè±žµÄÎïÀíµØÖ·Ó³ÉäµœÓÃ»§ÐéÄâµØÖ·ÉÏ»òÕß
  ÄÚºËÐéÄâµØÖ·ÉÏ,œ«ÀŽ·ÃÎÊÓ³ÉäµÄÓÃ»§»òÕßÄÚºËÐéÄâµØÖ·ŸÍÊÇÔÚ
  ·ÃÎÊ¶ÔÓŠµÄÎïÀíµØÖ·
  
  4.3.ÎÊ£ºÈçºÎœ«ÍâÉèµÄÎïÀíµØÖ·Ó³ÉäµœÄÚºËµÄÐéÄâµØÖ·ÉÏÄØ£¿
      Žð£ºÀûÓÃŽóÃû¶Š¶ŠµÄioremapº¯Êý
     
  4.4.ioremapÊ¹ÓÃ
  º¯ÊýÔ­ÐÍ£º
  void *ioremap(unsigned long phys_addr, int size)
  º¯Êý¹ŠÄÜ£º
  1.œ«ÍâÉèµÄÎïÀíµØÖ·Ó³ÉäµœÄÚºËµÄÐéÄâµØÖ·ÉÏ
  2.Ó³ÉäµœÄÚºË1GµÄ¶¯Ì¬ÄÚŽæÓ³ÉäÇø
  
  phys_addr:Ó²ŒþÍâÉèµÄÆðÊŒÎïÀíµØÖ·
  size:Ó³ÉäµÄ"ÎïÀíÄÚŽæ"µÄŽóÐ¡

  ·µ»ØÖµ£º·µ»ØµÄÓ³ÉäµÄÄÚºËÆðÊŒÐéÄâµØÖ·
  
  ²Î¿ŒŽúÂë£º
  LED1,LED2Ó²ŒþŒÄŽæÆ÷ÐÅÏ¢£º
  GPC0CON:ÆðÊŒÎïÀíµØÖ·0xE0200060,ŽóÐ¡4×ÖœÚ
  GPC0DATA:ÆðÊŒÎïÀíµØÖ·0xE0200064,ŽóÐ¡4×ÖœÚ
  
  Ó³ÉäÈçÏÂ£º
  unsigned long *gpiocon *gpiodata;
  gpiocon = ioremap(0xE0200060, 4); 
  gpiodata = ioremap(0xE0200064, 4);
  
  »òÕß£º
  ÓÉÓÚ·¢ÏÖÁœžöÓ²ŒþŒÄŽæÆ÷µÄÄÚŽæ¿ÕŒä¶ŒÊÇÁ¬ÐøµÄ,ÎïÀíÉÏÁ¬Ðø£º
  gpiocon = ioremap(0xE0200060, 8);
  gpiodata = gpiocon + 1;
  
  *gpiocon &= ~(0xf << 12);
  *gpiocon |= (1 << 12);
  ...
  
  ÄÚŽæ²»ÔÙÊ¹ÓÃÊ±,ŒÇµÃÒªÊÍ·ÅÄÚŽæ,œâ³ýµØÖ·Ó³Éä
  iounmap(void *addr);
  
  ÀýÈç£º
  iounmap(gpiocon);
  
  °žÀý£º²»ÔÙÊ¹ÓÃGPIO¿âº¯Êý,ÊµÏÖLEDÇý¶¯,œÓ¿Ú²ÉÓÃioctl
  
  Ð¡ÏîÄ¿£ºŒÄŽæÆ÷±àŒ­Æ÷
  ÓÃ»§ÐèÇó£ºËæÒâÄÜ¹»²é¿ŽºÍÐÞžÄCPUµÄÈÎºÎÒ»žöŒÄŽæÆ÷
  ËŒÂ·£º
  ÓŠÓÃ²âÊÔËŒÂ·£º
  ./regeditor w regaddr regdata
  ./regeditor r regaddr //ŽòÓ¡ŒÄŽæÆ÷µÄÖµ
  ÀýÈç£º
  ./regeditor w 0xE0200080 0x11000 //œ«0x11000ÐŽÈëŒÄŽæÆ÷0xE0200080
  ./regeditor r 0xE0200080 //ŽòÓ¡ŒÄŽæÆ÷0xE0200080µÄÖµ
  
  ÓŠÓÃ³ÌÐò±à³ÌËŒÂ·£º
  struct reg_info {
  	unsigned long regaddr;
  	unsigned long regadata;
  };
  
  #define REG_WRITE	0x100001 //ÐŽŒÄŽæÆ÷
  #define REG_READ	0x100002 //¶ÁŒÄŽæÆ÷
  
  struct reg_info reg;
  
  if (!strcmp) { //ÐŽŒÄŽæÆ÷
  	reg.regaddr = strtoul(...);
  	reg.regdata = strtoul(...);
  	ioctl(fd, REG_WRITE, &reg);
  } else { //¶Á
  	reg.regaddr = strtoul(...);
  	//reg.regdata = ?
  	ioctl(fd, REG_READ, &reg); //¶ÁŒÄŽæÆ÷
  	printf("ŒÄŽæÆ÷Öµ=%#x\n", reg.regdata);
  }
   
 µ×²ãÇý¶¯ioctlœÓ¿Ú£º
   struct reg_info {
  	unsigned long regaddr;
  	unsigned long regadata;
  };
  
  #define REG_WRITE	0x100001 //ÐŽŒÄŽæÆ÷
  #define REG_READ	0x100002 //¶ÁŒÄŽæÆ÷
  
 reg_ioctl(...) {
 	unsigned long *regbase;
 	struct reg_info reg;
 	copy_from_user(&reg, (struct reg_info*)arg, 8);	
 	regbase = ioremap(reg.regaddr, 4);
 	switch(cmd) {
 		case REG_WRITE:
 		*regbase = reg.regdata;
 		break;
 		case REG_READ:
 		reg.regdata = *regbase;
 		copy_to_user((struct reg_info *)arg, &reg, 8);
 		break;
 	}
 	iounmap(regbase);
 }
 
 ŒìÑé£ºÀûÓÃŒÄŽæÆ÷±àŒ­Æ÷ÈíŒþ¿ª¹Ø·äÃùÆ÷
   	
-----------------------------------------------------------------------
»Ø¹Ë£º
1.linuxÄÚºËµÈŽý¶ÓÁÐ±à³Ì·œ·š2
  ¹€×÷¶ÓÁÐ£ºµ×°ë²¿Ò»ÖÖÊµÏÖ·œ·š,ÑÓºóÖŽÐÐµÄÒ»ÖÖÊÖ¶Î
  	    ÑÓºóŽŠÀíº¯Êý¹€×÷ÔÚœø³ÌÉÏÏÂÎÄ,¿ÉÒÔÐÝÃß²Ù×÷
  µÈŽý¶ÓÁÐ£ºÊµÏÖœø³ÌÔÚÄÚºËÖÐËæÊ±ËæµØÐÝÃß,ËæÊ±ËæµØ»œÐÑ
  ±à³ÌÊµÏÖÁœÖÖÐÎÊœ£º
  ·œÊœ1£º
  1.¶šÒå³õÊŒ»¯µÈŽý¶ÓÁÐÍ·
  2.¶šÒå³õÊŒ»¯×°ÔØÐÝÃßœø³ÌµÄÈÝÆ÷
  3.ÌíŒÓ
  4.ÉèÖÃÎªÐÝÃß×ŽÌ¬
  5.œøÈëÕæÕýµÄÐÝÃß£¬µÈŽý±»»œÐÑ
  6.Ò»µ©±»»œÐÑ,ÉèÖÃÎªÔËÐÐ,ÒÆ³ý
  7.ÅÐ¶Ï»œÐÑµÄÔ­Òò
  8.ÔÚÄ³žöµØ·œœøÐÐ»œÐÑ,Ò»°ãÔÚÖÐ¶ÏŽŠÀíº¯ÊýÖÐ»œÐÑ
  ·œÊœ2£º
  1.¶šÒå³õÊŒ»¯µÈŽý¶ÓÁÐÍ·
  2.Ö±œÓœøÈëÐÝÃß
  3.ÔÚÄ³žöµØ·œœøÐÐ»œÐÑ,Ò»°ãÔÚÖÐ¶ÏŽŠÀíº¯ÊýÖÐ»œÐÑ
  4.×¢Òâ,±à³Ì¿ÚŸ÷£º»œÐÑÇ°ÉèÖÃÎªÕæ;»œÐÑÒÔºóÉèÖÃÎªŒÙ
    
2.linuxÄÚºËÄÚŽæ·ÖÅäÏà¹ØÄÚÈÝ
  2.1.linuxÄÚºË1GÐéÄâÄÚŽæµÄ»®·Ö
  »®·ÖµÄ±ŸÖÊÄ¿µÄ£ºÒ»·œÃæÈÃÄÚºË·ÃÎÊµœËùÓÐµÄÎïÀíµØÖ·
  		  ÁíÒ»·œÃæÈÃÄÚºËµÄÄÚŽæ·ÃÎÊÐ§¹ûÌážß
  
  2.2.linuxÄÚºËÄÚŽæ·ÖÅäµÄ·œ·š
  kmalloc/kfree
  __get_free_pages/free_pages
  	×¢Òâ£ºGFP_KERNEL/GFP_ATOMIC  	
  vmalloc/vfree
  Æô¶¯²ÎÊýÌíŒÓvmalloc=?
  Æô¶¯²ÎÊýÌíŒÓmem=?
  
  2.3.linuxÄÚºËµØÖ·Ó³ÉäµÄº¯Êý:ioremap
  Ã÷È·£ºÈíŒþÒ»ÂÉ²»ÔÊÐíÖ±œÓ·ÃÎÊÓ²ŒþÍâÉèµÄÎïÀíµØÖ·
  ÎÊ£ºÈçºÎœ«ÍâÉèµÄÎïÀíµØÖ·Ó³ÉäµœÄÚºËµÄÐéÄâµØÖ·ÉÏ£¿
  Žð£ºioremap

3.ÎÊ£ºÈçºÎœ«ÍâÉèµÄÎïÀíµØÖ·Ó³ÉäµœÓÃ»§¿ÕŒäµÄÐéÄâµØÖ·ÉÏÄØ£¿
      Èç¹ûÒ»µ©Íê³ÉÕâÖÖÓ³Éä,œ«ÀŽÓÃ»§ÓŠÓÃ³ÌÐòÖ»ÐèÒªÔÚÓÃ»§
      ¿ÕŒä·ÃÎÊÓ³ÉäµÄÓÃ»§ÐéÄâµØÖ·ŸÍÊÇÔÚ·ÃÎÊÊµŒÊµÄÓ²ŒþÎïÀíµØÖ·£¿
      Ò²ŸÍÊÇÔ­ÏÈÇý¶¯ÖÐµÄÕâÐ©ŽúÂë£º
      *gpiocon &= ~((0xff << 12)); //gpioconŽËÊ±ŸÍÊÇÓÃ»§ÐéÄâµØÖ·
      ...
      ÕâÐ©ŽúÂë¶ŒÓŠžÃÔÚÓŠÓÃ³ÌÐòÖÐÍê³É£¡
  Žð£ºÀûÓÃmmap
  
  3.1.»ØÒä£ºÓŠÓÃ³ÌÐòmmapÏµÍ³µ÷ÓÃº¯ÊýµÄÊ¹ÓÃ£º
  void *addr;
  int fd = open("a.txt", O_RDWR);
  
  addr = mmap(0, 0x1000, PROT_READ|PROT_WRITE,
  		MAP_SHARED, fd ,0);
  ËµÃ÷£º
  ¹ŠÄÜ£ºœ«ÎÄŒþa.txtÓ³Éäµœµ±Ç°œø³ÌµÄ3GÐéÄâÄÚŽæµÄMMAPÄÚŽæÓ³ÉäÇøÖÐµÄ
  Ä³¿éÐéÄâÄÚŽæÉÏ,Ò»µ©Íê³ÉÓ³Éä,œ«ÀŽ·ÃÎÊÓ³ÉäµÄÓÃ»§ÐéÄâÄÚŽæŸÍÊÇ
  ÔÚ·ÃÎÊÊµŒÊµÄÎÄŒþ£»
  Ã÷È·£º
  "ÎÄŒþ"£ºÌ«³éÏó,ÎÄŒþÊµŒÊŽú±íµÄÊÇÒ»žöÓ²ŒþÉè±ž(Ó²ÅÌ),Íš³£Ëµ
  ·ÃÎÊÎÄŒþ,ÆäËûŸÍÊÇÔÚËµ·ÃÎÊÓ²ÅÌµÄÎïÀíŽæŽ¢µØÖ·¿ÕŒä,ÓÉÓÚlinuxÏµÍ³
  ²»ÔÊÐíÖ±œÓ·ÃÎÊÓ²ÅÌµÄÎïÀíµØÖ·,ÐèÒªœøÐÐÓ³Éä,ÀûÓÃmmapŸÍÄÜ¹»
  œ«Ó²ÅÌµÄÎïÀíµØÖ·Ó³ÉäµœÓÃ»§µÄÐéÄâµØÖ·ÉÏ,œ«ÀŽ·ÃÎÊÓ³ÉäµÄÓÃ»§
  ÐéÄâµØÖ·ŸÍÊÇÔÚ·ÃÎÊÊµŒÊµÄÓ²ÅÌÎïÀíµØÖ·
  
  µÚÒ»žö²ÎÊý0:ÈÃÄÚºË°ïÄãÔÚMMAPÄÚŽæÓ³ÉäÇøÖÐÕÒÒ»¿é¿ÕÏÐµÄÐéÄâÄÚŽæ
              ÓÃÀŽÓ³ÉäÍâÉèµÄÎïÀíµØÖ·
      
  µÚ¶þžö²ÎÊý0x1000:ÒªÓ³ÉäµÄÓÃ»§ÐéÄâÄÚŽæÇøÓòµÄŽóÐ¡
                   Ò»°ãÎªÒ³ÃæŽóÐ¡µÄÕûÊý±¶
  µÚÈýžö²ÎÊýPROT_READ|PROT_WRITE:œ«ÀŽžøÕâ¿éÐéÄâÄÚŽæÉèÖÃÒ»žö·ÃÎÊÈšÏÞ
  ...
  ·µ»ØÖµaddr£º±£ŽæµÄŸÍÊÇÄÚŽæÓ³ÉäÇøÓòµÄÊ×µØÖ·
  
  3.2.mmapÏµÍ³µ÷ÓÃµÄ¹ý³Ì×öÁËÄÄÐ©¹€×÷£º
  1.µ±ÓŠÓÃ³ÌÐòµ÷ÓÃmmapÏµÍ³µ÷ÓÃº¯Êý
  2.Ê×ÏÈµ÷ÓÃµœC¿âµÄmmapº¯ÊýµÄ¶šÒå
  3.C¿âµÄmmapº¯Êýœ«×öÁœŒþÊÂ£º
    1.±£ŽæmmapÏµÍ³µ÷ÓÃºÅµœR7ŒÄŽæÆ÷
    2.µ÷ÓÃsvcÖžÁîŽ¥·¢ÈíÖÐ¶ÏÒì³£
      ÖÁŽËœø³ÌÓÉÓÃ»§Ì¬ÏÝÈëÄÚºËÌ¬
  4.œøÈëÄÚºËµÄÈíÖÐ¶ÏŽŠÀíµÄÈë¿Ú,×öÁœŒþÊÂ£º
    1.ŽÓR7ŒÄŽæÆ÷È¡³öÖ®Ç°±£ŽæµÄÏµÍ³µ÷ÓÃºÅ
    2.ÒÔÏµÍ³µ÷ÓÃºÅÎªÏÂ±êÔÚÄÚºËµÄÏµÍ³µ÷ÓÃ±íÖÐ
    ÕÒµœ¶ÔÓŠµÄÄÚºËº¯Êýsys_mmap
    µ÷ÓÃŽËº¯Êý£»
  5.ÄÚºËµÄsys_mmapÍ¬Ñù×öÈýŒþÊÂ£º
    1.ÄÚºË»áÔÚµ±Ç°œø³ÌµÄ3GµÄMMAPÄÚŽæÓ³ÉäÇøÖÐÕÒÒ»¿é
      ¿ÕÏÐµÄÐéÄâÄÚŽæÇøÓòÀŽÓ³ÉäÓ²ŒþµÄÎïÀíµØÖ·
    2.Ò»µ©ÄÚºËÕÒµœÁË¿ÕÏÐÄÚŽæÇøÓò,ÄÚºËÓÃstruct vm_area_struct
      œá¹¹Ìå°ïÄãŽŽœšÒ»žö¶ÔÏóÀŽÃèÊöÕâ¿é¿ÕÏÐÄÚŽæÇøÓòµÄÊôÐÔ(ÆðÊŒµØÖ·,ŽóÐ¡,·ÃÎÊÈšÏÞµÈ)
      struct vm_area_struct {
      	unsigned long vm_start;//¿ÕÏÐÐéÄâÄÚŽæÇøÓòµÄÆðÊŒµØÖ·
      	unsigned long vm_end;//œáÊøµØÖ·
      	pgprot_t vm_page_prot;//·ÃÎÊÈšÏÞ
      	unsigned long vm_pgoff;	//Æ«ÒÆÁ¿
      	...
      };
      ×Üœá£ºÓŠÓÃ³ÌÐòµÄmmapµÄ·µ»ØÖµaddrŸÍÊÇvm_start
            ŽËÊýŸÝœá¹¹¶ÔÓŠµÄ¶ÔÏóÓÉÄÚºËŽŽœš
    3.×îºóÄÚºËµÄsys_mmapµ÷ÓÃµ×²ãÇý¶¯µÄmmapœÓ¿Ú,ÇÐŒÇ²¢ÇÒ
      ÄÚºËœ«ŽŽœšµÄvm_area_structœá¹¹Ìå¶ÔÏóÖžÕëŽ«µÝžøµ×²ãÇý¶¯
      µÄmmapœÓ¿Ú,µ×²ãÇý¶¯µÄmmapœÓ¿ÚÍš¹ý²ÎÊý»ñÈ¡¿ÕÏÐÐéÄâÄÚŽæ
      ÇøÓòµÄÊôÐÔ£¡        
   
   6.µ×²ãÇý¶¯µÄmmapœÓ¿Úº¯ÊýÖ»×öœö×÷Ò»ŒþÊÂ,œ«ÒÑÖªµÄ¿ÕÏÐÐéÄâÄÚŽæ
   ºÍÍâÉèµÄÎïÀíÄÚŽæœšÒéÓ³ÉäŒŽ¿É,Ò»µ©œšÒéÓ³Éä,œ«ÀŽ¶ÔÓ²ŒþµÄ·ÃÎÊ
   ¹ý³Ì¶ŒÊÇÔÚÓŠÓÃ³ÌÐòÖÐÍê³É£¡
   µ×²ãÇý¶¯mmapœÓ¿ÚµÄœÇÉ«ÀàËÆ¡°ÃœÆÅ¡±,Ö»žºÔðÓ³Éä(Ç£Ïß),
   ŸßÌåµÄÓ²Œþ·ÃÎÊ²Ù×÷žúmmapÃ»ÓÐÈÎºÎ¹ØÏµ£¡
   
   7.µ×²ãÇý¶¯mmapœÓ¿Ú
   struct file_operations {
   	int (*mmap)(struct file *file, 
   			struct vm_area_struct *vma)
   };
   ¹ŠÄÜ£º
   ŽËœÓ¿Úº¯ÊýÖ»×öœö×÷Ò»ŒþÊÂ£ºœ«ÒÑÖªµÄÓÃ»§ÐéÄâµØÖ·ºÍÒÑÖªµÄ
                            ÎïÀíµØÖ·œšÁ¢Ó³Éä
   ²ÎÊý£º
   file:ÎÄŒþÖžÕë
   vma:ÖžÏòÄÚºËÃèÊö¿ÕÏÐÐéÄâÄÚŽæÇøÓòµÄÊôÐÔ¶ÔÏó   
       vmaÖžÏòµÄ¶ÔÏóÓÉÄÚºËŽŽœš
       ¶ÔÏóÃèÊöÄÚºËÕÒµœµÄ¿ÕÏÐÓÃ»§ÐéÄâÄÚŽæÇøÓòµÄÊôÐÔ
                            
   µ×²ãÇý¶¯mmapœÓ¿ÚÖ»Ðèµ÷ÓÃÒ»ÏÂº¯ÊýŒŽ¿ÉÍê³É×îÖÕµÄÓ³Éä£º
   int remap_pfn_range(struct vm_area_struct *vma, 
   			unsigned long from,
			unsigned long to, 
			unsigned long size, 
			pgprot_t prot); 
  ¹ŠÄÜ£ºœ«ÒÑÖªµÄÓÃ»§ÐéÄâµØÖ·ºÍÒÑÖªµÄÎïÀíµØÖ·œøÐÐÓ³Éä
  ²ÎÊý£º
  vma: ÖžÏòÄÚºËÃèÊö¿ÕÏÐÐéÄâÄÚŽæÇøÓòµÄÊôÐÔ¶ÔÏó                      
  from:ÒÑÖªÒªÓ³ÉäµÄÓÃ»§ÐéÄâµÄÆðÊŒµØÖ·vm_start
  to:ÒÑÖªÒªÓ³ÉäµÄÎïÀíµØÖ·,×¢ÒâÒªœ«ÎïÀíµØÖ·>>12
  size:Ó³ÉäµÄÓÃ»§ÐéÄâÄÚŽæµÄŽóÐ¡
  prot£ºÓÃ»§ÐéÄâÄÚŽæÇøÓòµÄÊôÐÔ		    
  
  ÇÐŒÇÇÐŒÇ£ºmmapµØÖ·Ó³ÉäÊ±,µØÖ·(²»¹ÜÊÇÓÃ»§ÐéÄâµØÖ·»¹ÊÇÎïÀíµØÖ·)
  	    ±ØÐëÊÇÒ³ÃæŽóÐ¡µÄÕûÊý±¶£¡
  ÀýÈç£º
  GPC1CON:0xE0200080
  GPC1DATA:0xE0200084
  ×¢Òâ£º²»ÄÜÄÃ0xE0200080»òÕß0xE0200084È¥×öµØÖ·Ó³Éä,ÕâÁœžöµØÖ·
  ²»ÊÇÒ³ÃæŽóÐ¡µÄÕûÊý±¶£¡ËùÒÔÄÃ0xE0200000×öµØÖ·Ó³ÉäŒŽ¿É£º
  ÎïÀíµØÖ·        ÓÃ»§ÐéÄâµØÖ·
  0xE0200000      vm_start
  0xE0200080      vm_start + 0x80
  0xE0200084      vm_start + 0x84
  
  °žÀý£ºÀûÓÃmmapÊµÏÖLEDÇý¶¯
  
  ÇÐŒÇ£ºÀûÓÃmmapœøÐÐGPIO²Ù×÷(ÊäÈëºÍÊä³ö²Ù×÷Ê±),°Ñcache¹Ø±Õ
  vma->vm_page_prot = pgprot_noncached(vma->vm_page_prot);

**************************************************************
3.linuxÄÚºË·ÖÀëËŒÏë
  3.1.°žÀý£ºœ«TPAD¿ª·¢°åµÄLED1,LED2¶ÔÓŠµÄGPIOžü»»³ÉGPF1_4,GPF1_5
        ²¢ÇÒÊµÏÖÆäÇý¶¯³ÌÐò
  ·ÖÎö£º
  Ã÷È·£ºÒ»žöÍêÕûµÄÓ²ŒþÉè±žÇý¶¯±ØÈ»°üº¬ÁœžöÄÚÈÝ£º
  	Ž¿Ó²ŒþÐÅÏ¢ºÍŽ¿ÈíŒþÐÅÏ¢(ÈíŒþ²Ù×÷Ó²Œþ)
  Èç¹ûÒªÊµÏÖÒÔÉÏÇý¶¯,Ö»Ðèœ«×òÌìÀûÓÃioremapÊµÏÖµÄLEDÇý¶¯žÄÔìŒŽ¿É
  ·ÖÎöžÄ¶¯µÄ²¿·Ö£»
  Ô­ÏÈ£º
  LED1->GPC1_3
  LED2->GPC1_4
  0xE0200080,0xE0200084
  ÏÖÔÚ
  LED1->GPF1_4
  LED2->GPF1_5
  0xE020.... 0xE020....
  
  ×Üœá£º
  1.Èç¹ûÊÇÓ²Œþ·¢Éú±ä»¯,Ö®Ç°µÄLEDÇý¶¯ÐÞžÄµÄ²¿·Ö»¹ÊÇÂù¶à
  2.¿ÉÒÔ²ÉÓÃCµÄ#defineÀŽÓÅ»¯ŽËÇý¶¯,µ«ÊÇ#define²»ÄÜžøÓ²Œþ
    ÌíŒÓ¶îÍâµÄÊôÐÔ
  
  3.ÎÊ£ºÈçºÎÈÃÕâžöLEDÇý¶¯ŸßÓÐžüºÃµÄ¿ÉÒÆÖ²ÐÔÄØ(Èç¹ûœ«ÀŽœöœö
  ÊÇÓ²Œþ·¢Éú±ä»¯,Ö»ÐèÐÞžÄÓ²ŒþÐÅÏ¢,ÈíŒþÒ»µ©ÐŽºÃ,ŸÍÎÞÐèžÄ¶¯,
  ÉõÖÁ¶Œ²»ÓÃÈ¥¿Ž)
    Žð£º²ÉÓÃlinuxÄÚºËµÄ·ÖÀëËŒÏë
  
  3.2.linuxÄÚºË·ÖÀëËŒÏë
  linuxÄÚºË·ÖÀëËŒÏëŸÍÊÇœ«Ò»žöÍêÕûµÄÓ²ŒþÇý¶¯µÄŽ¿Ó²ŒþÐÅÏ¢ºÍ
  Ž¿ÈíŒþÐÅÏ¢³¹µ×·Ö¿ª,Ò»µ©Çý¶¯µÄÈíŒþ²¿·ÖÐŽºÃ,œ«ÀŽÎÞÐèÔÚžÄ¶¯£¬
  Ó²Œþ±ä»¯,Ö»ÐèÐÞžÄÓ²ŒþÐÅÏ¢ŒŽ¿É,œ«ÀŽÇý¶¯¿ª·¢ÕßµÄÖØÐÄ·ÅÔÚÓ²Œþ
  ²¿·ÖŒŽ¿É.
  
  linuxÄÚºË·ÖÀëËŒÏëµÄÊµÏÖ»ùÓÚplatform»úÖÆ
  
  3.3.linuxÄÚºËµÄplatform»úÖÆ
  »úÖÆÊµÏÖÔ­Àí£º²ÎŒûPPT
  
  3.4.linuxÉè±žÇý¶¯²ÉÓÃplatform»úÖÆÊµÏÖ,Çý¶¯¿ª·¢ÕßÖ»Ðè¹Ø×¢
  ÁœžöÊýŸÝœá¹¹£º
  struct platform_device
  struct platform_driver
  ÎÊ£ºÈçºÎÊ¹ÓÃ£¿
  
  1.struct platform_deviceµÄÊ¹ÓÃ²Ù×÷²œÖè£º
    struct platform_device {
    	const char	* name;
	int		id;
	u32		num_resources;
	struct resource	* resource;
	...
    }; 
    ¹ŠÄÜ£ºÃèÊöÓ²ŒþÍâÉèµÄŽ¿Ó²ŒþÐÅÏ¢
    ³ÉÔ±ËµÃ÷£º
    name:ÃèÊöÓ²ŒþœÚµãµÄÃû³Æ,œ«ÀŽÓÃÓÚÆ¥Åä
    id£ºÓ²ŒþœÚµãµÄ±àºÅ,Èç¹ûdevÁŽ±íÖÐœöÓÐÒ»žöÓ²ŒþœÚµã,id=-1
        Èç¹ûdevÁŽ±íÉÏÓÐÍ¬ÃûµÄ¶àžöÓ²ŒþœÚµã,id=0,1,2...
    resource:×°ÔØŽ¿Ó²ŒþÐÅÏ¢
    	     struct resource {
    	     	unsigned long start;
		unsigned long end;
		unsigned long flags;
		...
    	     };    
    	     ¹ŠÄÜ£ºÃèÊöŽ¿Ó²ŒþÐÅÏ¢
    	     start:Ó²ŒþµÄÆðÊŒÐÅÏ¢
    	     end:Ó²ŒþµÄœáÊøÐÅÏ¢
    	     flags:Ó²ŒþµÄÀàÐÍ£º
    	     	   IORESOURCE_MEM£ºµØÖ·ÀàÐÅÏ¢
    	     	   IORESOURCE_IRQ: IOÀàÐÅÏ¢
    num_resources:Ž¿Ó²ŒþÐÅÏ¢¶ÔÏóµÄžöÊý
    		  
    ÅäÌ×º¯Êý£º
    int platform_device_register(&Ó²ŒþœÚµã¶ÔÏó);
    ¹ŠÄÜ£º×¢²áÓ²ŒþœÚµãµœdevÁŽ±í
    1.ÌíŒÓœÚµãµœdevÁŽ±í
    2.ÄÚºË°ïÄã±éÀúdrvÁŽ±í,È¡³öÃ¿Ò»žöÈíŒþœÚµãœøÐÐÆ¥Åä
    3.Ò»µ©Æ¥Åä³É¹Š,ÄÚºËµ÷ÓÃÈíŒþœÚµãµÄprobeº¯Êý
    4.Ë³±ã°ÑÆ¥Åä³É¹ŠµÄÓ²ŒþœÚµãµÄÊ×µØÖ·žøprobeº¯Êý
      Íê³ÉÓ²ŒþºÍÈíŒþµÄÔÙŽÎœáºÏ
      
    void platform_device_unregister(&Ó²ŒþœÚµã¶ÔÏó);
    ¹ŠÄÜ£ºœ«Ó²ŒþœÚµãŽÓdevÁŽ±íÉÏÉŸ³ý
    	  ŽËÊ±ÄÚºË»áµ÷ÓÃremoveº¯Êý
    
  2.struct platform_driver
    struct platform_driver {
    	int (*probe)(struct platform_device *pdev);
	int (*remove)(struct platform_device *pdev);
	struct device_driver driver;
	...
    };
    ¹ŠÄÜ£ºÃèÊöÇý¶¯µÄŽ¿ÈíŒþÐÅÏ¢
    ³ÉÔ±£º
    probe:µ±Ó²ŒþºÍÈíŒþÆ¥Åä³É¹Š,ÄÚºËµ÷ÓÃŽËº¯Êý
          ÐÎ²ÎpdevÖžÏòÆ¥Åä³É¹ŠµÄÓ²ŒþœÚµã
          ×¢Òâ£ºËüÊÇ·ñ±»µ÷ÓÃÖÁ¹ØÖØÒª£¡Ö»ÓÐŽËº¯Êý±»µ÷ÓÃ
          Ò»žöÍê³ÉµÄÇý¶¯µ®Éú£¡
    remove£ºµ±Ð¶ÔØÈíŒþ»òÕßÓ²ŒþœÚµãÊ±,ÄÚºËµ÷ÓÃŽËº¯Êý
            ÐÎ²ÎpdevÖžÏòÆ¥Åä³É¹ŠµÄÓ²ŒþœÚµã
          ×¢Òâ£ºremoveºÍprobeÓÀÔ¶ÊÇËÀ¶ÔÍ·£¡
    
    driver£ºÖ»Ðè¹Ø×¢ÆäÖÐµÄname×Ö¶Î,œ«ÀŽÓÃÓÚÆ¥Åä
    
    ÅäÌ×º¯Êý£º
    int platform_driver_register(&ÈíŒþœÚµã¶ÔÏó);
    ¹ŠÄÜ£º×¢²áÈíŒþœÚµãµœdrvÁŽ±í
    1.ÌíŒÓœÚµãµœdrvÁŽ±í
    2.ÄÚºË°ïÄã±éÀúdevÁŽ±í,È¡³öÃ¿Ò»žöÓ²ŒþœÚµãœøÐÐÆ¥Åä
    3.Ò»µ©Æ¥Åä³É¹Š,ÄÚºËµ÷ÓÃÈíŒþœÚµãµÄprobeº¯Êý
    4.Ë³±ã°ÑÆ¥Åä³É¹ŠµÄÓ²ŒþœÚµãµÄÊ×µØÖ·žøprobeº¯Êý
      Íê³ÉÓ²ŒþºÍÈíŒþµÄÔÙŽÎœáºÏ
      
    void platform_driver_unregister(&ÈíŒþœÚµã¶ÔÏó);
    ¹ŠÄÜ£ºœ«ÈíŒþœÚµãŽÓdrvÁŽ±íÉÏÉŸ³ý
          ŽËÊ±ÄÚºË»áµ÷ÓÃremoveº¯Êý        
    
    °žÀý£ºÀûÓÃplatform»úÖÆÓÅ»¯LEDÇý¶¯
    ÊµÑé²œÖè£º
    cd /home/drivers/
    insmod led_drv.ko
    insmod led_dev.ko
    rmmod led_dev
    rmmod led_drv
    ...
    
    ÏîÄ¿ÊµÊ©£º
    project.docÎÄµµ
    žùŸÝÎÄµµŽÓÖÆ×÷ÎÄŒþÏµÍ³¿ªÊŒ
    ÄÚÈÝ£º
    ÖÆ×÷žùÎÄŒþÏµÍ³
    tslibÒÆÖ²
    QTÒÆÖ²
    
-----------------------------------------------------------------------
»Ø¹Ë£º
1.linuxÄÚºËmmap»úÖÆ
  Ä¿µÄ£ºœ«Ó²ŒþÍâÉèµÄÎïÀíµØÖ·Ó³ÉäµœÓÃ»§¿ÕŒäµÄÐéÄâµØÖ·ÉÏ
  
  ÄÚºËµÄsys_mmapËù×öµÄÄÚÈÝ£º
  1.°ïÄãÔÚMMAPÄÚŽæÓ³ÉäÇøÕÒÒ»¿é¿ÕÏÐµÄÐéÄâÄÚŽæÇøÓò,ÓÃÀŽÓ³ÉäÎïÀíµØÖ·
  2.Ò»µ©ÕÒµœ,ÄÚºËÓÃstruct vm_area_structÊýŸÝœá¹¹ÀŽÃèÊöÕâ¿é¿ÕÏÐµÄ
    ÐéÄâÄÚŽæÇøÓò,Æä¶ÔÏóÓÉÄÚºËŽŽœš
  3.ÄÚºËsys_mmap×îÖÕµ÷ÓÃµ×²ãÇý¶¯µÄmmapœÓ¿Ú,²¢ÇÒœ«ÃèÊö¿ÕÏÐµÄ
    ÐéÄâÄÚŽæÇøÓòµÄ¶ÔÏóµÄÊ×µØÖ·Ž«µÝžøÇý¶¯µÄmmapœÓ¿Ú
  
  µ×²ãÇý¶¯µÄmmapœö×÷Ö»×öÒ»ŒþÊÂ£ºÓ³Éä
  struct file_operations {
   int (*mmap)(struct file *file, struct vm_area_struct *vma)
  };//vmaÖžÕëÖžÏòµÄ¶ÔÏóÓÉÄÚºËŽŽœš,ÓÃÀŽÃèÊö¿ÕÏÐµÄÐéÄâÄÚŽæÇøÓò
  ÇÐŒÇ£ºÓ³ÉäÊ±,µØÖ·±ØÐëÊÇÒ³ÃæŽóÐ¡µÄÕûÊý±¶£¡
  
2.linuxÄÚºËplatform»úÖÆ
  ÊµÏÖlinuxÄÚºËµÄ·ÖÀëËŒÏë
  ÊµÏÖœ«Ó²ŒþºÍÈíŒþ³¹µ×·Ö¿ª
  Ò»µ©ÈíŒþÐŽºÃ,ÎÞÐèÔÚœøÐÐžÄ¶¯
  œ«ÀŽÖ»ÐèÒª¹Ø×¢Ó²Œþ²îÒìŒŽ¿É,œ«ÀŽÓ²ŒþÓÐËù±ä¶¯,Ö»ÐèžÄ¶¯Ó²Œþ²¿·Ö
  »­ÍŒ
  ×Üœá£º
  1.probeº¯ÊýÊÇ·ñ±»µ÷ÓÃÖÁ¹ØÖØÒª£¡
  2.Çý¶¯¿ª·¢ÕßÀûÓÃplatform»úÖÆÊµÏÖÉè±žÇý¶¯,Ö»¹Ø×¢ÁœžöÊýŸÝœá¹¹£º
    struct platform_device
    	.name Ïàµ±ÖØÒª
    	.id 
    	.resource
    		.start
    		.end
    		.flags
    		  IORESOURCE_MEM
    		  IORESOURCE_IRQ
        .num_resources
    struct platform_driver
    	.driver = {
    		.name Ïàµ±ÖØÒª
    	},
    	.probe Æ¥Åä³É¹ŠÄÚºËµ÷ÓÃ,ÐÎ²ÎÖžÏòÆ¥Åä³É¹ŠµÄÓ²ŒþÐÅÏ¢
    	.remove ÉŸ³ýÈíŒþ»òÕßÓ²ŒþœÚµãÄÚºËµ÷ÓÃ
    	
  3.Ê²ÃŽ±éÀú,Ê²ÃŽÆ¥Åä,Ê²ÃŽµ÷ÓÃ,Ê²ÃŽŽ«²Î¶ŒÊÇÓÉÄÚºËÍê³É£¡
  4.probeº¯ÊýÒ»°ãËù×öµÄ¹€×÷£º
    0.µ÷ÓÃŽú±íÒ»žöÍêÕûµÄÓ²ŒþÉè±žÇý¶¯²úÉú
    1.Íš¹ýÐÎ²Î»ñÈ¡Ó²ŒþÐÅÏ¢
      struct resource *platform_get_resource(
      		struct platform_device *pdev,
      		int flags;
      		int index;
      );
      º¯Êý¹ŠÄÜ£ºÍš¹ýprobeº¯ÊýµÄÐÎ²Îpdev»òÕßresourceÃèÊöÓ²ŒþÐÅÏ¢
      pdev:ÖžÏòÆ¥Åä³É¹ŠµÄÓ²ŒþÐÅÏ¢
      flags£ºÓ²ŒþÐÅÏ¢µÄÀàÐÍ
      	     IORESOURCE_MEM/IORESOURCE_IRQ
      index:Í¬Àà×ÊÔŽµÄÆ«ÒÆÁ¿
      ·µ»ØÖµ£º·µ»Ø»ñÈ¡µœµÄÓ²ŒþÐÅÏ¢µÄÊ×µØÖ·
      
    2.ŽŠÀí»ñÈ¡µœµÄÓ²ŒþÐÅÏ¢
      žÃÉêÇëµÄÉêÇë
      žÃ×¢²áµÄ×¢²á
      žÃÓ³ÉäµÄÓ³Éä
      žÃ³õÊŒ»¯µÄ³õÊŒ»¯
    3.×¢²áÓ²Œþ²Ù×÷œÓ¿Ú(×Ö·ûÉè±žÇý¶¯»òÕß»ìÔÓÉè±žÇý¶¯)
      .open
      .release
      .read
      .write
      .unlocked_ioctl
      .mmap
    
    removežúprobe¶Ô×ÅžÉ£¡

**********************************************************
3.I2C×ÜÏß(IIC×ÜÏß)
  ÃæÊÔÌâ£ºÌžÌž¶ÔI2C×ÜÏßÀíœâ
  3.1.I2C×ÜÏßµÄ¹ŠÄÜ
  ŒÆËã»úCPUºÍÍâÉèµÄÍšÐÅ·œÊœºÜ¶àÖÖ£º
  GPIO,ÀýÈçLED,°ŽŒü
  ×ÜÏß(µØÖ·ÏßÊýŸÝÏß),ÀýÈçÄÚŽæ,NorFlash,DM9000
  UART,ÀýÈçBT,GPS
  I2C,ÀýÈçÖØÁŠŽ«žÐÆ÷,Ž¥ÃþÆÁÐŸÆ¬
  Ò»ÏßÊœ,ÀýÈçDS18B20ÎÂ¶ÈŽ«žÐÆ÷
  SPI,ÀýÈçNorFlash
  µÈ
  I2C×ÜÏßÊÇCPUºÍÍâÉèÍšÐÅµÄÒ»ÖÖÊýŸÝŽ«Êä·œÊœ
  
  3.2.I2C×ÜÏßµÄ¶šÒå
  ÁœÏßÊœŽ®ÐÐ×ÜÏß
  œâÊÍ£º
  ¡°ÁœÏßÊœ¡±£ºCPUžúÍâÉèµÄÊýŸÝÍšÐÅÖ»Ðè2žùÐÅºÅÏß,·Ö±ðÊÇSCLÊ±ÖÓ¿ØÖÆÐÅºÅÏß
  	    ºÍSDAÊýŸÝÏß,»­ŒòÒªµÄÁ¬œÓÍŒ
  SDAÊýŸÝÏß£ºÓÃÀŽŽ«ÊäÊýŸÝ,CPUºÍÍâÉè¶Œ¿ÉÒÔ¿ØÖÆ,µ«ÊÇ²»ÄÜÍ¬Ê±
  	     ¿ØÖÆ,ÀýÈçCPUÏòÍâÉèÐŽÊýŸÝ,ÊýŸÝÏßÓÉCPU¿ØÖÆ
  	              CPUŽÓÍâÉè¶ÁÈ¡ÊýŸÝ,ÊýŸÝÏßÓÉÍâÉè¿ØÖÆ
  	     ÎÊ£ºÓÉÓÚÍâÉèµÄŽŠÀíËÙ¶ÈÔ¶Ô¶ÂýÓÚCPU,CPUºÍÍâÉèÈçºÎ
  	         ±£Ö€ÊýŸÝŽ«ÊäµÄÕý³£ÄØ£¿
  	     Žð£º¹ØŒü¿¿SCLÊ±ÖÓÏß 
  	     ×¢Òâ£ºI2C×ÜÏßÊýŸÝŽ«ÊäŽÓÊýŸÝµÄžßÎ»¿ªÊŒ£¡
  	             
  SCLÊ±ÖÓÏß£ºÍ¬²œË«·œµÄÊýŸÝŽ«Êä,±£Ö€ÊýŸÝŽ«ÊäÕý³££¬Ö»ÄÜÓÉCPU¿ØÖÆ
             ÀýÈç£ºCPUÔÚSCLÎªžßµçÆœÊ±,œ«ÊýŸÝ·ÅµœÊýŸÝÏßÉÏ
                   Éè±žŸÍÔÚÍ¬ÖÜÆÚµÄSCLÎªµÍµçÆœÊ±,ŽÓÊýŸÝÏßÉÏ¶ÁÈ¡ÊýŸÝ
                   SCLÎªµÍµçÆœÊ±,ÊýŸÝÏßÉÏµÄÊýŸÝ±£³ÖÎÈ¶š²»±ä£¡
  
  ¡°Ž®ÐÐ¡±£ºCPUºÍÍâÉèµÄÊýŸÝÍšÐÅÊÇÒ»žöÊ±ÖÓÖÜÆÚŽ«Êä1žöbitÎ»                  
  ¡°×ÜÏß¡±: CPUºÍÍâÉèÍšÐÅµÄÁœžùÐÅºÅÏßÉÏ¿ÉÒÔ¹ÒœÓ¶àžöÍâÉè
          »­³öŒòÒªµÄÁ¬œÓÍŒ
  ×¢Òâ£ºSDAºÍSCL¶Œ»áÁ¬œÓÒ»žöÉÏÀ­µç×è,Ä¬ÈÏµçÆœ¶ŒÎªžßµçÆœ£¡
  
  ÎÊ£ºCPUÈçºÎÕÒµœ×ÜÏßÉÏÒª·ÃÎÊµÄÄ³žöÍâÉè£¿
  ÎÊ£ºÈç¹ûCPUÕÒµœÕâžöÍâÉè,CPUÈçºÎÍš¹ýÁœžùÐÅºÅÏßºÍÍâÉèÍšÐÅÄØ£¿
  ÎÊ£ºSDAºÍSCLÈçºÎŽîÅäÊ¹ÓÃÄØ£¿
  Žð£ºŽð°žÔÚI2C×ÜÏßŽ«ÊäÐ­ÒéÖÐ
  
  3.3.I2C×ÜÏßÐ­ÒéÏà¹ØžÅÄî
  CPU=Ö÷Éè±ž=master
  ÍâÉè=slave
  MSB:žßÎ»
  LSB:µÍÎ»
  
  STARTÐÅºÅ£ºÓÖ³ÆÆðÊŒÐÅºÅ,Ã¿µ±CPUÒª·ÃÎÊ×ÜÏßÉÏÄ³žöÍâÉè,Ê×ÏÈCPUÏò×ÜÏß
             ·¢ËÍÒ»žöSTARTÐÅºÅ,ŽËÐÅºÅÖ»ÄÜÓÉCPU·¢Æð
             SCLÎªžßµçÆœ,SDAÓÉžßÏòµÍÌø±ä²úÉúSTARTÐÅºÅ
             ÀàËÆ¡°Í¬Ñ§ÃÇ,ÉÏ¿ÎÁË¡±
  STOPÐÅºÅ£ºÓÖ³ÆœáÊøÐÅºÅ,Ã¿µ±CPUÒªœáÊø¶ÔÄ³žöÍâÉèµÄ·ÃÎÊ,CPU
  	    Ö»ÐèÏò×ÜÏß·¢ËÍÒ»žöSTOPÐÅºÅŒŽ¿É,ŽËÐÅºÅÍ¬ÑùÖ»ÄÜÓÉCPU·¢Æð
  	    SCLÎªžßµçÆœ,SDAÓÉµÍÏòžßÌø±ä²úÉúSTOPÐÅºÅ
  	    ÀàËÆ¡°Í¬Ñ§ÃÇ,ÏÂ¿Î¡±
  	    »­ÍŒSTARTºÍSTOPÊ±ÐòÍŒ
  ¶ÁÐŽÎ»£ºÈç¹ûCPUÒª¶ÁÉè±ž,¶ÁÐŽÎ»=1;Èç¹ûCPUÒªÐŽÉè±ž,¶ÁÐŽÎ»=0
  Éè±žµØÖ·£ºÍ¬Ò»žöI2C×ÜÏßÉÏµÄÍâÉè¶ŒÓÐÒ»žöÎšÒ»µÄÉè±žµØÖ·(ÀàËÆÉí·ÝÖ€ºÅ)
            ±íÊŸÍâÉèÔÚ×ÜÏßÉÏµÄÎšÒ»ÐÔ
            Èç¹ûœ«ÀŽCPUÒª·ÃÎÊ×ÜÏßÉÏÄ³žöÍâÉè,CPUÖ»ÐèÏò×ÜÏß
            ·¢ËÍÕâžöÍâÉè¶ÔÓŠµÄÉè±žµØÖ·ŒŽ¿É
            ÀàËÆ¡°Ä³Ä³Í¬Ñ§,Çë»ØŽðÎÊÌâ¡±
            ÇÐŒÇ£ºÉè±žµØÖ·²»°üº¬¶ÁÐŽÎ»
            
            ¶ÁÉè±žµØÖ·=Éè±žµØÖ·<<1|1
            ÐŽÉè±žµØÖ·=Éè±žµØÖ·<<1|0
            
            ÎÊ£ºÍâÉèµÄÉè±žµØÖ·ÈçºÎÈ·¶š£¿
            Žð£º
            ÒÔLM77ÎÂ¶ÈŽ«žÐÆ÷ÎªÀýP8£º
            È·¶šLM77Éè±žµØÖ·=10010A1A0(A1A0¶ŒœÓµØ)=¡·
            1001000(žßÎ»²¹0)=01001000=0x48
            =>
            LM77µÄ£º
            ¶ÁÉè±žµØÖ·=0x48<<1 | 1
            ÐŽÉè±žµØÖ·=0x48<<1 | 0
            
            ÒÔAT24C02ŽæŽ¢Æ÷ÎªÀýP11:
            È·¶šAT24C02Éè±žµØÖ·=1010A2A1A0(A2A1A0¶ŒœÓµØ)=¡·
            1010000(žßÎ»²¹0)=01010000=0x50
            ¶ÁÉè±žµØÖ·=0x50<<1 | 1
            ÐŽÉè±žµØÖ·=0x50<<1 | 0
            
            ÒÔADP8860±³¹âµÆ¿ØÖÆÐŸÆ¬ÎªÀý£º
            0101010x=>
            Éè±žµØÖ·=0101010(È¥x,žßÎ»²¹0)=00101010=0x2A
            ¶ÁÉè±žµØÖ·=0x2A<<1 | 1
            ÐŽÉè±žµØÖ·=0x2A<<1 | 0
            
  ACKÐÅºÅ:ÓÖ³ÆÓŠŽðÐÅºÅ,±íÊŸCPUºÍÍâÉèµÄÍšÐÅ×ŽÌ¬
          µÍµçÆœÓÐÐ§
          ÀàËÆ¡°ÀÏÊŠ£¬ÎÒÔÚ¡±
  
  ×Üœá£º
  1.CPUÒªÏë·ÃÎÊ×ÜÏßÉÏÄ³žöÍâÉè,CPUÖ»ÐèÏò×ÜÏß·¢ËÍÕâžöÍâÉèµÄ
    Éè±žµØÖ·ŒŽ¿É
    I2C×ÜÏßÊýŸÝŽ«ÊäÒ»ÖÜÆÚÒ»bit,Ò»ŽÎÒ»×ÖœÚ
      
  ÎÊ£ºCPUÒ»µ©Íš¹ýÉè±žµØÖ·ÕÒµœÄ³žöÍâÉè,ÈçºÎÍš¹ýÁœžùÐÅºÅÏß
      ºÍÍâÉèœøÐÐÊýŸÝÍšÐÅÄØ£¿
  Žð£ºŽð°ž¶ŒÔÚÍâÉèµÄÐŸÆ¬ÊÖ²áÖÐ,ÖØµã¹Ø×¢ÆäÖÐµÄ²Ù×÷Ê±ÐòÍŒ
  ÒÔCPU¶ÁÈ¡LM77ÎÂ¶ÈŽ«žÐÆ÷2×ÖœÚÊýŸÝÎªÀýP12£º
  1.CPUÏò×ÜÏß·¢ËÍSTARTÐÅºÅ
  2.CPUÏò×ÜÏß·¢ËÍÍâÉèµÄÉè±žµØÖ·°üÀš¶ÁÐŽÎ»
  3.Èç¹ûÍâÉèŽæÔÚÓÚ×ÜÏßÉÏ,ÍâÉèÔÚµÚŸÅžöÊ±ÖÓÖÜÆÚ»ážøCPU·¢ËÍ
    Ò»žöACKÐÅºÅ,µÍµçÆœÓÐÐ§
  4.Éè±žÏòCPU·¢ËÍÁœ×ÖœÚÊýŸÝµÄžß×ÖœÚ
  5.CPU¶ÁÈ¡ÊýŸÝÒÔºó,CPUÍ¬ÑùÔÚµÚŸÅžöÊ±ÖÓÖÜÆÚžøÍâÉèÒ»žöÓÐÐ§µÄ
    ACKÐÅºÅ
  6.Éè±žŒÌÐøÏòCPU·¢ËÍÁœ×ÖœÚÊýŸÝµÄµÍ×ÖœÚ
  7.CPU¶ÁÈ¡ÊýŸÝÒÔºó,Ã»ÓÐÔÚµÚŸÅžöÊ±ÖÓÖÜÆÚžøÍâÉèÒ»žöÓÐÐ§µÄ
    ACKÐÅºÅ
  8.ÊýŸÝ¶ÁÈ¡Íê±Ï,CPUÏò×ÜÏß·¢ËÍSTOPÐÅºÅœáÊøŽËŽÎµÄÊýŸÝ¶ÁÈ¡²Ù×÷
  ±ßËµ±ß»­ÍŒ(¿ò¿òÈŠÈŠ)
  
  ÒÔAT24C02ŽæŽ¢Æ÷µÄ¶ÁÐŽÎªÀýP11£¬×ÖœÚÐŽÊ±ÐòÍŒ£º
  AT24C02ŽæŽ¢Æ÷ÌØÐÔ£º
  	ŽæŽ¢ÈÝÁ¿256×ÖœÚ
  	ÄÚ²¿µØÖ·±àÖ·£º0x00~0xff
  ÓÃ»§ÐèÇó£ºœ«ÊýŸÝ'A'ÐŽÈëµœAT24C02µÄÆ¬ÄÚµÄ0x10µØÖ·ŽæŽ¢¿ÕŒäÖÐ
            Ó²Œþ²Ù×÷Á÷³Ì£º
  1.CPUÏò×ÜÏß·¢ËÍSTARTÐÅºÅ
  2.CPUÏò×ÜÏß·¢ËÍÉè±žµØÖ·°üÀš¶ÁÐŽÎ»
  3.Èç¹ûÉè±žŽæÔÚÓÚ×ÜÏßÉÏ,Éè±žÔÚµÚŸÅžöÊ±ÖÓÖÜÆÚžøCPU·¢ËÍÒ»žö
    ÓÐÐ§µÄACKÐÅºÅ
  4.CPUÏòÉè±ž·¢ËÍÒª·ÃÎÊµÄÆ¬ÄÚµØÖ·0x10
  5.Éè±žœÓÊÕµœÁËCPUÒª·ÃÎÊµÄÆ¬ÄÚµØÖ·,Éè±žÍ¬ÑùÔÚµÚŸÅžöÊ±ÖÓ
    ÖÜÆÚžøCPUÒ»žöÓÐÐ§µÄACKÐÅºÅ
  6.CPU×îºóÏòÉè±ž·¢ËÍÒªÐŽÈëµÄÊýŸÝ'A'
  7.Éè±žœ«ÊýŸÝÐŽÈëµœÆ¬ÄÚ0x10µØÖ·ÒÔºó,Éè±žÍ¬ÑùÔÚµÚŸÅžöÊ±ÖÓ
    ÖÜÆÚžøCPUÒ»žöÓÐÐ§µÄACKÐÅºÅ
  8.CPUÏò×ÜÏß·¢ËÍSTOPœáÊøÊýŸÝµÄ²Ù×÷
  ±ßËµ±ß»­¿ò¿òÈŠÈŠÍŒ
  
  ÔÙÒÔCPU¶ÁÈ¡AT24C02ÈÎÒâÆ¬ÄÚµØÖ·ŽæŽ¢¿ÕŒäµÄÊýŸÝÎªÀýP2Ëæ»ú¶ÁÊÔÍŒ£º
  ŸßÌå²ÎŒûÊ±ÐòÍŒ
  
  ×îºóÒÔCPUÈÃHMC6352ÖžÄÏÕëŽ«žÐÆ÷œøÈëÐÝÃßÄ£ÊœÎªÀý£º
  1.CPU·¢ËÍSTARTÐÅºÅ
  2.CPU·¢ËÍÉè±žµØÖ·<<1|0
  3.Éè±žÈç¹ûŽæÔÚÓÚ×ÜÏßÉÏ,Éè±žÔÚµÚŸÅžöÊ±ÖÓÖÜÆÚžøCPU·¢ËÍÒ»žö
    ÓÐÐ§µÄACKÐÅºÅ
  4.CPUÏòÉè±ž·¢ËÍÃüÁî'S'=0x53,ÈÃÉè±žœøÈëÐÝÃßÄ£Êœ
  5.Éè±žœÓÊÕµœÃüÁîÒÔºó£¬Éè±žÔÚµÚŸÅžöÊ±ÖÓÖÜÆÚžøCPU·¢ËÍÒ»žö
    ÓÐÐ§µÄACKÐÅºÅ
  6.×îºóCPUÏò×ÜÏß·¢ËÍSTOPÐÅºÅœáÊø·ÃÎÊ
  ±ßËµ±ß»­ÈŠÈŠ¿ò¿òÍŒ
  
  ÇÐŒÇ£ºÈÎºÎÍâÉèµÄ·ÃÎÊ±ØÐëÑÏžñ°ŽÕÕÊ±ÐòÍŒœøÐÐ£¡£¡£¡
  
  ÎÊ£ºSDAºÍSCLÈçºÎŽîÅäÊ¹ÓÃÄØ£¿
  Žð£ºÒÔCPUÏòÉè±žÐŽÈëÊýŸÝÎªÀý£º
      CPUÓŠžÃÔÚSCLÎªµÍµçÆœµÄÊ±ºòœ«ÊýŸÝ·ÅµœÊýŸÝÏßÉÏ
      ÄÇÃŽÉè±žŸÍÓŠžÃÔÚSCLÍ¬ÖÜÆÚµÄžßµçÆœŽÓÊýŸÝÏßÉÏ¶ÁÈ¡ÊýŸÝ
      "µÍ·ÅžßÈ¡"
  Ò»¶šÒª»­³öÏàÓŠµÄÊ±ÐòÍŒ,ÒÔCPUÏòHMC6352·¢ËÍ¡®S¡¯ÎªÀýP4£º
  ¿ÉÒÔœö»­STARTÊ±Ðò,ÐŽ0,1Ê±ÐòŒŽ¿É
  
  »á»­²šÐÎ£¬œ«ÀŽÒ²»á·ÖÎöÊŸ²šÆ÷µÄ²šÐÎÍŒ£¡£¡£¡£¡
  
-----------------------------------------------------------------------
»Ø¹Ë£º
1.linuxÄÚºËplatform»úÖÆ
  Ä¿µÄ£ºœ«Ó²ŒþºÍÈíŒþ·ÖÀë
  Ò»žöÐéÄâ×ÜÏß£ºplatform_bus_type
  ÁœžöÁŽ±í£ºdevÁŽ±í(Ó²Œþ)ºÍdrvÁŽ±í(ÈíŒþ)
  ÁœžöÊýŸÝœá¹¹£º
  	struct platform_device
  		.name
  		.id
  		.resource
  		.num_resources
  		.dev
  			.release
  	struct platform_driver
  		.driver
  			.name
  		.probe
  			1.»ñÈ¡Ó²ŒþÐÅÏ¢
  				platform_get_resource
  			2.ŽŠÀíÓ²ŒþÐÅÏ¢
  			  4žöžÃ
  			3.×¢²áÓ²Œþ²Ù×÷œÓ¿Ú
  		.remove
  			¶Ô×ÅžÉ
   ËÄžöÅäÌ×º¯Êý
   platform_device_register
   platform_device_unregister
   platform_driver_register
   platform_driver_unregister
   ËÄžöÊ²ÃŽ¶ŒÊÇÓÉÄÚºËÀŽÍê³É	
   
   Ò»žö¹ØÐÄ£ºprobeº¯ÊýÊÇ·ñ±»µ÷ÓÃ
   
2.I2C×ÜÏß
  ÃæÊÔÌâ£ºÌžÌž¶ÔI2C×ÜÏßµÄÀíœâ
  2.1.I2C×ÜÏß¹ŠÄÜ
  2.2.I2CžÅÄî
  2.3.ÈýžöÎÊÌâ
  2.4.Ð­ÒéÉèŒÆžÅÄî
      START
      STOP
      Éè±žµØÖ·
      ¶ÁÐŽÎ»
      ACK
  2.5.·ÃÎÊ¹ý³Ì
      ŸÙÀý×Ó£ºÒÔCPUÏòAT24C02Æ¬ÄÚµØÖ·0x10ŽæŽ¢¿ÕŒäÐŽÈë×Ö·û'A'ÎªÀý
      œáÂÛ£ºÒ»ÇÐµÄ²Ù×÷¶ŒÊÇÔÚÐŸÆ¬ÊÖ²áµÄ²Ù×÷Ê±ÐòÍŒÖÐ
  2.6.ÅäºÏ
      »­³öÊ±ÐòÍŒ
      START Éè±žµØÖ·=0x50 W ACK
      
3.linuxÄÚºËI2CÇý¶¯¿ª·¢
  3.1.Ã÷È·I2C×ÜÏßÊµŒÊµÄÓ²Œþ²Ù×÷
  ÑÐŸ¿¶ÔÏó×ªÒÆ£º
  CPU·ÃÎÊÍâÉè
  ×ªÒÆµœCPU·ÃÎÊSDAºÍSCL
  ×ªÒÆµœCPU·ÃÎÊI2C¿ØÖÆÆ÷
  ×ªÒÆµœCPU·ÃÎÊI2C¿ØÖÆÆ÷¶ÔÓŠµÄŒÄŽæÆ÷
  
  3.2.linuxÄÚºËI2CÇý¶¯µÄ·ÖÀà
  I2C×ÜÏßÇý¶¯£º
  	¹ÜÀíµÄÓ²ŒþÊÇI2C¿ØÖÆÆ÷
  	ŽËÇý¶¯²Ù×÷I2C¿ØÖÆÆ÷×îÖÕ°ïÄã·¢ÆðSCLºÍSDAµÄÊ±Ðò
  	×¢Òâ£ºÏñSTART,ACK,¶ÁÐŽÎ»,STOPÕâÐ©¶ŒÊÇ±ê×ŒÐÅºÅ,I2C¿ØÖÆÆ÷
  	      ×Ô¶¯Íê³É,µ«ÊÇÉè±žµØÖ·,²Ù×÷µÄÐŸÆ¬µÄÆ¬ÄÚµØÖ·ºÍÆ¬ÄÚÊýŸÝ
  	      ¿ØÖÆÆ÷ÊÇ²»ÖªµÀµÄ,ÕâÐ©ÓÉI2CÉè±žÇý¶¯ÀŽžæËß
  	      I2C×ÜÏßÇý¶¯
  	×ÜÏßÇý¶¯ÓÉCPUÐŸÆ¬³§ŒÒÊµÏÖºÃ,Ö»ÐèÅäÖÃÄÚºËÖ§³ÖŒŽ¿É£º
  	cd /opt/kernel
  	make menuconfig
  	  Device Drivers->
  	  	I2C supports->
  	  		i2c hardware bus supports...-> //ÔÚŽË
  	  			<*> s3c2410 i2c ...      
  I2CÉè±žÇý¶¯£º
  	¹ÜÀíµÄÓ²ŒþÊÇI2CÍâÉè±ŸÉí
  	ÏñÉè±žµØÖ·,Æ¬ÄÚµØÖ·,Æ¬ÄÚÊýŸÝ¶ŒÊÇžú
  	ÍâÉèÏà¹Ø,I2CÉè±žÇý¶¯ÐèÒªœ«ÕâÐ©ÊýŸÝ
  	ÐÅÏ¢¶ªžøI2C×ÜÏßÇý¶¯,×îÖÕÍê³ÉÓ²ŒþSCL
  	ºÍSDAµÄÊ±ÐòŽ«Êä
  	I2CÇý¶¯¿ª·¢µÄÖØµã£¡
  	
  ÎÊ£ºÒÔÉÏÁœžöÇý¶¯ÈçºÎ¹ØÁªÄØ£¿
  
  3.3.linuxÄÚºËI2CÇý¶¯¿òŒÜ(·Ö²ãËŒÏë)
  ÀýÈç£ºÒÔCPUÏòAT24C02Æ¬ÄÚµØÖ·0x10ŽæŽ¢¿ÕŒäÐŽÈëÊýŸÝ'A'ÎªÀý£º
  
  ÓŠÓÃ²ã£º
        ×÷ÓÃ£ºŸÍÊÇÒª»ñÈ¡µœµ×²ãÓ²Œþœ«ÀŽÒª²Ù×÷µÄÊýŸÝÐÅÏ¢(Æ¬ÄÚµØÖ·ºÍÆ¬ÄÚÊýŸÝ)
  	struct at24c02_info {
  		unsigned char addr;
  		unsigned char data;
  	};	
  	struct at24c02_info at24c02;
  	at24c02.addr = 0x10;
  	at24c02.data = 'A';
  	//œ«ÓŠÓÃ²ãµÄÊýŸÝ¶ªžøI2CÉè±žÇý¶¯
  	ioctl(fd, AT24C02_WRITE, &at24c02);
 ----------------------------------------------------------
 I2CÉè±žÇý¶¯²ã£º
 	 ŽÓÓÃ»§»ñÈ¡Òª²Ù×÷µÄÊýŸÝÐÅÏ¢»òÕßœ«ÊýŸÝÐÅÏ¢¶ªžøÓÃ»§
 	 Í¬Ê±»¹Òªœ«ÊýŸÝÐÅÏ¢ÀûÓÃSMBUSœÓ¿Ú¶ªžøI2C×ÜÏßÇý¶¯
 	 »òÕßÀûÓÃSMBUSœÓ¿ÚŽÓI2C×ÜÏßÇý¶¯»ñÈ¡ÊýŸÝ
 	 at24c02_ioctl(file, cmd, arg) {
 	    struct at24c02_info at24c02;
 	    copy_from_user
 	    	œá¹û£º
 	    	at24c02.addr = 0x10
 	    	at24c02.data = 'A'
 	    switch ....
 	    	case AT24C02_WRITE: //ÐŽ
 	    	     I2CÉè±žÇý¶¯ÀûÓÃÄÚºËÌá¹©µÄSMBUSœÓ¿Úº¯Êý
 	    	     œ«ÕâÐ©ÊýŸÝÐÅÏ¢¶ªžøI2C×ÜÏßÇý¶¯£º
 	    	     smbus_xxxx(ÊýŸÝÐÅÏ¢);
 	    	break
 	 	
 	 }	
----------------------------------------------------------
SMBUSœÓ¿Ú²ã£º
	Á¬œÓI2CÉè±žÇý¶¯ºÍI2C×ÜÏßÇý¶¯
	ÇÅÁº×÷ÓÃ
	ÄÚºËÒÑŸ­ÊµÏÖ£¡
	smbus_xxx
	0x10
	'A'
----------------------------------------------------------
I2C×ÜÏßÇý¶¯²ã£º
	ÎšÒ»µÄ×÷ÓÃŸÍÊÇ²Ù×÷I2C¿ØÖÆÆ÷,Æô¶¯Ó²ŒþµÄ×îÖÕŽ«Êä
	Éè±žµØÖ·Í¬ÑùÓÉI2CÉè±žÇý¶¯ÀŽžæËß
	µ±È»Ž«ÊäµÄÊýŸÝÐÅÏ¢ÀŽ×ÔÓÃ»§0x10,'A'
----------------------------------------------------------
Ó²Œþ²ã£º	
	START->Éè±žµØÖ·|0->ACK->0x10->ACK->'A'->ACK->STOP

ÎÊ£ºlinuxÄÚºËI2CÉè±žÇý¶¯ÈçºÎ±àÐŽÄØ£¿
Žð£ºÍ¬Ñù²ÉÓÃ·ÖÀëËŒÏë(bus-device-drivers±à³ÌÄ£ÐÍ)
1.Ê×ÏÈÄÚºËÒÑŸ­¶šÒåºÃÁËÒ»žöÐéÄâ×ÜÏßœÐi2c_bus_type
  ÔÚÕâžö×ÜÏßÉÏÎ¬»€×ÅÁœžöÁŽ±ídevÁŽ±íºÍdrvÁŽ±í
2.devÁŽ±íÉÏÃ¿Ò»žöœÚµãÃèÊöµÄI2CÍâÉèµÄÓ²ŒþÐÅÏ¢,¶ÔÓŠµÄ
  ÊýŸÝœá¹¹Îªstruct i2c_client, Ã¿µ±ÌíŒÓÒ»žöI2CÍâÉèµÄÓ²ŒþÐÅÏ¢Ê±,
  Ö»ÐèÀûÓÃŽËÊýŸÝœá¹¹¶šÒå³õÊŒ»¯Ò»žö¶ÔÏó,ÌíŒÓµœdevÁŽ±íÒÔºó
  ÄÚºË»á°ïÄã±éÀúdrvÁŽ±í,È¡³ödrvÁŽ±íÉÏÃ¿Ò»žöÈíŒþÈíŒþžúÕâžö
  Ó²ŒþœÚµãœøÐÐÆ¥Åä(Æ¥ÅäÍš¹ýÄÚºËµ÷ÓÃ×ÜÏßÌá¹©µÄmatchº¯Êý,±ÈœÏ
  i2c_clientµÄnameºÍi2c_driverµÄid_tableµÄname)Èç¹ûÆ¥Åä³É¹Š
  ÄÚºËµ÷ÓÃÈíŒþœÚµãµÄprobeº¯Êý,²¢ÇÒ°ÑÆ¥Åä³É¹ŠµÄÓ²ŒþœÚµãµÄ
  Ê×µØÖ·žøprobeº¯Êý
3.drvÁŽ±íÉÏÃ¿Ò»žöœÚµãÃèÊöµÄI2CÍâÉèµÄÈíŒþÐÅÏ¢,¶ÔÓŠµÄ
  ÊýŸÝœá¹¹Îªstruct i2c_driver, Ã¿µ±ÌíŒÓÒ»žöI2CÍâÉèµÄÈíŒþÐÅÏ¢Ê±,
  Ö»ÐèÀûÓÃŽËÊýŸÝœá¹¹¶šÒå³õÊŒ»¯Ò»žö¶ÔÏó,ÌíŒÓµœdrvÁŽ±íÒÔºó
  ÄÚºË»á°ïÄã±éÀúdevÁŽ±í,È¡³ödevÁŽ±íÉÏÃ¿Ò»žöÓ²ŒþœÚµãžúÕâžö
  ÈíŒþœÚµãœøÐÐÆ¥Åä(Æ¥ÅäÍš¹ýÄÚºËµ÷ÓÃ×ÜÏßÌá¹©µÄmatchº¯Êý,±ÈœÏ
  i2c_clientµÄnameºÍi2c_driverµÄid_tableµÄname)Èç¹ûÆ¥Åä³É¹Š
  ÄÚºËµ÷ÓÃÈíŒþœÚµãµÄprobeº¯Êý,²¢ÇÒ°ÑÆ¥Åä³É¹ŠµÄÓ²ŒþœÚµãµÄ
  Ê×µØÖ·žøprobeº¯Êý 
  
×Üœá£ºÈç¹ûÒªÊµÏÖÒ»žöI2CÍâÉèµÄI2CÉè±žÇý¶¯Ö»Ðè¹Ø×¢ÁœžöÊýŸÝœá¹¹£º
struct i2c_client
struct i2c_driver

3.4.struct i2c_client
    struct i2c_client {
    	unsigned short addr;//Éè±žµØÖ·,œ«ÀŽÑ°ÕÒÍâÉè
    	char name[I2C_NAME_SIZE];//œ«ÀŽÓÃÓÚÆ¥Åä
    	int irq; //ÖÐ¶ÏºÅ
    	...
    };
    ¹ŠÄÜ£ºÃèÊöI2CÍâÉèµÄÓ²ŒþÐÅÏ¢
    ÇÐŒÇ£ºaddr,nameÁœžö³ÉÔ±±ØÐëÒªœøÐÐ³õÊŒ»¯£¡
    œáÂÛ£ºÇý¶¯¿ª·¢Õß²»»á×ÔŒºÈ¥ÄÃÕâžöœá¹¹ÌåÈ¥¶šÒå³õÊŒ»¯ºÍ×¢²á
          Ò»žöÓ²ŒþœÚµã¶ÔÏóµœÄÚºË,¶øÊÇÀûÓÃÒÔÏÂœá¹¹ÌåŒäœÓÍê³É
          ÒÔÉÏ²Ù×÷(ÓÃi2c_client¶šÒå³õÊŒ»¯×¢²á¶ÔÏó)
    
    ÉñÃØµÄÊýŸÝ»ú¹¹£º
    struct i2c_board_info {
    	char type[I2C_NAME_SIZE];
    	unsigned short	addr;
    	int irq;
    	...
    };   
    ¹ŠÄÜ£ºœ«ÀŽÇý¶¯¿ª·¢ÕßÓÃŽËÊýŸÝœá¹¹È¥¶šÒå³õÊŒ»¯×¢²á
          Ò»žöI2CÍâÉèµÄÓ²ŒþÐÅÏ¢µœÄÚºË,œ«ÀŽÄÚºË»ážùŸÝ
          ÄãÌá¹©µÄÓ²ŒþÐÅÏ¢,ÄÚºË»á°ïÄã¶šÒå³õÊŒ»¯ºÍ×¢²á
          Ò»žöi2c_clientÓ²ŒþœÚµã¶ÔÏóµœÄÚºËdevÁŽ±íÖÐ
    ³ÉÔ±£º
    type:Ó²ŒþÐÅÏ¢µÄÃû³Æ,œ«ÀŽÕâžö×Ö¶ÎµÄÄÚÈÝ»áž³Öµžø
         i2c_clientµÄname³ÉÔ±,ÓÃÓÚÆ¥Åä
    addr:I2CÍâÉèµÄÉè±žµØÖ·,œ«ÀŽÕâžö×Ö¶ÎµÄÄÚÈÝ»áž³Öµžø
         i2c_clientµÄaddr³ÉÔ±,ÓÃÓÚÕÒÄ³žöÍâÉè
    irq:I2CÍâÉèµÄÖÐ¶ÏºÅ,œ«ÀŽÕâžö×Ö¶ÎµÄÄÚÈÝ»áž³Öµžø
    	 i2c_clientµÄirq³ÉÔ±
    ÇÐŒÇ£ºtype,addr±ØÐëÒª³õÊŒ»¯£¡
    ÄÚºË¹ÄÀøÊ¹ÓÃI2C_BOARD_INFOºê¶Ôtype,addrœøÐÐ³õÊŒ»¯£¡
    ÀýÈç£ºI2C_BOARD_INFO("at24c02", 0x50)
    
    ÅäÌ×º¯Êý£º
    ×¢²ái2c_board_infoÃèÊöµÄÓ²ŒþÐÅÏ¢µœÄÚºËµÄº¯Êý£º
    int i2c_register_board_info(int busnum, 
    			const struct i2c_board_info *info,
    				int number)
    ¹ŠÄÜ:i2c_board_infoÃèÊöµÄÓ²ŒþÐÅÏ¢µœÄÚºË
    ²ÎÊý£º
    busnum:I2CÍâÉèËùÔÚµÄI2C×ÜÏß±àºÅ(ŽÓ0¿ªÊŒ),Íš¹ýÔ­ÀíÍŒÀŽ»ñÈ¡
    info:Ž«µÝ¶šÒå³õÊŒ»¯µÄI2CÍâÉèµÄÓ²ŒþÐÅÏ¢¶ÔÏóÊ×µØÖ·
    number:Ó²ŒþÐÅÏ¢µÄžöÊý
    œá¹û£ºœ«ÀŽÄÚºËžùŸÝÄã×¢²áµÄÓ²ŒþÐÅÏ¢,ÄÚºË»á°ïÄã¶šÒå³õÊŒ»¯
    ºÍ×¢²áÒ»žöi2c_client¶ÔÏóµœÄÚºËÖÐ
    ÇÐŒÇÇÐŒÇ£ºi2c_board_info¶šÒå³õÊŒ»¯ºÍ×¢²á²»ÄÜ²ÉÓÃinsmod
              ºÍrmmod,ŽËŽúÂë±ØÐë·ÅÔÚÆœÌšŽúÂëÖÐÍê³É£¡
    TPADµÄÆœÌšŽúÂë£ºarch/arm/mach-s5pv210/mach-cw210.c
    
    °žÀý£ºÏòÄÚºËÌíŒÓAT24C02µÄÓ²ŒþœÚµãµœÄÚºË
    ÊµÊ©²œÖè£º
    1.cd /opt/kernel
    2.vim arch/arm/mach-s5pv210/mach-cw210.c ÔÚÍ·ÎÄŒþµÄºóÃæÌíŒÓÈçÏÂÄÚÈÝ£º
      //¶šÒå³õÊŒ»¯AT24C02µÄÓ²ŒþÐÅÏ¢
      static struct i2c_board_info at24c02[] = {
	  {
		I2C_BOARD_INFO("at24c02", 0x50)
	  }
      };//"at24c02"œ«ÀŽÓÃÓÚÆ¥Åä,0x50±íÊŸÉè±žµØÖ·,ÓÃÓÚÑ°ÕÒÍâÉè
      
   3.vim arch/arm/mach-s5pv210/mach-cw210.c ÔÚÈÎºÎÒ»žöº¯ÊýÖÐµ÷ÓÃ
     Ò»ÏÂº¯ÊýÍê³É¶ÔI2CÍâÉèÓ²ŒþÐÅÏ¢µÄ×¢²á,ÍÆŒöÕÒµœ£º
     .init_machine	= smdkc110_machine_init, 
     ÕÒµœsmdkc110_machine_init,ÔÚŽËº¯ÊýÖÐµ÷ÓÃ£º
     i2c_register_board_info(0, at24c02, ARRAY_SIZE(at24c02));
     ±£ŽæÍË³ö
   4.make zImage 
     cp arch/arm/boot/zImage /tftpboot
   5.ÓÃÐÂÄÚºËÖØÆô¿ª·¢°å
     ÖÁŽËÄÚºËŸÍÓÐÁËAT24C02µÄÓ²ŒþÐÅÏ¢,ÄÚºËÒ²°ïÄã¶šÒå³õÊŒ»¯
     ×¢²áÒ»žöi2c_client,ŽËÊ±ŽË¿ÌËü»áŸ²Ÿ²µÈŽý×ÅÈíŒþœÚµãµÄµœÀŽ£¡
 
3.5.struct i2c_driver
    struct i2c_driver {
    	int (*probe)(struct i2c_client *client, 
    			const struct i2c_device_id *id);
	int (*remove)(struct i2c_client *client);
	const struct i2c_device_id *id_table;
	...
    };    
    ×÷ÓÃ£ºÃèÊöI2CÍâÉèµÄÈíŒþÐÅÏ¢
    id_table:I2CÍâÉèµÄ±êÊ¶,ÆäÖÐµÄnameÓÃÓÚÆ¥Åä
    	struct i2c_device_id {
    		char name[I2C_NAME_SIZE];//ÓÃÓÚÆ¥Åä
    		unsigned long data; //žøprobeº¯ÊýŽ«µÝµÄ²ÎÊý
    	};
    	ÀýÈç£º
    	static const struct i2c_device_id at24_id[] = {
		{ "at24c02", 0 },
		{ }
	};//"at24c02"œ«ÀŽÓÃÓÚÆ¥Åä
	
    probe:Æ¥Åä³É¹Š,ÄÚºËµ÷ÓÃŽËº¯Êý
          ÐÎ²ÎclientÖžÏòÆ¥Åä³É¹ŠµÄÓ²ŒþÐÅÏ¢
          idÖžÏòÇý¶¯×ÔŒº¶šÒå³õÊŒ»¯µÄi2c_device_id¶ÔÏó,ŸÍÊÇ
          at24_id
    remove£ºÐ¶ÔØÈíŒþœÚµã,ÄÚºËµ÷ÓÃŽËº¯Êý      
    
    ÅäÌ×º¯Êý£º
    i2c_add_driver(&ÈíŒþœÚµã¶ÔÏó); //×¢²á
    i2c_del_drier(&ÈíŒþœÚµã¶ÔÏó);  //Ð¶ÔØ

°žÀý£º±àÐŽTPADÉÏAT24C02ŽæŽ¢Æ÷µÄÈíŒþœÚµãŽúÂë
      ×¢Òâ£ºÇ°ÌáÊÇÄÚºËÒÑŸ­ÓÐÁËAT24C02µÄÓ²ŒþÐÅÏ¢
ÊµÊ©²œÖè£º
1.ŽÓftpÏÂÔØÔŽÂë
2.mkdir /opt/drivers/day12/
  cp at24c02_1 /opt/drivers/day12
  cd /opt/drivers/day12/at24c02_1 Ç±ÐÄÑÐŸ¿ŽúÂë
  make
  cp at24c02_drv.ko /opt/rootfs/home/drivers
¿ª·¢°å²âÊÔ£º
insmod /home/drivers/at24c02_drv.ko 
¹Û²ìÇý¶¯µÄprobeº¯ÊýÊÇ·ñ±»µ÷ÓÃ

rmmod at24c02_drv //¹Û²ìremoveº¯ÊýÊÇ·ñ±»µ÷ÓÃ    
      
°žÀý£º±àÐŽTPADÉÏAT24C02ŽæŽ¢Æ÷µÄÈíŒþœÚµãŽúÂë
      ×¢Òâ£ºÇ°ÌáÊÇÄÚºËÒÑŸ­ÓÐÁËAT24C02µÄÓ²ŒþÐÅÏ¢
ÊµÊ©²œÖè£º
1.ŽÓftpÏÂÔØÔŽÂë
2.mkdir /opt/drivers/day12/
  cp at24c02_2 /opt/drivers/day12
  cd /opt/drivers/day12/at24c02_2 
  Ç±ÐÄÑÐŸ¿at24c02_drv.c at24c02_test.c 
  make
  cp at24c02_drv.ko /opt/rootfs/home/drivers
  arm-linux-gcc -o at24c02_test at24c02_test.c 
  cp at24c02_test /opt/rootfs/home/drivers/
  
¿ª·¢°å²âÊÔ£º
insmod /home/drivers/at24c02_drv.ko 
ls /dev/at24c02 -lh
./at24c02_test             

SMBUSœÓ¿Úº¯ÊýµÄÊ¹ÓÃ²Ù×÷²œÖè£º
1.Ê×ÏÈŽò¿ªI2CÍâÉèµÄÐŸÆ¬ÊÖ²á,ÕÒµœ¶ÔÓŠµÄ²Ù×÷Ê±ÐòÍŒ
2.È»ºóŽò¿ªÄÚºË¹ØÓÚsmbusœÓ¿ÚµÄËµÃ÷ÎÄµµ£º
  ÄÚºËÔŽÂë\Documentation\i2c\smbus-protocol  
3.ÔÚÎÄµµÖÐžùŸÝÊÖ²áµÄÊ±ÐòÒªÇóÕÒµœ¶ÔÓŠµÄº¯Êý
  ÀýÈç£º
  °Ž×ÖœÚÐŽµÄÊ±Ðò£ºS->Éè±žµØÖ·<<1|0->ACK->Æ¬ÄÚµØÖ·->ACK->ÊýŸÝ->ACK->STOP
  ÕÒµœŽËº¯Êý£ºi2c_smbus_write_byte_data()
  ŽËº¯ÊýËµÃ÷ÌáÊŸ£ºS Addr Wr [A] Comm [A] Data [A] P //ÍêÈ«·ûºÏ
4.ž³Öµº¯ÊýÃû,ÔÚsourceinsightÖÐÕÒµœº¯ÊýµÄ¶šÒå 
  ÔÚ×ÔŒºµÄÇý¶¯ŽúÂëÖÐÌî³ä²ÎÊýŒŽ¿É        
    
-----------------------------------------------------------------------
